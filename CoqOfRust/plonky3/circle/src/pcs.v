(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module pcs.
  (* StructRecord
    {
      name := "CirclePcs";
      const_params := [];
      ty_params := [ "Val"; "InputMmcs"; "FriMmcs" ];
      fields :=
        [
          ("mmcs", InputMmcs);
          ("fri_config", Ty.apply (Ty.path "p3_fri::config::FriConfig") [] [ FriMmcs ]);
          ("_phantom", Ty.apply (Ty.path "core::marker::PhantomData") [] [ Val ])
        ];
    } *)
  
  Module Impl_core_fmt_Debug_where_core_fmt_Debug_Val_where_p3_field_field_Field_Val_where_core_fmt_Debug_InputMmcs_where_core_fmt_Debug_FriMmcs_for_p3_circle_pcs_CirclePcs_Val_InputMmcs_FriMmcs.
    Definition Self (Val InputMmcs FriMmcs : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_circle::pcs::CirclePcs") [] [ Val; InputMmcs; FriMmcs ].
    
    (* Debug *)
    Definition fmt
        (Val InputMmcs FriMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs in
      match ε, τ, α with
      | [], [], [ self; f ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let f := M.alloc (| f |) in
          M.call_closure (|
            Ty.apply
              (Ty.path "core::result::Result")
              []
              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
            M.get_associated_function (|
              Ty.path "core::fmt::Formatter",
              "debug_struct_field3_finish",
              [],
              []
            |),
            [
              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "CirclePcs" |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "mmcs" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_circle::pcs::CirclePcs",
                        "mmcs"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "fri_config" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_circle::pcs::CirclePcs",
                        "fri_config"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "_phantom" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.alloc (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CirclePcs",
                            "_phantom"
                          |)
                        |)
                      |)
                    |)
                  |)
                |))
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val InputMmcs FriMmcs : Ty.t),
      M.IsTraitInstance
        "core::fmt::Debug"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self Val InputMmcs FriMmcs)
        (* Instance *) [ ("fmt", InstanceField.Method (fmt Val InputMmcs FriMmcs)) ].
  End Impl_core_fmt_Debug_where_core_fmt_Debug_Val_where_p3_field_field_Field_Val_where_core_fmt_Debug_InputMmcs_where_core_fmt_Debug_FriMmcs_for_p3_circle_pcs_CirclePcs_Val_InputMmcs_FriMmcs.
  
  Module Impl_p3_circle_pcs_CirclePcs_Val_InputMmcs_FriMmcs.
    Definition Self (Val InputMmcs FriMmcs : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_circle::pcs::CirclePcs") [] [ Val; InputMmcs; FriMmcs ].
    
    (*
        pub const fn new(mmcs: InputMmcs, fri_config: FriConfig<FriMmcs>) -> Self {
            Self {
                mmcs,
                fri_config,
                _phantom: PhantomData,
            }
        }
    *)
    Definition new
        (Val InputMmcs FriMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs in
      match ε, τ, α with
      | [], [], [ mmcs; fri_config ] =>
        ltac:(M.monadic
          (let mmcs := M.alloc (| mmcs |) in
          let fri_config := M.alloc (| fri_config |) in
          Value.StructRecord
            "p3_circle::pcs::CirclePcs"
            [
              ("mmcs", M.read (| mmcs |));
              ("fri_config", M.read (| fri_config |));
              ("_phantom", Value.StructTuple "core::marker::PhantomData" [])
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_new :
      forall (Val InputMmcs FriMmcs : Ty.t),
      M.IsAssociatedFunction.C (Self Val InputMmcs FriMmcs) "new" (new Val InputMmcs FriMmcs).
    Admitted.
    Global Typeclasses Opaque new.
  End Impl_p3_circle_pcs_CirclePcs_Val_InputMmcs_FriMmcs.
  
  (* StructRecord
    {
      name := "BatchOpening";
      const_params := [];
      ty_params := [ "Val"; "InputMmcs" ];
      fields :=
        [
          ("opened_values",
            Ty.apply
              (Ty.path "alloc::vec::Vec")
              []
              [
                Ty.apply (Ty.path "alloc::vec::Vec") [] [ Val; Ty.path "alloc::alloc::Global" ];
                Ty.path "alloc::alloc::Global"
              ]);
          ("opening_proof",
            Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Proof")
        ];
    } *)
  
  Module underscore.
    Module Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_circle_pcs_BatchOpening_Val_InputMmcs.
      Definition Self (Val InputMmcs : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ].
      
      (* Serialize *)
      Definition serialize
          (Val InputMmcs : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val InputMmcs in
        match ε, τ, α with
        | [], [ __S ], [ self; __serializer ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let __serializer := M.alloc (| __serializer |) in
            M.catch_return
              (Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                ]) (|
              ltac:(M.monadic
                (M.read (|
                  let~ __serde_state :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.associated_in_trait
                            "serde::ser::Serializer"
                            []
                            []
                            __S
                            "SerializeStruct"
                        ] :=
                    M.copy (|
                      M.match_operator (|
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.associated_in_trait
                              "serde::ser::Serializer"
                              []
                              []
                              __S
                              "SerializeStruct"
                          ],
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct"
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "SerializeStruct";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::Serializer",
                                  __S,
                                  [],
                                  [],
                                  "serialize_struct",
                                  [],
                                  []
                                |),
                                [
                                  M.read (| __serializer |);
                                  mk_str (| "BatchOpening" |);
                                  M.call_closure (|
                                    Ty.path "usize",
                                    BinOp.Wrap.add,
                                    [
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.add,
                                        [
                                          M.cast (Ty.path "usize") (Value.Bool false);
                                          Value.Integer IntegerKind.Usize 1
                                        ]
                                      |);
                                      Value.Integer IntegerKind.Usize 1
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual := M.copy (| γ0_0 |) in
                              M.alloc (|
                                M.never_to_any (|
                                  M.read (|
                                    M.return_ (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        M.get_trait_method (|
                                          "core::ops::try_trait::FromResidual",
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Ok";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ],
                                          [],
                                          [
                                            Ty.apply
                                              (Ty.path "core::result::Result")
                                              []
                                              [
                                                Ty.path "core::convert::Infallible";
                                                Ty.associated_in_trait
                                                  "serde::ser::Serializer"
                                                  []
                                                  []
                                                  __S
                                                  "Error"
                                              ]
                                          ],
                                          "from_residual",
                                          [],
                                          []
                                        |),
                                        [ M.read (| residual |) ]
                                      |)
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| γ0_0 |) in
                              val))
                        ]
                      |)
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Val; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "opened_values" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::BatchOpening",
                                        "opened_values"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Val ]
                                    InputMmcs
                                    "Proof"
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "opening_proof" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::BatchOpening",
                                        "opening_proof"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                        ],
                      M.get_trait_method (|
                        "serde::ser::SerializeStruct",
                        Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "SerializeStruct",
                        [],
                        [],
                        "end",
                        [],
                        []
                      |),
                      [ M.read (| __serde_state |) ]
                    |)
                  |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val InputMmcs : Ty.t),
        M.IsTraitInstance
          "serde::ser::Serialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val InputMmcs)
          (* Instance *) [ ("serialize", InstanceField.Method (serialize Val InputMmcs)) ].
    End Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_circle_pcs_BatchOpening_Val_InputMmcs.
    Module Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_circle_pcs_BatchOpening_Val_InputMmcs.
      Definition Self (Val InputMmcs : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ].
      
      (* Deserialize *)
      Definition deserialize
          (Val InputMmcs : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val InputMmcs in
        match ε, τ, α with
        | [], [ __D ], [ __deserializer ] =>
          ltac:(M.monadic
            (let __deserializer := M.alloc (| __deserializer |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ];
                  Ty.associated_in_trait "serde::de::Deserializer" [] [] __D "Error"
                ],
              M.get_trait_method (|
                "serde::de::Deserializer",
                __D,
                [],
                [],
                "deserialize_struct",
                [],
                [
                  Ty.apply
                    (Ty.path "p3_circle::pcs::_'1::deserialize::__Visitor")
                    []
                    [ Val; InputMmcs ]
                ]
              |),
              [
                M.read (| __deserializer |);
                mk_str (| "BatchOpening" |);
                M.read (|
                  get_constant (|
                    "p3_circle::pcs::_'1::deserialize::FIELDS",
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "slice")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                      ]
                  |)
                |);
                Value.StructRecord
                  "p3_circle::pcs::_'1::deserialize::__Visitor"
                  [
                    ("marker", Value.StructTuple "core::marker::PhantomData" []);
                    ("lifetime", Value.StructTuple "core::marker::PhantomData" [])
                  ]
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val InputMmcs : Ty.t),
        M.IsTraitInstance
          "serde::de::Deserialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val InputMmcs)
          (* Instance *) [ ("deserialize", InstanceField.Method (deserialize Val InputMmcs)) ].
    End Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_circle_pcs_BatchOpening_Val_InputMmcs.
    Module Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_for_p3_circle_pcs_CircleInputProof_Val_Challenge_InputMmcs_FriMmcs.
      Definition Self (Val Challenge InputMmcs FriMmcs : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "p3_circle::pcs::CircleInputProof")
          []
          [ Val; Challenge; InputMmcs; FriMmcs ].
      
      (* Serialize *)
      Definition serialize
          (Val Challenge InputMmcs FriMmcs : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val Challenge InputMmcs FriMmcs in
        match ε, τ, α with
        | [], [ __S ], [ self; __serializer ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let __serializer := M.alloc (| __serializer |) in
            M.catch_return
              (Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                ]) (|
              ltac:(M.monadic
                (M.read (|
                  let~ __serde_state :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.associated_in_trait
                            "serde::ser::Serializer"
                            []
                            []
                            __S
                            "SerializeStruct"
                        ] :=
                    M.copy (|
                      M.match_operator (|
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.associated_in_trait
                              "serde::ser::Serializer"
                              []
                              []
                              __S
                              "SerializeStruct"
                          ],
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct"
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "SerializeStruct";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::Serializer",
                                  __S,
                                  [],
                                  [],
                                  "serialize_struct",
                                  [],
                                  []
                                |),
                                [
                                  M.read (| __serializer |);
                                  mk_str (| "CircleInputProof" |);
                                  M.call_closure (|
                                    Ty.path "usize",
                                    BinOp.Wrap.add,
                                    [
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.add,
                                        [
                                          M.call_closure (|
                                            Ty.path "usize",
                                            BinOp.Wrap.add,
                                            [
                                              M.cast (Ty.path "usize") (Value.Bool false);
                                              Value.Integer IntegerKind.Usize 1
                                            ]
                                          |);
                                          Value.Integer IntegerKind.Usize 1
                                        ]
                                      |);
                                      Value.Integer IntegerKind.Usize 1
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual := M.copy (| γ0_0 |) in
                              M.alloc (|
                                M.never_to_any (|
                                  M.read (|
                                    M.return_ (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        M.get_trait_method (|
                                          "core::ops::try_trait::FromResidual",
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Ok";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ],
                                          [],
                                          [
                                            Ty.apply
                                              (Ty.path "core::result::Result")
                                              []
                                              [
                                                Ty.path "core::convert::Infallible";
                                                Ty.associated_in_trait
                                                  "serde::ser::Serializer"
                                                  []
                                                  []
                                                  __S
                                                  "Error"
                                              ]
                                          ],
                                          "from_residual",
                                          [],
                                          []
                                        |),
                                        [ M.read (| residual |) ]
                                      |)
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| γ0_0 |) in
                              val))
                        ]
                      |)
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_circle::pcs::BatchOpening")
                                        []
                                        [ Val; InputMmcs ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "input_openings" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::CircleInputProof",
                                        "input_openings"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "first_layer_siblings" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::CircleInputProof",
                                        "first_layer_siblings"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Challenge ]
                                    FriMmcs
                                    "Proof"
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "first_layer_proof" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::CircleInputProof",
                                        "first_layer_proof"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                        ],
                      M.get_trait_method (|
                        "serde::ser::SerializeStruct",
                        Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "SerializeStruct",
                        [],
                        [],
                        "end",
                        [],
                        []
                      |),
                      [ M.read (| __serde_state |) ]
                    |)
                  |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val Challenge InputMmcs FriMmcs : Ty.t),
        M.IsTraitInstance
          "serde::ser::Serialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val Challenge InputMmcs FriMmcs)
          (* Instance *)
          [ ("serialize", InstanceField.Method (serialize Val Challenge InputMmcs FriMmcs)) ].
    End Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_for_p3_circle_pcs_CircleInputProof_Val_Challenge_InputMmcs_FriMmcs.
    Module Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_for_p3_circle_pcs_CircleInputProof_Val_Challenge_InputMmcs_FriMmcs.
      Definition Self (Val Challenge InputMmcs FriMmcs : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "p3_circle::pcs::CircleInputProof")
          []
          [ Val; Challenge; InputMmcs; FriMmcs ].
      
      (* Deserialize *)
      Definition deserialize
          (Val Challenge InputMmcs FriMmcs : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val Challenge InputMmcs FriMmcs in
        match ε, τ, α with
        | [], [ __D ], [ __deserializer ] =>
          ltac:(M.monadic
            (let __deserializer := M.alloc (| __deserializer |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.apply
                    (Ty.path "p3_circle::pcs::CircleInputProof")
                    []
                    [ Val; Challenge; InputMmcs; FriMmcs ];
                  Ty.associated_in_trait "serde::de::Deserializer" [] [] __D "Error"
                ],
              M.get_trait_method (|
                "serde::de::Deserializer",
                __D,
                [],
                [],
                "deserialize_struct",
                [],
                [
                  Ty.apply
                    (Ty.path "p3_circle::pcs::_'3::deserialize::__Visitor")
                    []
                    [ Val; Challenge; InputMmcs; FriMmcs ]
                ]
              |),
              [
                M.read (| __deserializer |);
                mk_str (| "CircleInputProof" |);
                M.read (|
                  get_constant (|
                    "p3_circle::pcs::_'3::deserialize::FIELDS",
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "slice")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                      ]
                  |)
                |);
                Value.StructRecord
                  "p3_circle::pcs::_'3::deserialize::__Visitor"
                  [
                    ("marker", Value.StructTuple "core::marker::PhantomData" []);
                    ("lifetime", Value.StructTuple "core::marker::PhantomData" [])
                  ]
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val Challenge InputMmcs FriMmcs : Ty.t),
        M.IsTraitInstance
          "serde::de::Deserialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val Challenge InputMmcs FriMmcs)
          (* Instance *)
          [ ("deserialize", InstanceField.Method (deserialize Val Challenge InputMmcs FriMmcs)) ].
    End Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_for_p3_circle_pcs_CircleInputProof_Val_Challenge_InputMmcs_FriMmcs.
    Module Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_serde_ser_Serialize_Witness_for_p3_circle_pcs_CirclePcsProof_Val_Challenge_InputMmcs_FriMmcs_Witness.
      Definition Self (Val Challenge InputMmcs FriMmcs Witness : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "p3_circle::pcs::CirclePcsProof")
          []
          [ Val; Challenge; InputMmcs; FriMmcs; Witness ].
      
      (* Serialize *)
      Definition serialize
          (Val Challenge InputMmcs FriMmcs Witness : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val Challenge InputMmcs FriMmcs Witness in
        match ε, τ, α with
        | [], [ __S ], [ self; __serializer ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let __serializer := M.alloc (| __serializer |) in
            M.catch_return
              (Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                ]) (|
              ltac:(M.monadic
                (M.read (|
                  let~ __serde_state :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.associated_in_trait
                            "serde::ser::Serializer"
                            []
                            []
                            __S
                            "SerializeStruct"
                        ] :=
                    M.copy (|
                      M.match_operator (|
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.associated_in_trait
                              "serde::ser::Serializer"
                              []
                              []
                              __S
                              "SerializeStruct"
                          ],
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct"
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "SerializeStruct";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::Serializer",
                                  __S,
                                  [],
                                  [],
                                  "serialize_struct",
                                  [],
                                  []
                                |),
                                [
                                  M.read (| __serializer |);
                                  mk_str (| "CirclePcsProof" |);
                                  M.call_closure (|
                                    Ty.path "usize",
                                    BinOp.Wrap.add,
                                    [
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.add,
                                        [
                                          M.call_closure (|
                                            Ty.path "usize",
                                            BinOp.Wrap.add,
                                            [
                                              M.cast (Ty.path "usize") (Value.Bool false);
                                              Value.Integer IntegerKind.Usize 1
                                            ]
                                          |);
                                          Value.Integer IntegerKind.Usize 1
                                        ]
                                      |);
                                      Value.Integer IntegerKind.Usize 1
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual := M.copy (| γ0_0 |) in
                              M.alloc (|
                                M.never_to_any (|
                                  M.read (|
                                    M.return_ (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        M.get_trait_method (|
                                          "core::ops::try_trait::FromResidual",
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Ok";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ],
                                          [],
                                          [
                                            Ty.apply
                                              (Ty.path "core::result::Result")
                                              []
                                              [
                                                Ty.path "core::convert::Infallible";
                                                Ty.associated_in_trait
                                                  "serde::ser::Serializer"
                                                  []
                                                  []
                                                  __S
                                                  "Error"
                                              ]
                                          ],
                                          "from_residual",
                                          [],
                                          []
                                        |),
                                        [ M.read (| residual |) ]
                                      |)
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| γ0_0 |) in
                              val))
                        ]
                      |)
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Challenge ]
                                    FriMmcs
                                    "Commitment"
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "first_layer_commitment" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::CirclePcsProof",
                                        "first_layer_commitment"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "lambdas" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::CirclePcsProof",
                                        "lambdas"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "p3_circle::proof::CircleFriProof")
                                    []
                                    [
                                      Challenge;
                                      FriMmcs;
                                      Witness;
                                      Ty.apply
                                        (Ty.path "p3_circle::pcs::CircleInputProof")
                                        []
                                        [ Val; Challenge; InputMmcs; FriMmcs ]
                                    ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "fri_proof" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_circle::pcs::CirclePcsProof",
                                        "fri_proof"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                        ],
                      M.get_trait_method (|
                        "serde::ser::SerializeStruct",
                        Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "SerializeStruct",
                        [],
                        [],
                        "end",
                        [],
                        []
                      |),
                      [ M.read (| __serde_state |) ]
                    |)
                  |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val Challenge InputMmcs FriMmcs Witness : Ty.t),
        M.IsTraitInstance
          "serde::ser::Serialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val Challenge InputMmcs FriMmcs Witness)
          (* Instance *)
          [ ("serialize", InstanceField.Method (serialize Val Challenge InputMmcs FriMmcs Witness))
          ].
    End Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_serde_ser_Serialize_Witness_for_p3_circle_pcs_CirclePcsProof_Val_Challenge_InputMmcs_FriMmcs_Witness.
    Module Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_serde_de_Deserialize_Witness_for_p3_circle_pcs_CirclePcsProof_Val_Challenge_InputMmcs_FriMmcs_Witness.
      Definition Self (Val Challenge InputMmcs FriMmcs Witness : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "p3_circle::pcs::CirclePcsProof")
          []
          [ Val; Challenge; InputMmcs; FriMmcs; Witness ].
      
      (* Deserialize *)
      Definition deserialize
          (Val Challenge InputMmcs FriMmcs Witness : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val Challenge InputMmcs FriMmcs Witness in
        match ε, τ, α with
        | [], [ __D ], [ __deserializer ] =>
          ltac:(M.monadic
            (let __deserializer := M.alloc (| __deserializer |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.apply
                    (Ty.path "p3_circle::pcs::CirclePcsProof")
                    []
                    [ Val; Challenge; InputMmcs; FriMmcs; Witness ];
                  Ty.associated_in_trait "serde::de::Deserializer" [] [] __D "Error"
                ],
              M.get_trait_method (|
                "serde::de::Deserializer",
                __D,
                [],
                [],
                "deserialize_struct",
                [],
                [
                  Ty.apply
                    (Ty.path "p3_circle::pcs::_'5::deserialize::__Visitor")
                    []
                    [ Val; Challenge; InputMmcs; FriMmcs; Witness ]
                ]
              |),
              [
                M.read (| __deserializer |);
                mk_str (| "CirclePcsProof" |);
                M.read (|
                  get_constant (|
                    "p3_circle::pcs::_'5::deserialize::FIELDS",
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "slice")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                      ]
                  |)
                |);
                Value.StructRecord
                  "p3_circle::pcs::_'5::deserialize::__Visitor"
                  [
                    ("marker", Value.StructTuple "core::marker::PhantomData" []);
                    ("lifetime", Value.StructTuple "core::marker::PhantomData" [])
                  ]
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val Challenge InputMmcs FriMmcs Witness : Ty.t),
        M.IsTraitInstance
          "serde::de::Deserialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val Challenge InputMmcs FriMmcs Witness)
          (* Instance *)
          [
            ("deserialize",
              InstanceField.Method (deserialize Val Challenge InputMmcs FriMmcs Witness))
          ].
    End Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_field_field_Field_Challenge_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_serde_de_Deserialize_Witness_for_p3_circle_pcs_CirclePcsProof_Val_Challenge_InputMmcs_FriMmcs_Witness.
  End underscore.
  
  
  Module Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_circle_pcs_BatchOpening_Val_InputMmcs.
    Definition Self (Val InputMmcs : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ].
    
    (* Clone *)
    Definition clone
        (Val InputMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructRecord
            "p3_circle::pcs::BatchOpening"
            [
              ("opened_values",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [ Val; Ty.path "alloc::alloc::Global" ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ Val; Ty.path "alloc::alloc::Global" ];
                        Ty.path "alloc::alloc::Global"
                      ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::BatchOpening",
                            "opened_values"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("opening_proof",
                M.call_closure (|
                  Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Proof",
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Proof",
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::BatchOpening",
                            "opening_proof"
                          |)
                        |)
                      |)
                    |)
                  ]
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val InputMmcs : Ty.t),
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self Val InputMmcs)
        (* Instance *) [ ("clone", InstanceField.Method (clone Val InputMmcs)) ].
  End Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_circle_pcs_BatchOpening_Val_InputMmcs.
  
  (* StructRecord
    {
      name := "CircleInputProof";
      const_params := [];
      ty_params := [ "Val"; "Challenge"; "InputMmcs"; "FriMmcs" ];
      fields :=
        [
          ("input_openings",
            Ty.apply
              (Ty.path "alloc::vec::Vec")
              []
              [
                Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ];
                Ty.path "alloc::alloc::Global"
              ]);
          ("first_layer_siblings",
            Ty.apply (Ty.path "alloc::vec::Vec") [] [ Challenge; Ty.path "alloc::alloc::Global" ]);
          ("first_layer_proof",
            Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Proof")
        ];
    } *)
  
  
  
  Module Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_Challenge_where_p3_field_field_Field_Challenge_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_core_clone_Clone_FriMmcs_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_core_clone_Clone_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Proof_for_p3_circle_pcs_CircleInputProof_Val_Challenge_InputMmcs_FriMmcs.
    Definition Self (Val Challenge InputMmcs FriMmcs : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_circle::pcs::CircleInputProof")
        []
        [ Val; Challenge; InputMmcs; FriMmcs ].
    
    (* Clone *)
    Definition clone
        (Val Challenge InputMmcs FriMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Challenge InputMmcs FriMmcs in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructRecord
            "p3_circle::pcs::CircleInputProof"
            [
              ("input_openings",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply (Ty.path "p3_circle::pcs::BatchOpening") [] [ Val; InputMmcs ];
                        Ty.path "alloc::alloc::Global"
                      ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CircleInputProof",
                            "input_openings"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("first_layer_siblings",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [ Challenge; Ty.path "alloc::alloc::Global" ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [ Challenge; Ty.path "alloc::alloc::Global" ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CircleInputProof",
                            "first_layer_siblings"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("first_layer_proof",
                M.call_closure (|
                  Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Proof",
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Proof",
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CircleInputProof",
                            "first_layer_proof"
                          |)
                        |)
                      |)
                    |)
                  ]
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val Challenge InputMmcs FriMmcs : Ty.t),
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self Val Challenge InputMmcs FriMmcs)
        (* Instance *) [ ("clone", InstanceField.Method (clone Val Challenge InputMmcs FriMmcs)) ].
  End Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_Challenge_where_p3_field_field_Field_Challenge_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_core_clone_Clone_FriMmcs_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_core_clone_Clone_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Proof_for_p3_circle_pcs_CircleInputProof_Val_Challenge_InputMmcs_FriMmcs.
  
  (*
  Enum InputError
  {
    const_params := [];
    ty_params := [ "InputMmcsError"; "FriMmcsError" ];
    variants :=
      [
        {
          name := "InputMmcsError";
          item := StructTuple [ InputMmcsError ];
        };
        {
          name := "FirstLayerMmcsError";
          item := StructTuple [ FriMmcsError ];
        };
        {
          name := "InputShapeError";
          item := StructTuple [];
        }
      ];
  }
  *)
  
  Axiom IsDiscriminant_InputError_InputMmcsError :
    M.IsDiscriminant "p3_circle::pcs::InputError::InputMmcsError" 0.
  Axiom IsDiscriminant_InputError_FirstLayerMmcsError :
    M.IsDiscriminant "p3_circle::pcs::InputError::FirstLayerMmcsError" 1.
  Axiom IsDiscriminant_InputError_InputShapeError :
    M.IsDiscriminant "p3_circle::pcs::InputError::InputShapeError" 2.
  
  Module Impl_core_fmt_Debug_where_core_fmt_Debug_InputMmcsError_where_core_fmt_Debug_FriMmcsError_for_p3_circle_pcs_InputError_InputMmcsError_FriMmcsError.
    Definition Self (InputMmcsError FriMmcsError : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_circle::pcs::InputError") [] [ InputMmcsError; FriMmcsError ].
    
    (* Debug *)
    Definition fmt
        (InputMmcsError FriMmcsError : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self InputMmcsError FriMmcsError in
      match ε, τ, α with
      | [], [], [ self; f ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let f := M.alloc (| f |) in
          M.read (|
            M.match_operator (|
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.apply
                    (Ty.path "core::result::Result")
                    []
                    [ Ty.tuple []; Ty.path "core::fmt::Error" ]
                ],
              self,
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ := M.read (| γ |) in
                    let γ1_0 :=
                      M.SubPointer.get_struct_tuple_field (|
                        γ,
                        "p3_circle::pcs::InputError::InputMmcsError",
                        0
                      |) in
                    let __self_0 := M.alloc (| γ1_0 |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::result::Result")
                          []
                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                        M.get_associated_function (|
                          Ty.path "core::fmt::Formatter",
                          "debug_tuple_field1_finish",
                          [],
                          []
                        |),
                        [
                          M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (| mk_str (| "InputMmcsError" |) |)
                          |);
                          (* Unsize *)
                          M.pointer_coercion
                            (M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (| M.borrow (| Pointer.Kind.Ref, __self_0 |) |)
                            |))
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let γ := M.read (| γ |) in
                    let γ1_0 :=
                      M.SubPointer.get_struct_tuple_field (|
                        γ,
                        "p3_circle::pcs::InputError::FirstLayerMmcsError",
                        0
                      |) in
                    let __self_0 := M.alloc (| γ1_0 |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::result::Result")
                          []
                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                        M.get_associated_function (|
                          Ty.path "core::fmt::Formatter",
                          "debug_tuple_field1_finish",
                          [],
                          []
                        |),
                        [
                          M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (| mk_str (| "FirstLayerMmcsError" |) |)
                          |);
                          (* Unsize *)
                          M.pointer_coercion
                            (M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (| M.borrow (| Pointer.Kind.Ref, __self_0 |) |)
                            |))
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let γ := M.read (| γ |) in
                    let _ :=
                      M.is_struct_tuple (| γ, "p3_circle::pcs::InputError::InputShapeError" |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::result::Result")
                          []
                          [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                        M.get_associated_function (|
                          Ty.path "core::fmt::Formatter",
                          "write_str",
                          [],
                          []
                        |),
                        [
                          M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (| mk_str (| "InputShapeError" |) |)
                          |)
                        ]
                      |)
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (InputMmcsError FriMmcsError : Ty.t),
      M.IsTraitInstance
        "core::fmt::Debug"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self InputMmcsError FriMmcsError)
        (* Instance *) [ ("fmt", InstanceField.Method (fmt InputMmcsError FriMmcsError)) ].
  End Impl_core_fmt_Debug_where_core_fmt_Debug_InputMmcsError_where_core_fmt_Debug_FriMmcsError_for_p3_circle_pcs_InputError_InputMmcsError_FriMmcsError.
  
  (* StructRecord
    {
      name := "CirclePcsProof";
      const_params := [];
      ty_params := [ "Val"; "Challenge"; "InputMmcs"; "FriMmcs"; "Witness" ];
      fields :=
        [
          ("first_layer_commitment",
            Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Commitment");
          ("lambdas",
            Ty.apply (Ty.path "alloc::vec::Vec") [] [ Challenge; Ty.path "alloc::alloc::Global" ]);
          ("fri_proof",
            Ty.apply
              (Ty.path "p3_circle::proof::CircleFriProof")
              []
              [
                Challenge;
                FriMmcs;
                Witness;
                Ty.apply
                  (Ty.path "p3_circle::pcs::CircleInputProof")
                  []
                  [ Val; Challenge; InputMmcs; FriMmcs ]
              ])
        ];
    } *)
  
  
  
  Module Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_Challenge_where_p3_field_field_Field_Challenge_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_core_clone_Clone_FriMmcs_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_core_clone_Clone_Witness_where_core_clone_Clone_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Commitment_for_p3_circle_pcs_CirclePcsProof_Val_Challenge_InputMmcs_FriMmcs_Witness.
    Definition Self (Val Challenge InputMmcs FriMmcs Witness : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_circle::pcs::CirclePcsProof")
        []
        [ Val; Challenge; InputMmcs; FriMmcs; Witness ].
    
    (* Clone *)
    Definition clone
        (Val Challenge InputMmcs FriMmcs Witness : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Challenge InputMmcs FriMmcs Witness in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructRecord
            "p3_circle::pcs::CirclePcsProof"
            [
              ("first_layer_commitment",
                M.call_closure (|
                  Ty.associated_in_trait
                    "p3_commit::mmcs::Mmcs"
                    []
                    [ Challenge ]
                    FriMmcs
                    "Commitment",
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.associated_in_trait
                      "p3_commit::mmcs::Mmcs"
                      []
                      [ Challenge ]
                      FriMmcs
                      "Commitment",
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CirclePcsProof",
                            "first_layer_commitment"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("lambdas",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [ Challenge; Ty.path "alloc::alloc::Global" ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [ Challenge; Ty.path "alloc::alloc::Global" ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CirclePcsProof",
                            "lambdas"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("fri_proof",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "p3_circle::proof::CircleFriProof")
                    []
                    [
                      Challenge;
                      FriMmcs;
                      Witness;
                      Ty.apply
                        (Ty.path "p3_circle::pcs::CircleInputProof")
                        []
                        [ Val; Challenge; InputMmcs; FriMmcs ]
                    ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "p3_circle::proof::CircleFriProof")
                      []
                      [
                        Challenge;
                        FriMmcs;
                        Witness;
                        Ty.apply
                          (Ty.path "p3_circle::pcs::CircleInputProof")
                          []
                          [ Val; Challenge; InputMmcs; FriMmcs ]
                      ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_circle::pcs::CirclePcsProof",
                            "fri_proof"
                          |)
                        |)
                      |)
                    |)
                  ]
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val Challenge InputMmcs FriMmcs Witness : Ty.t),
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self Val Challenge InputMmcs FriMmcs Witness)
        (* Instance *)
        [ ("clone", InstanceField.Method (clone Val Challenge InputMmcs FriMmcs Witness)) ].
  End Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_Challenge_where_p3_field_field_Field_Challenge_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_core_clone_Clone_FriMmcs_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_core_clone_Clone_Witness_where_core_clone_Clone_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Commitment_for_p3_circle_pcs_CirclePcsProof_Val_Challenge_InputMmcs_FriMmcs_Witness.
  
  Module Impl_p3_commit_pcs_Pcs_where_p3_field_extension_complex_ComplexExtendable_Val_where_p3_field_field_ExtensionField_Challenge_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_p3_challenger_FieldChallenger_Challenger_Val_where_p3_challenger_grinding_challenger_GrindingChallenger_Challenger_where_p3_challenger_CanObserve_Challenger_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Commitment_Challenge_Challenger_for_p3_circle_pcs_CirclePcs_Val_InputMmcs_FriMmcs.
    Definition Self (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_circle::pcs::CirclePcs") [] [ Val; InputMmcs; FriMmcs ].
    
    (*     type Domain = CircleDomain<Val>; *)
    Definition _Domain (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ].
    
    (*     type Commitment = InputMmcs::Commitment; *)
    Definition _Commitment (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Commitment".
    
    (*     type ProverData = InputMmcs::ProverData<RowMajorMatrix<Val>>; *)
    Definition _ProverData (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.associated_in_trait
        "p3_commit::mmcs::Mmcs"
        []
        [
          Val;
          Ty.apply
            (Ty.path "p3_matrix::dense::DenseMatrix")
            []
            [ Val; Ty.apply (Ty.path "alloc::vec::Vec") [] [ Val; Ty.path "alloc::alloc::Global" ] ]
        ]
        InputMmcs
        "ProverData".
    
    (*     type EvaluationsOnDomain<'a> = RowIndexMappedView<CfftPerm, DenseMatrix<Val, Cow<'a, [Val]>>>; *)
    Definition _EvaluationsOnDomain (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
        []
        [
          Ty.path "p3_circle::ordering::CfftPerm";
          Ty.apply
            (Ty.path "p3_matrix::dense::DenseMatrix")
            []
            [
              Val;
              Ty.apply (Ty.path "alloc::borrow::Cow") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ]
            ]
        ].
    
    (*     type Proof = CirclePcsProof<Val, Challenge, InputMmcs, FriMmcs, Challenger::Witness>; *)
    Definition _Proof (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_circle::pcs::CirclePcsProof")
        []
        [
          Val;
          Challenge;
          InputMmcs;
          FriMmcs;
          Ty.associated_in_trait
            "p3_challenger::grinding_challenger::GrindingChallenger"
            []
            []
            Challenger
            "Witness"
        ].
    
    (*     type Error = FriError<FriMmcs::Error, InputError<InputMmcs::Error, FriMmcs::Error>>; *)
    Definition _Error (Val InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_fri::verifier::FriError")
        []
        [
          Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Error";
          Ty.apply
            (Ty.path "p3_circle::pcs::InputError")
            []
            [
              Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Error";
              Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Error"
            ]
        ].
    
    (*
        fn natural_domain_for_degree(&self, degree: usize) -> Self::Domain {
            CircleDomain::standard(log2_strict_usize(degree))
        }
    *)
    Definition natural_domain_for_degree
        (Val InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; degree ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let degree := M.alloc (| degree |) in
          M.call_closure (|
            Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ],
            M.get_associated_function (|
              Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ],
              "standard",
              [],
              []
            |),
            [
              M.call_closure (|
                Ty.path "usize",
                M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                [ M.read (| degree |) ]
              |)
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn commit(
            &self,
            evaluations: Vec<(Self::Domain, RowMajorMatrix<Val>)>,
        ) -> (Self::Commitment, Self::ProverData) {
            let ldes = evaluations
                .into_iter()
                .map(|(domain, evals)| {
                    assert!(
                        domain.log_n >= 2,
                        "CirclePcs cannot commit to a matrix with fewer than 4 rows.",
                        // (because we bivariate fold one bit, and fri needs one more bit)
                    );
                    CircleEvaluations::from_natural_order(domain, evals)
                        .extrapolate(CircleDomain::standard(
                            domain.log_n + self.fri_config.log_blowup,
                        ))
                        .to_cfft_order()
                })
                .collect_vec();
            let (comm, mmcs_data) = self.mmcs.commit(ldes);
            (comm, mmcs_data)
        }
    *)
    Definition commit
        (Val InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; evaluations ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let evaluations := M.alloc (| evaluations |) in
          M.read (|
            let~ ldes :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Val;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Val; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Val;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Val; Ty.path "alloc::alloc::Global" ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "itertools::Itertools",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ];
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.tuple
                                  [
                                    Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ];
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                      ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ])
                      ],
                    [],
                    [],
                    "collect_vec",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ];
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "p3_circle::domain::CircleDomain")
                                        []
                                        [ Val ];
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Val; Ty.path "alloc::alloc::Global" ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ];
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "p3_circle::domain::CircleDomain")
                                        []
                                        [ Val ];
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Val; Ty.path "alloc::alloc::Global" ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ];
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ];
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                      ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [ M.read (| evaluations |) ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_circle::domain::CircleDomain")
                                                      []
                                                      [ Val ];
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let domain := M.copy (| γ0_0 |) in
                                          let evals := M.copy (| γ0_1 |) in
                                          M.read (|
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.match_operator (|
                                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                M.alloc (| Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use
                                                          (M.alloc (|
                                                            UnOp.not (|
                                                              M.call_closure (|
                                                                Ty.path "bool",
                                                                BinOp.ge,
                                                                [
                                                                  M.read (|
                                                                    M.SubPointer.get_struct_record_field (|
                                                                      domain,
                                                                      "p3_circle::domain::CircleDomain",
                                                                      "log_n"
                                                                    |)
                                                                  |);
                                                                  Value.Integer IntegerKind.Usize 2
                                                                ]
                                                              |)
                                                            |)
                                                          |)) in
                                                      let _ :=
                                                        is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      M.alloc (|
                                                        M.never_to_any (|
                                                          M.call_closure (|
                                                            Ty.path "never",
                                                            M.get_function (|
                                                              "core::panicking::panic_fmt",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.path "core::fmt::Arguments",
                                                                M.get_associated_function (|
                                                                  Ty.path "core::fmt::Arguments",
                                                                  "new_const",
                                                                  [
                                                                    Value.Integer
                                                                      IntegerKind.Usize
                                                                      1
                                                                  ],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.alloc (|
                                                                          Value.Array
                                                                            [
                                                                              mk_str (|
                                                                                "CirclePcs cannot commit to a matrix with fewer than 4 rows."
                                                                              |)
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)));
                                                  fun γ =>
                                                    ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                                ]
                                              |) in
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "p3_circle::cfft::CircleEvaluations")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ],
                                                  "to_cfft_order",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "p3_circle::cfft::CircleEvaluations")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [ Val; Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_circle::cfft::CircleEvaluations")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::row_index_mapped::RowIndexMappedView")
                                                            []
                                                            [
                                                              Ty.path
                                                                "p3_circle::ordering::CfftPerm";
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ],
                                                      "extrapolate",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_circle::cfft::CircleEvaluations")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::row_index_mapped::RowIndexMappedView")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "p3_circle::ordering::CfftPerm";
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_circle::cfft::CircleEvaluations")
                                                            []
                                                            [
                                                              Val;
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ],
                                                          "from_natural_order",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| domain |); M.read (| evals |) ]
                                                      |);
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_circle::domain::CircleDomain")
                                                          []
                                                          [ Val ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_circle::domain::CircleDomain")
                                                            []
                                                            [ Val ],
                                                          "standard",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            BinOp.Wrap.add,
                                                            [
                                                              M.read (|
                                                                M.SubPointer.get_struct_record_field (|
                                                                  domain,
                                                                  "p3_circle::domain::CircleDomain",
                                                                  "log_n"
                                                                |)
                                                              |);
                                                              M.read (|
                                                                M.SubPointer.get_struct_record_field (|
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    M.deref (| M.read (| self |) |),
                                                                    "p3_circle::pcs::CirclePcs",
                                                                    "fri_config"
                                                                  |),
                                                                  "p3_fri::config::FriConfig",
                                                                  "log_blowup"
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |) in
            M.match_operator (|
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.tuple
                    [
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [ Val ]
                        InputMmcs
                        "Commitment";
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [
                          Val;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ]
                        ]
                        InputMmcs
                        "ProverData"
                    ]
                ],
              M.alloc (|
                M.call_closure (|
                  Ty.tuple
                    [
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [ Val ]
                        InputMmcs
                        "Commitment";
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [
                          Val;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ]
                        ]
                        InputMmcs
                        "ProverData"
                    ],
                  M.get_trait_method (|
                    "p3_commit::mmcs::Mmcs",
                    InputMmcs,
                    [],
                    [ Val ],
                    "commit",
                    [],
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Val;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Val; Ty.path "alloc::alloc::Global" ]
                        ]
                    ]
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_circle::pcs::CirclePcs",
                        "mmcs"
                      |)
                    |);
                    M.read (| ldes |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                    let comm := M.copy (| γ0_0 |) in
                    let mmcs_data := M.copy (| γ0_1 |) in
                    M.alloc (| Value.Tuple [ M.read (| comm |); M.read (| mmcs_data |) ] |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn get_evaluations_on_domain<'a>(
            &self,
            data: &'a Self::ProverData,
            idx: usize,
            domain: Self::Domain,
        ) -> Self::EvaluationsOnDomain<'a> {
            let mat = self.mmcs.get_matrices(data)[idx].as_view();
            let committed_domain = CircleDomain::standard(log2_strict_usize(mat.height()));
            if domain == committed_domain {
                mat.as_cow().cfft_perm_rows()
            } else {
                CircleEvaluations::from_cfft_order(committed_domain, mat)
                    .extrapolate(domain)
                    .to_cfft_order()
                    .as_cow()
                    .cfft_perm_rows()
            }
        }
    *)
    Definition get_evaluations_on_domain
        (Val InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; data; idx; domain ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let data := M.alloc (| data |) in
          let idx := M.alloc (| idx |) in
          let domain := M.alloc (| domain |) in
          M.read (|
            let~ mat :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "p3_matrix::dense::DenseMatrix")
                      []
                      [ Val; Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ] ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [ Val; Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ] ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "p3_matrix::dense::DenseMatrix")
                      []
                      [
                        Val;
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ Val; Ty.path "alloc::alloc::Global" ]
                      ],
                    "as_view",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.read (|
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::ops::index::Index",
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ],
                                [],
                                [ Ty.path "usize" ],
                                "index",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Val; Ty.path "alloc::alloc::Global" ]
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ],
                                      M.get_trait_method (|
                                        "p3_commit::mmcs::Mmcs",
                                        InputMmcs,
                                        [],
                                        [ Val ],
                                        "get_matrices",
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.SubPointer.get_struct_record_field (|
                                            M.deref (| M.read (| self |) |),
                                            "p3_circle::pcs::CirclePcs",
                                            "mmcs"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| data |) |)
                                        |)
                                      ]
                                    |)
                                  |)
                                |);
                                M.read (| idx |)
                              ]
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              |) in
            let~ committed_domain :
                Ty.apply
                  (Ty.path "*")
                  []
                  [ Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ] ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ],
                  M.get_associated_function (|
                    Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ],
                    "standard",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                      [
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_trait_method (|
                            "p3_matrix::Matrix",
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                              ],
                            [],
                            [ Val ],
                            "height",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            M.match_operator (|
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.apply
                    (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                    []
                    [
                      Ty.path "p3_circle::ordering::CfftPerm";
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Val;
                          Ty.apply
                            (Ty.path "alloc::borrow::Cow")
                            []
                            [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                        ]
                    ]
                ],
              M.alloc (| Value.Tuple [] |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ :=
                      M.use
                        (M.alloc (|
                          M.call_closure (|
                            Ty.path "bool",
                            M.get_trait_method (|
                              "core::cmp::PartialEq",
                              Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ],
                              [],
                              [ Ty.apply (Ty.path "p3_circle::domain::CircleDomain") [] [ Val ] ],
                              "eq",
                              [],
                              []
                            |),
                            [
                              M.borrow (| Pointer.Kind.Ref, domain |);
                              M.borrow (| Pointer.Kind.Ref, committed_domain |)
                            ]
                          |)
                        |)) in
                    let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                          []
                          [
                            Ty.path "p3_circle::ordering::CfftPerm";
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::borrow::Cow")
                                  []
                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                              ]
                          ],
                        M.get_trait_method (|
                          "p3_circle::ordering::CfftPermutable",
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::borrow::Cow")
                                []
                                [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                            ],
                          [],
                          [ Val ],
                          "cfft_perm_rows",
                          [],
                          []
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::borrow::Cow")
                                  []
                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                              ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                ],
                              "as_cow",
                              [],
                              []
                            |),
                            [ M.read (| mat |) ]
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                          []
                          [
                            Ty.path "p3_circle::ordering::CfftPerm";
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::borrow::Cow")
                                  []
                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                              ]
                          ],
                        M.get_trait_method (|
                          "p3_circle::ordering::CfftPermutable",
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::borrow::Cow")
                                []
                                [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                            ],
                          [],
                          [ Val ],
                          "cfft_perm_rows",
                          [],
                          []
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::borrow::Cow")
                                  []
                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                              ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Val; Ty.path "alloc::alloc::Global" ]
                                ],
                              "as_cow",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                  ],
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "p3_circle::cfft::CircleEvaluations")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ],
                                  "to_cfft_order",
                                  [],
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "p3_circle::cfft::CircleEvaluations")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ],
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "p3_circle::cfft::CircleEvaluations")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                            ]
                                        ],
                                      "extrapolate",
                                      [],
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "p3_circle::cfft::CircleEvaluations")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                              ]
                                          ],
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "p3_circle::cfft::CircleEvaluations")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ]
                                            ],
                                          "from_cfft_order",
                                          [],
                                          []
                                        |),
                                        [ M.read (| committed_domain |); M.read (| mat |) ]
                                      |);
                                      M.read (| domain |)
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn open(
            &self,
            // For each round,
            rounds: Vec<(
                &Self::ProverData,
                // for each matrix,
                Vec<
                    // points to open
                    Vec<Challenge>,
                >,
            )>,
            challenger: &mut Challenger,
        ) -> (OpenedValues<Challenge>, Self::Proof) {
            // Open matrices at points
            let values: OpenedValues<Challenge> = rounds
                .iter()
                .map(|(data, points_for_mats)| {
                    let mats = self.mmcs.get_matrices(data);
                    debug_assert_eq!(
                        mats.len(),
                        points_for_mats.len(),
                        "Mismatched number of matrices and points"
                    );
                    izip!(mats, points_for_mats)
                        .map(|(mat, points_for_mat)| {
                            let log_height = log2_strict_usize(mat.height());
                            // It was committed in cfft order.
                            let evals = CircleEvaluations::from_cfft_order(
                                CircleDomain::standard(log_height),
                                mat.as_view(),
                            );
                            points_for_mat
                                .iter()
                                .map(|&zeta| {
                                    let zeta = Point::from_projective_line(zeta);
                                    let ps_at_zeta =
                                        info_span!("compute opened values with Lagrange interpolation")
                                            .in_scope(|| evals.evaluate_at_point(zeta));
                                    ps_at_zeta
                                        .iter()
                                        .for_each(|&p| challenger.observe_algebra_element(p));
                                    ps_at_zeta
                                })
                                .collect()
                        })
                        .collect()
                })
                .collect();
    
            // Batch combination challenge
            let alpha: Challenge = challenger.sample_algebra_element();
    
            /*
            We are reducing columns ("ro" = reduced opening) with powers of alpha:
              ro = .. + α^n c_n + α^(n+1) c_(n+1) + ..
            But we want to precompute small powers of alpha, and batch the columns. So we can do:
              ro = .. + α^n (α^0 c_n + α^1 c_(n+1) + ..) + ..
            reusing the α^0, α^1, etc., then at the end of each column batch we multiply by the α^n.
            (Due to circle stark specifics, we need 2 powers of α for each column, so actually α^(2n)).
            We store this α^(2n), the running reducing factor per log_height, and call it the "alpha offset".
            */
    
            // log_height -> (alpha offset, reduced openings column)
            let mut reduced_openings: BTreeMap<usize, (Challenge, Vec<Challenge>)> = BTreeMap::new();
    
            rounds
                .iter()
                .zip(values.iter())
                .for_each(|((data, points_for_mats), values)| {
                    let mats = self.mmcs.get_matrices(data);
                    izip!(mats, points_for_mats, values).for_each(|(mat, points_for_mat, values)| {
                        let log_height = log2_strict_usize(mat.height());
                        // It was committed in cfft order.
                        let evals = CircleEvaluations::from_cfft_order(
                            CircleDomain::standard(log_height),
                            mat.as_view(),
                        );
    
                        let (alpha_offset, reduced_opening_for_log_height) =
                            reduced_openings.entry(log_height).or_insert_with(|| {
                                (Challenge::ONE, vec![Challenge::ZERO; 1 << log_height])
                            });
    
                        points_for_mat
                            .iter()
                            .zip(values.iter())
                            .for_each(|(&zeta, ps_at_zeta)| {
                                let zeta = Point::from_projective_line(zeta);
    
                                // Reduce this matrix, as a deep quotient, into one column with powers of α.
                                let mat_ros = evals.deep_quotient_reduce(alpha, zeta, ps_at_zeta);
    
                                // Fold it into our running reduction, offset by alpha_offset.
                                reduced_opening_for_log_height
                                    .par_iter_mut()
                                    .zip(mat_ros)
                                    .for_each(|(ro, mat_ro)| {
                                        *ro += *alpha_offset * mat_ro;
                                    });
    
                                // Update alpha_offset from α^i -> α^(i + 2 * width)
                                *alpha_offset *= alpha.exp_u64(2 * evals.values.width() as u64);
                            });
                    });
                });
    
            // Iterate over our reduced columns and extract lambda - the multiple of the vanishing polynomial
            // which may appear in the reduced quotient due to CFFT dimension gap.
    
            let mut lambdas = vec![];
            let mut log_heights = vec![];
            let first_layer_mats: Vec<RowMajorMatrix<Challenge>> = reduced_openings
                .into_iter()
                .map(|(log_height, (_, mut ro))| {
                    assert!(log_height > 0);
                    log_heights.push(log_height);
                    let lambda = extract_lambda(&mut ro, self.fri_config.log_blowup);
                    lambdas.push(lambda);
                    // Prepare for first layer fold with 2 siblings per leaf.
                    RowMajorMatrix::new(ro, 2)
                })
                .collect();
            let log_max_height = log_heights.iter().max().copied().unwrap();
    
            // Commit to reduced openings at each log_height, so we can challenge a global
            // folding factor for all first layers, which we use for a "manual" (not part of p3-fri) fold.
            // This is necessary because the first layer of folding uses different twiddles, so it's easiest
            // to do it here, before p3-fri.
    
            let (first_layer_commitment, first_layer_data) =
                self.fri_config.mmcs.commit(first_layer_mats);
            challenger.observe(first_layer_commitment.clone());
            let bivariate_beta: Challenge = challenger.sample_algebra_element();
    
            // Fold all first layers at bivariate_beta.
    
            let fri_input: Vec<Vec<Challenge>> = self
                .fri_config
                .mmcs
                .get_matrices(&first_layer_data)
                .into_iter()
                .map(|m| fold_y(bivariate_beta, m.as_view()))
                // Reverse, because FRI expects descending by height
                .rev()
                .collect();
    
            let g: CircleFriConfig<Val, Challenge, InputMmcs, FriMmcs> =
                CircleFriGenericConfig(PhantomData);
    
            let fri_proof = prove(&g, &self.fri_config, fri_input, challenger, |index| {
                // CircleFriFolder asks for an extra query index bit, so we use that here to index
                // the first layer fold.
    
                // Open the input (big opening, lots of columns) at the full index...
                let input_openings = rounds
                    .iter()
                    .map(|(data, _)| {
                        let log_max_batch_height = log2_strict_usize(self.mmcs.get_max_height(data));
                        let reduced_index = index >> (log_max_height - log_max_batch_height);
                        let (opened_values, opening_proof) = self.mmcs.open_batch(reduced_index, data);
                        BatchOpening {
                            opened_values,
                            opening_proof,
                        }
                    })
                    .collect();
    
                // We committed to first_layer in pairs, so open the reduced index and include the sibling
                // as part of the input proof.
                let (first_layer_values, first_layer_proof) = self
                    .fri_config
                    .mmcs
                    .open_batch(index >> 1, &first_layer_data);
                let first_layer_siblings = izip!(&first_layer_values, &log_heights)
                    .map(|(v, log_height)| {
                        let reduced_index = index >> (log_max_height - log_height);
                        let sibling_index = (reduced_index & 1) ^ 1;
                        v[sibling_index]
                    })
                    .collect();
                CircleInputProof {
                    input_openings,
                    first_layer_siblings,
                    first_layer_proof,
                }
            });
    
            (
                values,
                CirclePcsProof {
                    first_layer_commitment,
                    lambdas,
                    fri_proof,
                },
            )
        }
    *)
    Definition open
        (Val InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; rounds; challenger ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let rounds := M.alloc (| rounds |) in
          let challenger := M.alloc (| challenger |) in
          M.read (|
            let~ values :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                Ty.path "alloc::alloc::Global"
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                      InputMmcs
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::mmcs::Mmcs"
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                                  ]
                                              ]
                                              InputMmcs
                                              "ProverData"
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                        InputMmcs
                                        "ProverData"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                                    ]
                                                ]
                                                InputMmcs
                                                "ProverData"
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                      InputMmcs
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                                    ]
                                                ]
                                                InputMmcs
                                                "ProverData"
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                        InputMmcs
                                        "ProverData"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::mmcs::Mmcs"
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Val; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ]
                                          InputMmcs
                                          "ProverData"
                                      ];
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::mmcs::Mmcs"
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ]
                                                    InputMmcs
                                                    "ProverData"
                                                ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::mmcs::Mmcs"
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                                      ]
                                                  ]
                                                  InputMmcs
                                                  "ProverData"
                                              ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, rounds |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::mmcs::Mmcs"
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                              InputMmcs
                                                              "ProverData"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ := M.read (| γ |) in
                                          let γ1_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ1_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let data := M.alloc (| γ1_0 |) in
                                          let points_for_mats := M.alloc (| γ1_1 |) in
                                          M.read (|
                                            let~ mats :
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Val;
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ],
                                                  M.get_trait_method (|
                                                    "p3_commit::mmcs::Mmcs",
                                                    InputMmcs,
                                                    [],
                                                    [ Val ],
                                                    "get_matrices",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.deref (| M.read (| self |) |),
                                                        "p3_circle::pcs::CirclePcs",
                                                        "mmcs"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.read (| M.deref (| M.read (| data |) |) |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |) in
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.match_operator (|
                                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                M.alloc (| Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use (M.alloc (| Value.Bool true |)) in
                                                      let _ :=
                                                        is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      let~ _ :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.tuple [] ] :=
                                                        M.match_operator (|
                                                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                          M.alloc (|
                                                            Value.Tuple
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.path "usize",
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        "len",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          mats
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |);
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.path "usize",
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        "len",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.read (|
                                                                              points_for_mats
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let γ0_0 :=
                                                                  M.SubPointer.get_tuple_field (|
                                                                    γ,
                                                                    0
                                                                  |) in
                                                                let γ0_1 :=
                                                                  M.SubPointer.get_tuple_field (|
                                                                    γ,
                                                                    1
                                                                  |) in
                                                                let left_val := M.copy (| γ0_0 |) in
                                                                let right_val :=
                                                                  M.copy (| γ0_1 |) in
                                                                M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [ Ty.tuple [] ],
                                                                  M.alloc (| Value.Tuple [] |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ :=
                                                                          M.use
                                                                            (M.alloc (|
                                                                              UnOp.not (|
                                                                                M.call_closure (|
                                                                                  Ty.path "bool",
                                                                                  BinOp.eq,
                                                                                  [
                                                                                    M.read (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          left_val
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.read (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          right_val
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |)) in
                                                                        let _ :=
                                                                          is_constant_or_break_match (|
                                                                            M.read (| γ |),
                                                                            Value.Bool true
                                                                          |) in
                                                                        M.alloc (|
                                                                          M.never_to_any (|
                                                                            M.read (|
                                                                              let~ kind :
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "core::panicking::AssertKind"
                                                                                    ] :=
                                                                                M.alloc (|
                                                                                  Value.StructTuple
                                                                                    "core::panicking::AssertKind::Eq"
                                                                                    []
                                                                                |) in
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path "never",
                                                                                  M.get_function (|
                                                                                    "core::panicking::assert_failed",
                                                                                    [],
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      kind
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              left_val
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              right_val
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    Value.StructTuple
                                                                                      "core::option::Option::Some"
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_const",
                                                                                            [
                                                                                              Value.Integer
                                                                                                IntegerKind.Usize
                                                                                                1
                                                                                            ],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.alloc (|
                                                                                                    Value.Array
                                                                                                      [
                                                                                                        mk_str (|
                                                                                                          "Mismatched number of matrices and points"
                                                                                                        |)
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |)));
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (M.alloc (|
                                                                          Value.Tuple []
                                                                        |)))
                                                                  ]
                                                                |)))
                                                          ]
                                                        |) in
                                                      M.alloc (| Value.Tuple [] |)));
                                                  fun γ =>
                                                    ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                                ]
                                              |) in
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::zip::Zip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ];
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ])
                                                    ],
                                                  [],
                                                  [],
                                                  "collect",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "alloc::vec::into_iter::IntoIter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ])
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::zip::Zip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ])
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "alloc::vec::into_iter::IntoIter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          [],
                                                          [],
                                                          "zip",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "alloc::vec::into_iter::IntoIter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::iter::traits::collect::IntoIterator",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "into_iter",
                                                              [],
                                                              []
                                                            |),
                                                            [ M.read (| mats |) ]
                                                          |);
                                                          M.read (| points_for_mats |)
                                                        ]
                                                      |);
                                                      M.closure
                                                        (fun γ =>
                                                          ltac:(M.monadic
                                                            match γ with
                                                            | [ α0 ] =>
                                                              ltac:(M.monadic
                                                                (M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                        (Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ])
                                                                    ],
                                                                  M.alloc (| α0 |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ0_0 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ,
                                                                            0
                                                                          |) in
                                                                        let γ0_1 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ,
                                                                            1
                                                                          |) in
                                                                        let mat :=
                                                                          M.copy (| γ0_0 |) in
                                                                        let points_for_mat :=
                                                                          M.copy (| γ0_1 |) in
                                                                        M.read (|
                                                                          let~ log_height :
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.path "usize"
                                                                                ] :=
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                Ty.path "usize",
                                                                                M.get_function (|
                                                                                  "p3_util::log2_strict_usize",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.path "usize",
                                                                                    M.get_trait_method (|
                                                                                      "p3_matrix::Matrix",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ],
                                                                                      [],
                                                                                      [ Val ],
                                                                                      "height",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            mat
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |) in
                                                                          let~ evals :
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::cfft::CircleEvaluations")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ] :=
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_circle::cfft::CircleEvaluations")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                M.get_associated_function (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::cfft::CircleEvaluations")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ],
                                                                                  "from_cfft_order",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_circle::domain::CircleDomain")
                                                                                      []
                                                                                      [ Val ],
                                                                                    M.get_associated_function (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_circle::domain::CircleDomain")
                                                                                        []
                                                                                        [ Val ],
                                                                                      "standard",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.read (|
                                                                                        log_height
                                                                                      |)
                                                                                    ]
                                                                                  |);
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    M.get_associated_function (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ],
                                                                                      "as_view",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            mat
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |) in
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::iter::adapters::map::Map")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ];
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Challenge
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ])
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "collect",
                                                                                [],
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::iter::adapters::map::Map")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ])
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ],
                                                                                    [],
                                                                                    [],
                                                                                    "map",
                                                                                    [],
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ])
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ],
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ],
                                                                                        "iter",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ],
                                                                                                [],
                                                                                                [],
                                                                                                "deref",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      points_for_mat
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            ltac:(M.monadic
                                                                                              (M.match_operator (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "*")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.function
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ])
                                                                                                  ],
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (let
                                                                                                            γ :=
                                                                                                        M.read (|
                                                                                                          γ
                                                                                                        |) in
                                                                                                      let
                                                                                                            zeta :=
                                                                                                        M.copy (|
                                                                                                          γ
                                                                                                        |) in
                                                                                                      M.read (|
                                                                                                        let~
                                                                                                              zeta :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::point::Point")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_circle::point::Point")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::point::Point")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ],
                                                                                                                "from_projective_line",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  zeta
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              ps_at_zeta :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "tracing::span::Span",
                                                                                                                "in_scope",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        []
                                                                                                                    ]
                                                                                                                    (Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]);
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  let~
                                                                                                                        interest :
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "*")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::subscriber::Interest"
                                                                                                                        ] :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::subscriber::Interest",
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::subscriber::Interest",
                                                                                                                          "never",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  M.match_operator (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing::span::Span"
                                                                                                                      ],
                                                                                                                    M.alloc (|
                                                                                                                      Value.Tuple
                                                                                                                        []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (let
                                                                                                                                γ :=
                                                                                                                            M.use
                                                                                                                              (M.alloc (|
                                                                                                                                LogicalOp.and (|
                                                                                                                                  LogicalOp.and (|
                                                                                                                                    LogicalOp.and (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.path
                                                                                                                                          "bool",
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "core::cmp::PartialOrd",
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::metadata::Level",
                                                                                                                                          [],
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                                                          ],
                                                                                                                                          "le",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            get_associated_constant (|
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Level",
                                                                                                                                              "INFO",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Level"
                                                                                                                                            |)
                                                                                                                                          |);
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            get_constant (|
                                                                                                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::LevelFilter"
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      ltac:(M.monadic
                                                                                                                                        (M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "bool",
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "core::cmp::PartialOrd",
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::Level",
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::LevelFilter"
                                                                                                                                            ],
                                                                                                                                            "le",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              get_associated_constant (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Level",
                                                                                                                                                "INFO",
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Level"
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.alloc (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "tracing_core::metadata::LevelFilter",
                                                                                                                                                    "current",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  []
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)))
                                                                                                                                    |),
                                                                                                                                    ltac:(M.monadic
                                                                                                                                      (M.read (|
                                                                                                                                        let~
                                                                                                                                              _ :
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "*")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.tuple
                                                                                                                                                  []
                                                                                                                                              ] :=
                                                                                                                                          M.alloc (|
                                                                                                                                            M.write (|
                                                                                                                                              interest,
                                                                                                                                              M.call_closure (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                                                M.get_associated_function (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                                                  "interest",
                                                                                                                                                  [],
                                                                                                                                                  []
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    M.deref (|
                                                                                                                                                      M.read (|
                                                                                                                                                        get_constant (|
                                                                                                                                                          "p3_circle::pcs::open::{{closure}}::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.path
                                                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                            ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |) in
                                                                                                                                        M.alloc (|
                                                                                                                                          UnOp.not (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.path
                                                                                                                                                "bool",
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                                                "is_never",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  interest
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |)))
                                                                                                                                  |),
                                                                                                                                  ltac:(M.monadic
                                                                                                                                    (M.call_closure (|
                                                                                                                                      Ty.path
                                                                                                                                        "bool",
                                                                                                                                      M.get_function (|
                                                                                                                                        "tracing::__macro_support::__is_enabled",
                                                                                                                                        [],
                                                                                                                                        []
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        M.borrow (|
                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                          M.deref (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                                                ],
                                                                                                                                              M.get_trait_method (|
                                                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                                                [],
                                                                                                                                                [],
                                                                                                                                                "metadata",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.read (|
                                                                                                                                                      get_constant (|
                                                                                                                                                        "p3_circle::pcs::open::{{closure}}::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "&")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                          ]
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          interest
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                    |)))
                                                                                                                                |)
                                                                                                                              |)) in
                                                                                                                          let
                                                                                                                                _ :=
                                                                                                                            is_constant_or_break_match (|
                                                                                                                              M.read (|
                                                                                                                                γ
                                                                                                                              |),
                                                                                                                              Value.Bool
                                                                                                                                true
                                                                                                                            |) in
                                                                                                                          let~
                                                                                                                                meta :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::metadata::Metadata"
                                                                                                                                    ]
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "&")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                                  ],
                                                                                                                                M.get_trait_method (|
                                                                                                                                  "tracing_core::callsite::Callsite",
                                                                                                                                  Ty.path
                                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                                  [],
                                                                                                                                  [],
                                                                                                                                  "metadata",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.read (|
                                                                                                                                        get_constant (|
                                                                                                                                          "p3_circle::pcs::open::{{closure}}::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                                            ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |) in
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              Ty.path
                                                                                                                                "tracing::span::Span",
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing::span::Span",
                                                                                                                                "new",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.deref (|
                                                                                                                                    M.read (|
                                                                                                                                      meta
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |);
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.deref (|
                                                                                                                                    M.borrow (|
                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::field::ValueSet",
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::field::FieldSet",
                                                                                                                                            "value_set",
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "array")
                                                                                                                                                [
                                                                                                                                                  Value.Integer
                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                    0
                                                                                                                                                ]
                                                                                                                                                [
                                                                                                                                                  Ty.tuple
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "tracing_core::field::Field"
                                                                                                                                                        ];
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "core::option::Option")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.dyn
                                                                                                                                                                [
                                                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                                                    [])
                                                                                                                                                                ]
                                                                                                                                                            ]
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::field::FieldSet"
                                                                                                                                                    ],
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                                                                    "fields",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                      M.deref (|
                                                                                                                                                        M.read (|
                                                                                                                                                          meta
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.alloc (|
                                                                                                                                                    Value.Array
                                                                                                                                                      []
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)));
                                                                                                                      fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (let~
                                                                                                                                span :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "tracing::span::Span"
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing::span::Span",
                                                                                                                                M.get_function (|
                                                                                                                                  "tracing::__macro_support::__disabled_span",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::Metadata"
                                                                                                                                          ],
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "tracing_core::callsite::Callsite",
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::callsite::DefaultCallsite",
                                                                                                                                          [],
                                                                                                                                          [],
                                                                                                                                          "metadata",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.read (|
                                                                                                                                                get_constant (|
                                                                                                                                                  "p3_circle::pcs::open::{{closure}}::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |) in
                                                                                                                          let~
                                                                                                                                _ :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    []
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            |) in
                                                                                                                          span))
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |);
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (M.match_operator (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.function
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      []
                                                                                                                                  ]
                                                                                                                                  (Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ])
                                                                                                                              ],
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (M.call_closure (|
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ],
                                                                                                                                    M.get_associated_function (|
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "p3_circle::cfft::CircleEvaluations")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Val;
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Val;
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "slice")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Val
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                        ],
                                                                                                                                      "evaluate_at_point",
                                                                                                                                      [],
                                                                                                                                      [
                                                                                                                                        Challenge
                                                                                                                                      ]
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                        evals
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        zeta
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)))
                                                                                                                      | _ =>
                                                                                                                        M.impossible
                                                                                                                          "wrong number of arguments"
                                                                                                                      end))
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              _ :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ],
                                                                                                                [],
                                                                                                                [],
                                                                                                                "for_each",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.tuple
                                                                                                                      [])
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ],
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ],
                                                                                                                    "iter",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      M.deref (|
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "slice")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          M.get_trait_method (|
                                                                                                                            "core::ops::deref::Deref",
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ],
                                                                                                                            [],
                                                                                                                            [],
                                                                                                                            "deref",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.Ref,
                                                                                                                              ps_at_zeta
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |);
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (M.match_operator (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.function
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      [
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Challenge
                                                                                                                                          ]
                                                                                                                                      ]
                                                                                                                                  ]
                                                                                                                                  (Ty.tuple
                                                                                                                                    [])
                                                                                                                              ],
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (let
                                                                                                                                        γ :=
                                                                                                                                    M.read (|
                                                                                                                                      γ
                                                                                                                                    |) in
                                                                                                                                  let
                                                                                                                                        p :=
                                                                                                                                    M.copy (|
                                                                                                                                      γ
                                                                                                                                    |) in
                                                                                                                                  M.call_closure (|
                                                                                                                                    Ty.tuple
                                                                                                                                      [],
                                                                                                                                    M.get_trait_method (|
                                                                                                                                      "p3_challenger::FieldChallenger",
                                                                                                                                      Challenger,
                                                                                                                                      [],
                                                                                                                                      [
                                                                                                                                        Val
                                                                                                                                      ],
                                                                                                                                      "observe_algebra_element",
                                                                                                                                      [],
                                                                                                                                      [
                                                                                                                                        Challenge
                                                                                                                                      ]
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.MutRef,
                                                                                                                                        M.deref (|
                                                                                                                                          M.read (|
                                                                                                                                            challenger
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        p
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)))
                                                                                                                      | _ =>
                                                                                                                        M.impossible
                                                                                                                          "wrong number of arguments"
                                                                                                                      end))
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        ps_at_zeta
                                                                                                      |)))
                                                                                                ]
                                                                                              |)))
                                                                                          | _ =>
                                                                                            M.impossible
                                                                                              "wrong number of arguments"
                                                                                          end))
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)))
                                                                  ]
                                                                |)))
                                                            | _ =>
                                                              M.impossible
                                                                "wrong number of arguments"
                                                            end))
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |) in
            let~ alpha : Ty.apply (Ty.path "*") [] [ Challenge ] :=
              M.alloc (|
                M.call_closure (|
                  Challenge,
                  M.get_trait_method (|
                    "p3_challenger::FieldChallenger",
                    Challenger,
                    [],
                    [ Val ],
                    "sample_algebra_element",
                    [],
                    [ Challenge ]
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |) ]
                |)
              |) in
            let~ reduced_openings :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::collections::btree::map::BTreeMap")
                      []
                      [
                        Ty.path "usize";
                        Ty.tuple
                          [
                            Challenge;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::collections::btree::map::BTreeMap")
                    []
                    [
                      Ty.path "usize";
                      Ty.tuple
                        [
                          Challenge;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Challenge; Ty.path "alloc::alloc::Global" ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "alloc::collections::btree::map::BTreeMap")
                      []
                      [
                        Ty.path "usize";
                        Ty.tuple
                          [
                            Challenge;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ],
                    "new",
                    [],
                    []
                  |),
                  []
                |)
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::zip::Zip")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                      InputMmcs
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ];
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ],
                    [],
                    [],
                    "for_each",
                    [],
                    [
                      Ty.function
                        [
                          Ty.tuple
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                                    ]
                                                ]
                                                InputMmcs
                                                "ProverData"
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ]
                            ]
                        ]
                        (Ty.tuple [])
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::zip::Zip")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                        InputMmcs
                                        "ProverData"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                      InputMmcs
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ],
                        [],
                        [],
                        "zip",
                        [],
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                        InputMmcs
                                        "ProverData"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::mmcs::Mmcs"
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Val; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ]
                                          InputMmcs
                                          "ProverData"
                                      ];
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::mmcs::Mmcs"
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ]
                                                    InputMmcs
                                                    "ProverData"
                                                ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::mmcs::Mmcs"
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                                      ]
                                                  ]
                                                  InputMmcs
                                                  "ProverData"
                                              ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, rounds |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, values |) ]
                                |)
                              |)
                            |)
                          ]
                        |)
                      ]
                    |);
                    M.closure
                      (fun γ =>
                        ltac:(M.monadic
                          match γ with
                          | [ α0 ] =>
                            ltac:(M.monadic
                              (M.match_operator (|
                                Ty.apply
                                  (Ty.path "*")
                                  []
                                  [
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::mmcs::Mmcs"
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                              InputMmcs
                                                              "ProverData"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.tuple [])
                                  ],
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                      let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                      let γ0_0 := M.read (| γ0_0 |) in
                                      let γ2_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                      let γ2_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                      let data := M.alloc (| γ2_0 |) in
                                      let points_for_mats := M.alloc (| γ2_1 |) in
                                      let values := M.copy (| γ0_1 |) in
                                      M.read (|
                                        let~ mats :
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [ Val; Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ] :=
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ],
                                              M.get_trait_method (|
                                                "p3_commit::mmcs::Mmcs",
                                                InputMmcs,
                                                [],
                                                [ Val ],
                                                "get_matrices",
                                                [],
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                                    ]
                                                ]
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.SubPointer.get_struct_record_field (|
                                                    M.deref (| M.read (| self |) |),
                                                    "p3_circle::pcs::CirclePcs",
                                                    "mmcs"
                                                  |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.read (| M.deref (| M.read (| data |) |) |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |) in
                                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.tuple [],
                                              M.get_trait_method (|
                                                "core::iter::traits::iterator::Iterator",
                                                Ty.apply
                                                  (Ty.path "core::iter::adapters::map::Map")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::zip::Zip")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "alloc::vec::into_iter::IntoIter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ])
                                                  ],
                                                [],
                                                [],
                                                "for_each",
                                                [],
                                                [
                                                  Ty.function
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                    (Ty.tuple [])
                                                ]
                                              |),
                                              [
                                                M.read (|
                                                  let~ iter :
                                                      Ty.apply
                                                        (Ty.path "*")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ] :=
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "alloc::vec::into_iter::IntoIter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::collect::IntoIterator",
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          [],
                                                          [],
                                                          "into_iter",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| mats |) ]
                                                      |)
                                                    |) in
                                                  let~ iter :
                                                      Ty.apply
                                                        (Ty.path "*")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "alloc::vec::into_iter::IntoIter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ] :=
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "alloc::vec::into_iter::IntoIter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          [],
                                                          [],
                                                          "zip",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.read (| iter |);
                                                          M.read (| points_for_mats |)
                                                        ]
                                                      |)
                                                    |) in
                                                  let~ iter :
                                                      Ty.apply
                                                        (Ty.path "*")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::zip::Zip")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "alloc::vec::into_iter::IntoIter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ] :=
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "alloc::vec::into_iter::IntoIter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "alloc::vec::into_iter::IntoIter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ],
                                                          [],
                                                          [],
                                                          "zip",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [ M.read (| iter |); M.read (| values |) ]
                                                      |)
                                                    |) in
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::map::Map")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::zip::Zip")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "alloc::vec::into_iter::IntoIter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ])
                                                        ],
                                                      M.get_trait_method (|
                                                        "core::iter::traits::iterator::Iterator",
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::zip::Zip")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "alloc::vec::into_iter::IntoIter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ],
                                                        [],
                                                        [],
                                                        "map",
                                                        [],
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ])
                                                        ]
                                                      |),
                                                      [
                                                        M.read (| iter |);
                                                        M.closure
                                                          (fun γ =>
                                                            ltac:(M.monadic
                                                              match γ with
                                                              | [ α0 ] =>
                                                                ltac:(M.monadic
                                                                  (M.match_operator (|
                                                                    Ty.apply
                                                                      (Ty.path "*")
                                                                      []
                                                                      [
                                                                        Ty.function
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                              []
                                                                                              [
                                                                                                Val;
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Val;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                          (Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ])
                                                                      ],
                                                                    M.alloc (| α0 |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let γ0_0 :=
                                                                            M.SubPointer.get_tuple_field (|
                                                                              γ,
                                                                              0
                                                                            |) in
                                                                          let γ0_1 :=
                                                                            M.SubPointer.get_tuple_field (|
                                                                              γ,
                                                                              1
                                                                            |) in
                                                                          let γ1_0 :=
                                                                            M.SubPointer.get_tuple_field (|
                                                                              γ0_0,
                                                                              0
                                                                            |) in
                                                                          let γ1_1 :=
                                                                            M.SubPointer.get_tuple_field (|
                                                                              γ0_0,
                                                                              1
                                                                            |) in
                                                                          let a :=
                                                                            M.copy (| γ1_0 |) in
                                                                          let b :=
                                                                            M.copy (| γ1_1 |) in
                                                                          let b :=
                                                                            M.copy (| γ0_1 |) in
                                                                          Value.Tuple
                                                                            [
                                                                              M.read (| a |);
                                                                              M.read (| b |);
                                                                              M.read (| b |)
                                                                            ]))
                                                                    ]
                                                                  |)))
                                                              | _ =>
                                                                M.impossible
                                                                  "wrong number of arguments"
                                                              end))
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.closure
                                                  (fun γ =>
                                                    ltac:(M.monadic
                                                      match γ with
                                                      | [ α0 ] =>
                                                        ltac:(M.monadic
                                                          (M.match_operator (|
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [
                                                                Ty.function
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                                  (Ty.tuple [])
                                                              ],
                                                            M.alloc (| α0 |),
                                                            [
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let γ0_0 :=
                                                                    M.SubPointer.get_tuple_field (|
                                                                      γ,
                                                                      0
                                                                    |) in
                                                                  let γ0_1 :=
                                                                    M.SubPointer.get_tuple_field (|
                                                                      γ,
                                                                      1
                                                                    |) in
                                                                  let γ0_2 :=
                                                                    M.SubPointer.get_tuple_field (|
                                                                      γ,
                                                                      2
                                                                    |) in
                                                                  let mat := M.copy (| γ0_0 |) in
                                                                  let points_for_mat :=
                                                                    M.copy (| γ0_1 |) in
                                                                  let values := M.copy (| γ0_2 |) in
                                                                  M.read (|
                                                                    let~ log_height :
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [ Ty.path "usize" ] :=
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path "usize",
                                                                          M.get_function (|
                                                                            "p3_util::log2_strict_usize",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.path "usize",
                                                                              M.get_trait_method (|
                                                                                "p3_matrix::Matrix",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ],
                                                                                [],
                                                                                [ Val ],
                                                                                "height",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (| mat |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |) in
                                                                    let~ evals :
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_circle::cfft::CircleEvaluations")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [ Val ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                          ] :=
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_circle::cfft::CircleEvaluations")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "slice")
                                                                                        []
                                                                                        [ Val ]
                                                                                    ]
                                                                                ]
                                                                            ],
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_circle::cfft::CircleEvaluations")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [ Val ]
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            "from_cfft_order",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_circle::domain::CircleDomain")
                                                                                []
                                                                                [ Val ],
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_circle::domain::CircleDomain")
                                                                                  []
                                                                                  [ Val ],
                                                                                "standard",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (|
                                                                                  log_height
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "slice")
                                                                                        []
                                                                                        [ Val ]
                                                                                    ]
                                                                                ],
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ],
                                                                                "as_view",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (| mat |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |) in
                                                                    M.match_operator (|
                                                                      Ty.apply
                                                                        (Ty.path "*")
                                                                        []
                                                                        [ Ty.tuple [] ],
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path "&mut")
                                                                            []
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ],
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::collections::btree::map::entry::Entry")
                                                                              []
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            "or_insert_with",
                                                                            [],
                                                                            [
                                                                              Ty.function
                                                                                [ Ty.tuple [] ]
                                                                                (Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ])
                                                                            ]
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::collections::btree::map::entry::Entry")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::collections::btree::map::BTreeMap")
                                                                                  []
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                "entry",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  reduced_openings
                                                                                |);
                                                                                M.read (|
                                                                                  log_height
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0 ] =>
                                                                                    ltac:(M.monadic
                                                                                      (M.match_operator (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ]
                                                                                              (Ty.tuple
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ])
                                                                                          ],
                                                                                        M.alloc (|
                                                                                          α0
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (Value.Tuple
                                                                                                [
                                                                                                  M.read (|
                                                                                                    get_constant (|
                                                                                                      "p3_field::field::PrimeCharacteristicRing::ONE",
                                                                                                      Challenge
                                                                                                    |)
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ],
                                                                                                    M.get_function (|
                                                                                                      "alloc::vec::from_elem",
                                                                                                      [],
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        get_constant (|
                                                                                                          "p3_field::field::PrimeCharacteristicRing::ZERO",
                                                                                                          Challenge
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "usize",
                                                                                                        BinOp.Wrap.shl,
                                                                                                        [
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            1;
                                                                                                          M.read (|
                                                                                                            log_height
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]))
                                                                                        ]
                                                                                      |)))
                                                                                  | _ =>
                                                                                    M.impossible
                                                                                      "wrong number of arguments"
                                                                                  end))
                                                                          ]
                                                                        |)
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ :=
                                                                              M.read (| γ |) in
                                                                            let γ1_0 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ,
                                                                                0
                                                                              |) in
                                                                            let γ1_1 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ,
                                                                                1
                                                                              |) in
                                                                            let alpha_offset :=
                                                                              M.alloc (| γ1_0 |) in
                                                                            let
                                                                                  reduced_opening_for_log_height :=
                                                                              M.alloc (| γ1_1 |) in
                                                                            let~ _ :
                                                                                Ty.apply
                                                                                  (Ty.path "*")
                                                                                  []
                                                                                  [ Ty.tuple [] ] :=
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.tuple [],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::iter::adapters::zip::Zip")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    [],
                                                                                    "for_each",
                                                                                    [],
                                                                                    [
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.tuple
                                                                                          [])
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::iter::adapters::zip::Zip")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ],
                                                                                        [],
                                                                                        [],
                                                                                        "zip",
                                                                                        [],
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ],
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Challenge
                                                                                              ],
                                                                                            "iter",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::deref::Deref",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ],
                                                                                                    [],
                                                                                                    [],
                                                                                                    "deref",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.read (|
                                                                                                          points_for_mat
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ],
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ],
                                                                                            "iter",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::deref::Deref",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ],
                                                                                                    [],
                                                                                                    [],
                                                                                                    "deref",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.read (|
                                                                                                          values
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            ltac:(M.monadic
                                                                                              (M.match_operator (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "*")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.function
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                      (Ty.tuple
                                                                                                        [])
                                                                                                  ],
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (let
                                                                                                            γ0_0 :=
                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                          γ,
                                                                                                          0
                                                                                                        |) in
                                                                                                      let
                                                                                                            γ0_1 :=
                                                                                                        M.SubPointer.get_tuple_field (|
                                                                                                          γ,
                                                                                                          1
                                                                                                        |) in
                                                                                                      let
                                                                                                            γ0_0 :=
                                                                                                        M.read (|
                                                                                                          γ0_0
                                                                                                        |) in
                                                                                                      let
                                                                                                            zeta :=
                                                                                                        M.copy (|
                                                                                                          γ0_0
                                                                                                        |) in
                                                                                                      let
                                                                                                            ps_at_zeta :=
                                                                                                        M.copy (|
                                                                                                          γ0_1
                                                                                                        |) in
                                                                                                      M.read (|
                                                                                                        let~
                                                                                                              zeta :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::point::Point")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_circle::point::Point")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::point::Point")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ],
                                                                                                                "from_projective_line",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  zeta
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              mat_ros :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::cfft::CircleEvaluations")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val;
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val;
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                "deep_quotient_reduce",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  evals
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  alpha
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  zeta
                                                                                                                |);
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "slice")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::deref::Deref",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        [],
                                                                                                                        "deref",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              ps_at_zeta
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              _ :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::iter::adapters::zip::Zip")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::IterMut")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::into_iter::IntoIter")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                [],
                                                                                                                [],
                                                                                                                "for_each",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&mut")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge
                                                                                                                                ];
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.tuple
                                                                                                                      [])
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::iter::adapters::zip::Zip")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::slice::iter::IterMut")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::into_iter::IntoIter")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::IterMut")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ],
                                                                                                                    [],
                                                                                                                    [],
                                                                                                                    "zip",
                                                                                                                    [],
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::slice::iter::IterMut")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ],
                                                                                                                      M.get_trait_method (|
                                                                                                                        "p3_maybe_rayon::serial::IntoParallelRefMutIterator",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        [],
                                                                                                                        "par_iter_mut",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              reduced_opening_for_log_height
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      mat_ros
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |);
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (M.match_operator (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.function
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      [
                                                                                                                                        Ty.tuple
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "&mut")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Challenge
                                                                                                                                              ];
                                                                                                                                            Challenge
                                                                                                                                          ]
                                                                                                                                      ]
                                                                                                                                  ]
                                                                                                                                  (Ty.tuple
                                                                                                                                    [])
                                                                                                                              ],
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (let
                                                                                                                                        γ0_0 :=
                                                                                                                                    M.SubPointer.get_tuple_field (|
                                                                                                                                      γ,
                                                                                                                                      0
                                                                                                                                    |) in
                                                                                                                                  let
                                                                                                                                        γ0_1 :=
                                                                                                                                    M.SubPointer.get_tuple_field (|
                                                                                                                                      γ,
                                                                                                                                      1
                                                                                                                                    |) in
                                                                                                                                  let
                                                                                                                                        ro :=
                                                                                                                                    M.copy (|
                                                                                                                                      γ0_0
                                                                                                                                    |) in
                                                                                                                                  let
                                                                                                                                        mat_ro :=
                                                                                                                                    M.copy (|
                                                                                                                                      γ0_1
                                                                                                                                    |) in
                                                                                                                                  M.read (|
                                                                                                                                    let~
                                                                                                                                          _ :
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "*")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.tuple
                                                                                                                                              []
                                                                                                                                          ] :=
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.tuple
                                                                                                                                            [],
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "core::ops::arith::AddAssign",
                                                                                                                                            Challenge,
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Challenge
                                                                                                                                            ],
                                                                                                                                            "add_assign",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                              M.deref (|
                                                                                                                                                M.read (|
                                                                                                                                                  ro
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.call_closure (|
                                                                                                                                              Challenge,
                                                                                                                                              M.get_trait_method (|
                                                                                                                                                "core::ops::arith::Mul",
                                                                                                                                                Challenge,
                                                                                                                                                [],
                                                                                                                                                [
                                                                                                                                                  Challenge
                                                                                                                                                ],
                                                                                                                                                "mul",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.read (|
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.read (|
                                                                                                                                                      alpha_offset
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |);
                                                                                                                                                M.read (|
                                                                                                                                                  mat_ro
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |) in
                                                                                                                                    M.alloc (|
                                                                                                                                      Value.Tuple
                                                                                                                                        []
                                                                                                                                    |)
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)))
                                                                                                                      | _ =>
                                                                                                                        M.impossible
                                                                                                                          "wrong number of arguments"
                                                                                                                      end))
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              _ :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::ops::arith::MulAssign",
                                                                                                                Challenge,
                                                                                                                [],
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ],
                                                                                                                "mul_assign",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      alpha_offset
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |);
                                                                                                                M.call_closure (|
                                                                                                                  Challenge,
                                                                                                                  M.get_trait_method (|
                                                                                                                    "p3_field::field::PrimeCharacteristicRing",
                                                                                                                    Challenge,
                                                                                                                    [],
                                                                                                                    [],
                                                                                                                    "exp_u64",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      alpha
                                                                                                                    |);
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "u64",
                                                                                                                      BinOp.Wrap.mul,
                                                                                                                      [
                                                                                                                        Value.Integer
                                                                                                                          IntegerKind.U64
                                                                                                                          2;
                                                                                                                        M.cast
                                                                                                                          (Ty.path
                                                                                                                            "u64")
                                                                                                                          (M.call_closure (|
                                                                                                                            Ty.path
                                                                                                                              "usize",
                                                                                                                            M.get_trait_method (|
                                                                                                                              "p3_matrix::Matrix",
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val;
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "slice")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Val
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ],
                                                                                                                              [],
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ],
                                                                                                                              "width",
                                                                                                                              [],
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                                  evals,
                                                                                                                                  "p3_circle::cfft::CircleEvaluations",
                                                                                                                                  "values"
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |))
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          Value.Tuple
                                                                                                            []
                                                                                                        |)
                                                                                                      |)))
                                                                                                ]
                                                                                              |)))
                                                                                          | _ =>
                                                                                            M.impossible
                                                                                              "wrong number of arguments"
                                                                                          end))
                                                                                  ]
                                                                                |)
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)))
                                                                      ]
                                                                    |)
                                                                  |)))
                                                            ]
                                                          |)))
                                                      | _ =>
                                                        M.impossible "wrong number of arguments"
                                                      end))
                                              ]
                                            |)
                                          |) in
                                        M.alloc (| Value.Tuple [] |)
                                      |)))
                                ]
                              |)))
                          | _ => M.impossible "wrong number of arguments"
                          end))
                  ]
                |)
              |) in
            let~ lambdas :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [ Challenge; Ty.path "alloc::alloc::Global" ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [ Challenge; Ty.path "alloc::alloc::Global" ],
                    "new",
                    [],
                    []
                  |),
                  []
                |)
              |) in
            let~ log_heights :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                    "new",
                    [],
                    []
                  |),
                  []
                |)
              |) in
            let~ first_layer_mats :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Challenge;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Challenge;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Challenge; Ty.path "alloc::alloc::Global" ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::collections::btree::map::IntoIter")
                          []
                          [
                            Ty.path "usize";
                            Ty.tuple
                              [
                                Challenge;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.tuple
                                  [
                                    Ty.path "usize";
                                    Ty.tuple
                                      [
                                        Challenge;
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ]
                                      ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Challenge;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Challenge;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::collections::btree::map::IntoIter")
                            []
                            [
                              Ty.path "usize";
                              Ty.tuple
                                [
                                  Challenge;
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple
                                    [
                                      Ty.path "usize";
                                      Ty.tuple
                                        [
                                          Challenge;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Challenge; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Challenge;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "alloc::collections::btree::map::IntoIter")
                          []
                          [
                            Ty.path "usize";
                            Ty.tuple
                              [
                                Challenge;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Challenge;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple
                                    [
                                      Ty.path "usize";
                                      Ty.tuple
                                        [
                                          Challenge;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Challenge; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Challenge;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::collections::btree::map::IntoIter")
                            []
                            [
                              Ty.path "usize";
                              Ty.tuple
                                [
                                  Challenge;
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "alloc::collections::btree::map::BTreeMap")
                              []
                              [
                                Ty.path "usize";
                                Ty.tuple
                                  [
                                    Challenge;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [ M.read (| reduced_openings |) ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.path "usize";
                                                    Ty.tuple
                                                      [
                                                        Challenge;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Challenge;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let log_height := M.copy (| γ0_0 |) in
                                          let γ1_0 := M.SubPointer.get_tuple_field (| γ0_1, 0 |) in
                                          let γ1_1 := M.SubPointer.get_tuple_field (| γ0_1, 1 |) in
                                          let ro := M.copy (| γ1_1 |) in
                                          M.read (|
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.match_operator (|
                                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                M.alloc (| Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use
                                                          (M.alloc (|
                                                            UnOp.not (|
                                                              M.call_closure (|
                                                                Ty.path "bool",
                                                                BinOp.gt,
                                                                [
                                                                  M.read (| log_height |);
                                                                  Value.Integer IntegerKind.Usize 0
                                                                ]
                                                              |)
                                                            |)
                                                          |)) in
                                                      let _ :=
                                                        is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      M.alloc (|
                                                        M.never_to_any (|
                                                          M.call_closure (|
                                                            Ty.path "never",
                                                            M.get_function (|
                                                              "core::panicking::panic",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              mk_str (|
                                                                "assertion failed: log_height > 0"
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)));
                                                  fun γ =>
                                                    ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                                ]
                                              |) in
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.tuple [],
                                                  M.get_associated_function (|
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.path "usize";
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    "push",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (| Pointer.Kind.MutRef, log_heights |);
                                                    M.read (| log_height |)
                                                  ]
                                                |)
                                              |) in
                                            let~ lambda : Ty.apply (Ty.path "*") [] [ Challenge ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Challenge,
                                                  M.get_function (|
                                                    "p3_circle::deep_quotient::extract_lambda",
                                                    [],
                                                    [ Val; Challenge ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.MutRef,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&mut")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "slice")
                                                                []
                                                                [ Challenge ]
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::ops::deref::DerefMut",
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ],
                                                            [],
                                                            [],
                                                            "deref_mut",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.MutRef,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.MutRef,
                                                                  ro
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.read (|
                                                      M.SubPointer.get_struct_record_field (|
                                                        M.SubPointer.get_struct_record_field (|
                                                          M.deref (| M.read (| self |) |),
                                                          "p3_circle::pcs::CirclePcs",
                                                          "fri_config"
                                                        |),
                                                        "p3_fri::config::FriConfig",
                                                        "log_blowup"
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |) in
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.tuple [],
                                                  M.get_associated_function (|
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ],
                                                    "push",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (| Pointer.Kind.MutRef, lambdas |);
                                                    M.read (| lambda |)
                                                  ]
                                                |)
                                              |) in
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Challenge;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Challenge;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ],
                                                  "new",
                                                  [],
                                                  []
                                                |),
                                                [ M.read (| ro |); Value.Integer IntegerKind.Usize 2
                                                ]
                                              |)
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |) in
            let~ log_max_height : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.path "usize",
                  M.get_associated_function (|
                    Ty.apply (Ty.path "core::option::Option") [] [ Ty.path "usize" ],
                    "unwrap",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply (Ty.path "core::option::Option") [] [ Ty.path "usize" ],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "core::option::Option")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ],
                        "copied",
                        [],
                        []
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            []
                            [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply (Ty.path "core::slice::iter::Iter") [] [ Ty.path "usize" ],
                            [],
                            [],
                            "max",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply (Ty.path "core::slice::iter::Iter") [] [ Ty.path "usize" ],
                              M.get_associated_function (|
                                Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ],
                                "iter",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [ Ty.apply (Ty.path "slice") [] [ Ty.path "usize" ] ],
                                      M.get_trait_method (|
                                        "core::ops::deref::Deref",
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Ty.path "usize"; Ty.path "alloc::alloc::Global" ],
                                        [],
                                        [],
                                        "deref",
                                        [],
                                        []
                                      |),
                                      [ M.borrow (| Pointer.Kind.Ref, log_heights |) ]
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            M.match_operator (|
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.tuple
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ];
                      Ty.apply
                        (Ty.path "p3_circle::pcs::CirclePcsProof")
                        []
                        [
                          Val;
                          Challenge;
                          InputMmcs;
                          FriMmcs;
                          Ty.associated_in_trait
                            "p3_challenger::grinding_challenger::GrindingChallenger"
                            []
                            []
                            Challenger
                            "Witness"
                        ]
                    ]
                ],
              M.alloc (|
                M.call_closure (|
                  Ty.tuple
                    [
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [ Challenge ]
                        FriMmcs
                        "Commitment";
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [
                          Challenge;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Challenge;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                            ]
                        ]
                        FriMmcs
                        "ProverData"
                    ],
                  M.get_trait_method (|
                    "p3_commit::mmcs::Mmcs",
                    FriMmcs,
                    [],
                    [ Challenge ],
                    "commit",
                    [],
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Challenge;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Challenge; Ty.path "alloc::alloc::Global" ]
                        ]
                    ]
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "p3_circle::pcs::CirclePcs",
                          "fri_config"
                        |),
                        "p3_fri::config::FriConfig",
                        "mmcs"
                      |)
                    |);
                    M.read (| first_layer_mats |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                    let first_layer_commitment := M.copy (| γ0_0 |) in
                    let first_layer_data := M.copy (| γ0_1 |) in
                    let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.tuple [],
                          M.get_trait_method (|
                            "p3_challenger::CanObserve",
                            Challenger,
                            [],
                            [
                              Ty.associated_in_trait
                                "p3_commit::mmcs::Mmcs"
                                []
                                [ Challenge ]
                                FriMmcs
                                "Commitment"
                            ],
                            "observe",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (| M.read (| challenger |) |)
                            |);
                            M.call_closure (|
                              Ty.associated_in_trait
                                "p3_commit::mmcs::Mmcs"
                                []
                                [ Challenge ]
                                FriMmcs
                                "Commitment",
                              M.get_trait_method (|
                                "core::clone::Clone",
                                Ty.associated_in_trait
                                  "p3_commit::mmcs::Mmcs"
                                  []
                                  [ Challenge ]
                                  FriMmcs
                                  "Commitment",
                                [],
                                [],
                                "clone",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, first_layer_commitment |) ]
                            |)
                          ]
                        |)
                      |) in
                    let~ bivariate_beta : Ty.apply (Ty.path "*") [] [ Challenge ] :=
                      M.alloc (|
                        M.call_closure (|
                          Challenge,
                          M.get_trait_method (|
                            "p3_challenger::FieldChallenger",
                            Challenger,
                            [],
                            [ Val ],
                            "sample_algebra_element",
                            [],
                            [ Challenge ]
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (| M.read (| challenger |) |)
                            |)
                          ]
                        |)
                      |) in
                    let~ fri_input :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::iter::adapters::rev::Rev")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::into_iter::IntoIter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Challenge;
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Challenge;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ])
                                  ]
                              ],
                            [],
                            [],
                            "collect",
                            [],
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::rev::Rev")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::into_iter::IntoIter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Challenge;
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Challenge;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ])
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::into_iter::IntoIter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Challenge;
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Challenge;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ])
                                  ],
                                [],
                                [],
                                "rev",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::into_iter::IntoIter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Challenge;
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Challenge;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ])
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "alloc::vec::into_iter::IntoIter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Challenge;
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "map",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Challenge;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ])
                                    ]
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "alloc::vec::into_iter::IntoIter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Challenge;
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ],
                                      M.get_trait_method (|
                                        "core::iter::traits::collect::IntoIterator",
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Challenge;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                  ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ],
                                        [],
                                        [],
                                        "into_iter",
                                        [],
                                        []
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Challenge;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ],
                                          M.get_trait_method (|
                                            "p3_commit::mmcs::Mmcs",
                                            FriMmcs,
                                            [],
                                            [ Challenge ],
                                            "get_matrices",
                                            [],
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Challenge;
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                ]
                                            ]
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.SubPointer.get_struct_record_field (|
                                                M.SubPointer.get_struct_record_field (|
                                                  M.deref (| M.read (| self |) |),
                                                  "p3_circle::pcs::CirclePcs",
                                                  "fri_config"
                                                |),
                                                "p3_fri::config::FriConfig",
                                                "mmcs"
                                              |)
                                            |);
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (|
                                                M.borrow (| Pointer.Kind.Ref, first_layer_data |)
                                              |)
                                            |)
                                          ]
                                        |)
                                      ]
                                    |);
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ])
                                                  ],
                                                M.alloc (| α0 |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let m := M.copy (| γ |) in
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_function (|
                                                          "p3_circle::folding::fold_y",
                                                          [],
                                                          [
                                                            Val;
                                                            Challenge;
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ Challenge ]
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.read (| bivariate_beta |);
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ Challenge ]
                                                                  ]
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              "as_view",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| m |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)))
                                                ]
                                              |)))
                                          | _ => M.impossible "wrong number of arguments"
                                          end))
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |) in
                    let~ g :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_circle::folding::CircleFriGenericConfig")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "p3_circle::pcs::CircleInputProof")
                                  []
                                  [ Val; Challenge; InputMmcs; FriMmcs ];
                                Ty.apply
                                  (Ty.path "p3_circle::pcs::InputError")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Val ]
                                      InputMmcs
                                      "Error";
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Challenge ]
                                      FriMmcs
                                      "Error"
                                  ]
                              ]
                          ] :=
                      M.alloc (|
                        Value.StructTuple
                          "p3_circle::folding::CircleFriGenericConfig"
                          [ Value.StructTuple "core::marker::PhantomData" [] ]
                      |) in
                    let~ fri_proof :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_circle::proof::CircleFriProof")
                              []
                              [
                                Challenge;
                                FriMmcs;
                                Ty.associated_in_trait
                                  "p3_challenger::grinding_challenger::GrindingChallenger"
                                  []
                                  []
                                  Challenger
                                  "Witness";
                                Ty.apply
                                  (Ty.path "p3_circle::pcs::CircleInputProof")
                                  []
                                  [ Val; Challenge; InputMmcs; FriMmcs ]
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "p3_circle::proof::CircleFriProof")
                            []
                            [
                              Challenge;
                              FriMmcs;
                              Ty.associated_in_trait
                                "p3_challenger::grinding_challenger::GrindingChallenger"
                                []
                                []
                                Challenger
                                "Witness";
                              Ty.apply
                                (Ty.path "p3_circle::pcs::CircleInputProof")
                                []
                                [ Val; Challenge; InputMmcs; FriMmcs ]
                            ],
                          M.get_function (|
                            "p3_circle::prover::prove",
                            [],
                            [
                              Ty.apply
                                (Ty.path "p3_circle::folding::CircleFriGenericConfig")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "p3_circle::pcs::CircleInputProof")
                                    []
                                    [ Val; Challenge; InputMmcs; FriMmcs ];
                                  Ty.apply
                                    (Ty.path "p3_circle::pcs::InputError")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [ Val ]
                                        InputMmcs
                                        "Error";
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [ Challenge ]
                                        FriMmcs
                                        "Error"
                                    ]
                                ];
                              Val;
                              Challenge;
                              FriMmcs;
                              Challenger;
                              Ty.function
                                [ Ty.tuple [ Ty.path "usize" ] ]
                                (Ty.apply
                                  (Ty.path "p3_circle::pcs::CircleInputProof")
                                  []
                                  [ Val; Challenge; InputMmcs; FriMmcs ])
                            ]
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (| M.borrow (| Pointer.Kind.Ref, g |) |)
                            |);
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "p3_circle::pcs::CirclePcs",
                                    "fri_config"
                                  |)
                                |)
                              |)
                            |);
                            M.read (| fri_input |);
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (| M.read (| challenger |) |)
                            |);
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.apply
                                          (Ty.path "*")
                                          []
                                          [
                                            Ty.function
                                              [ Ty.tuple [ Ty.path "usize" ] ]
                                              (Ty.apply
                                                (Ty.path "p3_circle::pcs::CircleInputProof")
                                                []
                                                [ Val; Challenge; InputMmcs; FriMmcs ])
                                          ],
                                        M.alloc (| α0 |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let index := M.copy (| γ |) in
                                              M.read (|
                                                let~ input_openings :
                                                    Ty.apply
                                                      (Ty.path "*")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_circle::pcs::BatchOpening")
                                                              []
                                                              [ Val; InputMmcs ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ] :=
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "p3_circle::pcs::BatchOpening")
                                                            []
                                                            [ Val; InputMmcs ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      M.get_trait_method (|
                                                        "core::iter::traits::iterator::Iterator",
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::map::Map")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::mmcs::Mmcs"
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                          InputMmcs
                                                                          "ProverData"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                                  InputMmcs
                                                                                  "ProverData"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.apply
                                                                (Ty.path
                                                                  "p3_circle::pcs::BatchOpening")
                                                                []
                                                                [ Val; InputMmcs ])
                                                          ],
                                                        [],
                                                        [],
                                                        "collect",
                                                        [],
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_circle::pcs::BatchOpening")
                                                                []
                                                                [ Val; InputMmcs ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::map::Map")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::mmcs::Mmcs"
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            InputMmcs
                                                                            "ProverData"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.function
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    InputMmcs
                                                                                    "ProverData"
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                                (Ty.apply
                                                                  (Ty.path
                                                                    "p3_circle::pcs::BatchOpening")
                                                                  []
                                                                  [ Val; InputMmcs ])
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::iter::traits::iterator::Iterator",
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::Iter")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_commit::mmcs::Mmcs"
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                          InputMmcs
                                                                          "ProverData"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ],
                                                            [],
                                                            [],
                                                            "map",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_circle::pcs::BatchOpening")
                                                                []
                                                                [ Val; InputMmcs ];
                                                              Ty.function
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    InputMmcs
                                                                                    "ProverData"
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                                (Ty.apply
                                                                  (Ty.path
                                                                    "p3_circle::pcs::BatchOpening")
                                                                  []
                                                                  [ Val; InputMmcs ])
                                                            ]
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::mmcs::Mmcs"
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            InputMmcs
                                                                            "ProverData"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ],
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::mmcs::Mmcs"
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              InputMmcs
                                                                              "ProverData"
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                "iter",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        InputMmcs
                                                                                        "ProverData"
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Val;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                      InputMmcs
                                                                                      "ProverData"
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "deref",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          rounds
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |);
                                                            M.closure
                                                              (fun γ =>
                                                                ltac:(M.monadic
                                                                  match γ with
                                                                  | [ α0 ] =>
                                                                    ltac:(M.monadic
                                                                      (M.match_operator (|
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Val;
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                                      []
                                                                                                      [
                                                                                                        Val;
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Val;
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                                  InputMmcs
                                                                                                  "ProverData"
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              (Ty.apply
                                                                                (Ty.path
                                                                                  "p3_circle::pcs::BatchOpening")
                                                                                []
                                                                                [ Val; InputMmcs ])
                                                                          ],
                                                                        M.alloc (| α0 |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ :=
                                                                                M.read (| γ |) in
                                                                              let γ1_0 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  0
                                                                                |) in
                                                                              let γ1_1 :=
                                                                                M.SubPointer.get_tuple_field (|
                                                                                  γ,
                                                                                  1
                                                                                |) in
                                                                              let data :=
                                                                                M.alloc (|
                                                                                  γ1_0
                                                                                |) in
                                                                              M.read (|
                                                                                let~
                                                                                      log_max_batch_height :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ] :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "usize",
                                                                                      M.get_function (|
                                                                                        "p3_util::log2_strict_usize",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "usize",
                                                                                          M.get_trait_method (|
                                                                                            "p3_commit::mmcs::Mmcs",
                                                                                            InputMmcs,
                                                                                            [],
                                                                                            [ Val ],
                                                                                            "get_max_height",
                                                                                            [],
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Val;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                M.deref (|
                                                                                                  M.read (|
                                                                                                    self
                                                                                                  |)
                                                                                                |),
                                                                                                "p3_circle::pcs::CirclePcs",
                                                                                                "mmcs"
                                                                                              |)
                                                                                            |);
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.read (|
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      data
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                let~ reduced_index :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ] :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "usize",
                                                                                      BinOp.Wrap.shr,
                                                                                      [
                                                                                        M.read (|
                                                                                          index
                                                                                        |);
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "usize",
                                                                                          BinOp.Wrap.sub,
                                                                                          [
                                                                                            M.read (|
                                                                                              log_max_height
                                                                                            |);
                                                                                            M.read (|
                                                                                              log_max_batch_height
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_circle::pcs::BatchOpening")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          InputMmcs
                                                                                        ]
                                                                                    ],
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ];
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Proof"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "p3_commit::mmcs::Mmcs",
                                                                                        InputMmcs,
                                                                                        [],
                                                                                        [ Val ],
                                                                                        "open_batch",
                                                                                        [],
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                            M.deref (|
                                                                                              M.read (|
                                                                                                self
                                                                                              |)
                                                                                            |),
                                                                                            "p3_circle::pcs::CirclePcs",
                                                                                            "mmcs"
                                                                                          |)
                                                                                        |);
                                                                                        M.read (|
                                                                                          reduced_index
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              M.deref (|
                                                                                                M.read (|
                                                                                                  data
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ0_0 :=
                                                                                          M.SubPointer.get_tuple_field (|
                                                                                            γ,
                                                                                            0
                                                                                          |) in
                                                                                        let γ0_1 :=
                                                                                          M.SubPointer.get_tuple_field (|
                                                                                            γ,
                                                                                            1
                                                                                          |) in
                                                                                        let
                                                                                              opened_values :=
                                                                                          M.copy (|
                                                                                            γ0_0
                                                                                          |) in
                                                                                        let
                                                                                              opening_proof :=
                                                                                          M.copy (|
                                                                                            γ0_1
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          Value.StructRecord
                                                                                            "p3_circle::pcs::BatchOpening"
                                                                                            [
                                                                                              ("opened_values",
                                                                                                M.read (|
                                                                                                  opened_values
                                                                                                |));
                                                                                              ("opening_proof",
                                                                                                M.read (|
                                                                                                  opening_proof
                                                                                                |))
                                                                                            ]
                                                                                        |)))
                                                                                  ]
                                                                                |)
                                                                              |)))
                                                                        ]
                                                                      |)))
                                                                  | _ =>
                                                                    M.impossible
                                                                      "wrong number of arguments"
                                                                  end))
                                                          ]
                                                        |)
                                                      ]
                                                    |)
                                                  |) in
                                                M.match_operator (|
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_circle::pcs::CircleInputProof")
                                                        []
                                                        [ Val; Challenge; InputMmcs; FriMmcs ]
                                                    ],
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.associated_in_trait
                                                            "p3_commit::mmcs::Mmcs"
                                                            []
                                                            [ Challenge ]
                                                            FriMmcs
                                                            "Proof"
                                                        ],
                                                      M.get_trait_method (|
                                                        "p3_commit::mmcs::Mmcs",
                                                        FriMmcs,
                                                        [],
                                                        [ Challenge ],
                                                        "open_batch",
                                                        [],
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Challenge;
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ]
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.SubPointer.get_struct_record_field (|
                                                            M.SubPointer.get_struct_record_field (|
                                                              M.deref (| M.read (| self |) |),
                                                              "p3_circle::pcs::CirclePcs",
                                                              "fri_config"
                                                            |),
                                                            "p3_fri::config::FriConfig",
                                                            "mmcs"
                                                          |)
                                                        |);
                                                        M.call_closure (|
                                                          Ty.path "usize",
                                                          BinOp.Wrap.shr,
                                                          [
                                                            M.read (| index |);
                                                            Value.Integer IntegerKind.I32 1
                                                          ]
                                                        |);
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              first_layer_data
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let γ0_0 :=
                                                          M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                        let γ0_1 :=
                                                          M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                        let first_layer_values :=
                                                          M.copy (| γ0_0 |) in
                                                        let first_layer_proof :=
                                                          M.copy (| γ0_1 |) in
                                                        let~ first_layer_siblings :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ] :=
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::zip::Zip")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [ Ty.path "usize" ]
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [ Ty.path "usize"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      Challenge
                                                                  ],
                                                                [],
                                                                [],
                                                                "collect",
                                                                [],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::map::Map")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::zip::Zip")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [ Ty.path "usize" ]
                                                                        ];
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                        Challenge
                                                                    ],
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::zip::Zip")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [ Ty.path "usize" ]
                                                                      ],
                                                                    [],
                                                                    [],
                                                                    "map",
                                                                    [],
                                                                    [
                                                                      Challenge;
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                        Challenge
                                                                    ]
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::zip::Zip")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [ Ty.path "usize" ]
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::iter::traits::iterator::Iterator",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "zip",
                                                                        [],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::collect::IntoIterator",
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            [],
                                                                            "into_iter",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              first_layer_values
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          log_heights
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.closure
                                                                      (fun γ =>
                                                                        ltac:(M.monadic
                                                                          match γ with
                                                                          | [ α0 ] =>
                                                                            ltac:(M.monadic
                                                                              (M.match_operator (|
                                                                                Ty.apply
                                                                                  (Ty.path "*")
                                                                                  []
                                                                                  [
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                      Challenge
                                                                                  ],
                                                                                M.alloc (| α0 |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ,
                                                                                          0
                                                                                        |) in
                                                                                      let γ0_1 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ,
                                                                                          1
                                                                                        |) in
                                                                                      let v :=
                                                                                        M.copy (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      let
                                                                                            log_height :=
                                                                                        M.copy (|
                                                                                          γ0_1
                                                                                        |) in
                                                                                      M.read (|
                                                                                        let~
                                                                                              reduced_index :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize"
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "usize",
                                                                                              BinOp.Wrap.shr,
                                                                                              [
                                                                                                M.read (|
                                                                                                  index
                                                                                                |);
                                                                                                M.call_closure (|
                                                                                                  Ty.path
                                                                                                    "usize",
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::arith::Sub",
                                                                                                    Ty.path
                                                                                                      "usize",
                                                                                                    [],
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize"
                                                                                                        ]
                                                                                                    ],
                                                                                                    "sub",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      log_max_height
                                                                                                    |);
                                                                                                    M.read (|
                                                                                                      log_height
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        let~
                                                                                              sibling_index :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize"
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "usize",
                                                                                              BinOp.Wrap.bit_xor,
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  Ty.path
                                                                                                    "usize",
                                                                                                  BinOp.Wrap.bit_and,
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      reduced_index
                                                                                                    |);
                                                                                                    Value.Integer
                                                                                                      IntegerKind.Usize
                                                                                                      1
                                                                                                  ]
                                                                                                |);
                                                                                                Value.Integer
                                                                                                  IntegerKind.Usize
                                                                                                  1
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        M.deref (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Challenge
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::index::Index",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ],
                                                                                              [],
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize"
                                                                                              ],
                                                                                              "index",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.read (|
                                                                                                    v
                                                                                                  |)
                                                                                                |)
                                                                                              |);
                                                                                              M.read (|
                                                                                                sibling_index
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)
                                                                                      |)))
                                                                                ]
                                                                              |)))
                                                                          | _ =>
                                                                            M.impossible
                                                                              "wrong number of arguments"
                                                                          end))
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          Value.StructRecord
                                                            "p3_circle::pcs::CircleInputProof"
                                                            [
                                                              ("input_openings",
                                                                M.read (| input_openings |));
                                                              ("first_layer_siblings",
                                                                M.read (| first_layer_siblings |));
                                                              ("first_layer_proof",
                                                                M.read (| first_layer_proof |))
                                                            ]
                                                        |)))
                                                  ]
                                                |)
                                              |)))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |)
                      |) in
                    M.alloc (|
                      Value.Tuple
                        [
                          M.read (| values |);
                          Value.StructRecord
                            "p3_circle::pcs::CirclePcsProof"
                            [
                              ("first_layer_commitment", M.read (| first_layer_commitment |));
                              ("lambdas", M.read (| lambdas |));
                              ("fri_proof", M.read (| fri_proof |))
                            ]
                        ]
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn verify(
            &self,
            // For each round:
            rounds: Vec<(
                Self::Commitment,
                // for each matrix:
                Vec<(
                    // its domain,
                    Self::Domain,
                    // for each point:
                    Vec<(
                        // the point,
                        Challenge,
                        // values at the point
                        Vec<Challenge>,
                    )>,
                )>,
            )>,
            proof: &Self::Proof,
            challenger: &mut Challenger,
        ) -> Result<(), Self::Error> {
            // Write evaluations to challenger
            for (_, round) in &rounds {
                for (_, mat) in round {
                    for (_, point) in mat {
                        point
                            .iter()
                            .for_each(|&opening| challenger.observe_algebra_element(opening));
                    }
                }
            }
    
            // Batch combination challenge
            let alpha: Challenge = challenger.sample_algebra_element();
            challenger.observe(proof.first_layer_commitment.clone());
            let bivariate_beta: Challenge = challenger.sample_algebra_element();
    
            // +1 to account for first layer
            let log_global_max_height =
                proof.fri_proof.commit_phase_commits.len() + self.fri_config.log_blowup + 1;
    
            let g: CircleFriConfig<Val, Challenge, InputMmcs, FriMmcs> =
                CircleFriGenericConfig(PhantomData);
    
            verify(
                &g,
                &self.fri_config,
                &proof.fri_proof,
                challenger,
                |index, input_proof| {
                    // log_height -> (alpha_offset, ro)
                    let mut reduced_openings = BTreeMap::new();
    
                    let CircleInputProof {
                        input_openings,
                        first_layer_siblings,
                        first_layer_proof,
                    } = input_proof;
    
                    for (batch_opening, (batch_commit, mats)) in
                        zip_eq(input_openings, &rounds, InputError::InputShapeError)?
                    {
                        let batch_heights: Vec<usize> = mats
                            .iter()
                            .map(|(domain, _)| (domain.size() << self.fri_config.log_blowup))
                            .collect_vec();
                        let batch_dims: Vec<Dimensions> = batch_heights
                            .iter()
                            // todo: mmcs doesn't really need width
                            .map(|&height| Dimensions { width: 0, height })
                            .collect_vec();
    
                        let (dims, idx) = if let Some(log_batch_max_height) =
                            batch_heights.iter().max().map(|x| log2_strict_usize( *x))
                        {
                            (
                                &batch_dims[..],
                                index >> (log_global_max_height - log_batch_max_height),
                            )
                        } else {
                            // Empty batch?
                            (&[][..], 0)
                        };
    
                        self.mmcs
                            .verify_batch(
                                batch_commit,
                                dims,
                                idx,
                                &batch_opening.opened_values,
                                &batch_opening.opening_proof,
                            )
                            .map_err(InputError::InputMmcsError)?;
    
                        for (ps_at_x, (mat_domain, mat_points_and_values)) in zip_eq(
                            &batch_opening.opened_values,
                            mats,
                            InputError::InputShapeError,
                        )? {
                            let log_height = mat_domain.log_n + self.fri_config.log_blowup;
                            let bits_reduced = log_global_max_height - log_height;
                            let orig_idx = cfft_permute_index(index >> bits_reduced, log_height);
    
                            let committed_domain = CircleDomain::standard(log_height);
                            let x = committed_domain.nth_point(orig_idx);
    
                            let (alpha_offset, ro) = reduced_openings
                                .entry(log_height)
                                .or_insert((Challenge::ONE, Challenge::ZERO));
                            let alpha_pow_width_2 = alpha.exp_u64(ps_at_x.len() as u64).square();
    
                            for (zeta_uni, ps_at_zeta) in mat_points_and_values {
                                let zeta = Point::from_projective_line( *zeta_uni);
    
                                *ro += *alpha_offset
                                    * deep_quotient_reduce_row(alpha, x, zeta, ps_at_x, ps_at_zeta);
    
                                *alpha_offset *= alpha_pow_width_2;
                            }
                        }
                    }
    
                    // Verify bivariate fold and lambda correction
    
                    let (mut fri_input, fl_dims, fl_leaves): (Vec<_>, Vec<_>, Vec<_>) = zip_eq(
                        zip_eq(
                            reduced_openings,
                            first_layer_siblings,
                            InputError::InputShapeError,
                        )?,
                        &proof.lambdas,
                        InputError::InputShapeError,
                    )?
                    .map(|(((log_height, (_, ro)), &fl_sib), &lambda)| {
                        assert!(log_height > 0);
    
                        let orig_size = log_height - self.fri_config.log_blowup;
                        let bits_reduced = log_global_max_height - log_height;
                        let orig_idx = cfft_permute_index(index >> bits_reduced, log_height);
    
                        let lde_domain = CircleDomain::standard(log_height);
                        let p: Point<Val> = lde_domain.nth_point(orig_idx);
    
                        let lambda_corrected = ro - lambda * p.v_n(orig_size);
    
                        let mut fl_values = vec![lambda_corrected; 2];
                        fl_values[((index >> bits_reduced) & 1) ^ 1] = fl_sib;
    
                        let fri_input = (
                            // - 1 here is because we have already folded a layer.
                            log_height - 1,
                            fold_y_row(
                                index >> (bits_reduced + 1),
                                // - 1 here is log_arity.
                                log_height - 1,
                                bivariate_beta,
                                fl_values.iter().copied(),
                            ),
                        );
    
                        let fl_dims = Dimensions {
                            width: 0,
                            height: 1 << (log_height - 1),
                        };
    
                        (fri_input, fl_dims, fl_values)
                    })
                    .multiunzip();
    
                    // sort descending
                    fri_input.reverse();
    
                    self.fri_config
                        .mmcs
                        .verify_batch(
                            &proof.first_layer_commitment,
                            &fl_dims,
                            index >> 1,
                            &fl_leaves,
                            first_layer_proof,
                        )
                        .map_err(InputError::FirstLayerMmcsError)?;
    
                    Ok(fri_input)
                },
            )
        }
    *)
    Definition verify
        (Val InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; rounds; proof; challenger ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let rounds := M.alloc (| rounds |) in
          let proof := M.alloc (| proof |) in
          let challenger := M.alloc (| challenger |) in
          M.read (|
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.use
                (M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::slice::iter::Iter")
                        []
                        [
                          Ty.tuple
                            [
                              Ty.associated_in_trait
                                "p3_commit::mmcs::Mmcs"
                                []
                                [ Val ]
                                InputMmcs
                                "Commitment";
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "p3_circle::domain::CircleDomain")
                                        []
                                        [ Val ];
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Challenge;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::collect::IntoIterator",
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Val ]
                                      InputMmcs
                                      "Commitment";
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "p3_circle::domain::CircleDomain")
                                              []
                                              [ Val ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.tuple
                                                  [
                                                    Challenge;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [],
                        "into_iter",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, rounds |) ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let iter := M.copy (| γ |) in
                        M.loop (|
                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                          ltac:(M.monadic
                            (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                              M.match_operator (|
                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                M.alloc (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "core::option::Option")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::mmcs::Mmcs"
                                                  []
                                                  [ Val ]
                                                  InputMmcs
                                                  "Commitment";
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_circle::domain::CircleDomain")
                                                          []
                                                          [ Val ];
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Challenge;
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ],
                                    M.get_trait_method (|
                                      "core::iter::traits::iterator::Iterator",
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [ Val ]
                                                InputMmcs
                                                "Commitment";
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_circle::domain::CircleDomain")
                                                        []
                                                        [ Val ];
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Challenge;
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ],
                                      [],
                                      [],
                                      "next",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.MutRef,
                                        M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                      |)
                                    ]
                                  |)
                                |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let _ :=
                                        M.is_struct_tuple (| γ, "core::option::Option::None" |) in
                                      M.alloc (|
                                        M.never_to_any (| M.read (| M.break (||) |) |)
                                      |)));
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let γ0_0 :=
                                        M.SubPointer.get_struct_tuple_field (|
                                          γ,
                                          "core::option::Option::Some",
                                          0
                                        |) in
                                      let γ0_0 := M.read (| γ0_0 |) in
                                      let γ2_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                      let γ2_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                      let round := M.alloc (| γ2_1 |) in
                                      M.use
                                        (M.match_operator (|
                                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "core::slice::iter::Iter")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_circle::domain::CircleDomain")
                                                        []
                                                        [ Val ];
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Challenge;
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::iter::traits::collect::IntoIterator",
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_circle::domain::CircleDomain")
                                                              []
                                                              [ Val ];
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Challenge;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ],
                                                [],
                                                [],
                                                "into_iter",
                                                [],
                                                []
                                              |),
                                              [ M.read (| round |) ]
                                            |)
                                          |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let iter := M.copy (| γ |) in
                                                M.loop (|
                                                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                  ltac:(M.monadic
                                                    (let~ _ :
                                                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                      M.match_operator (|
                                                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "core::option::Option")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_circle::domain::CircleDomain")
                                                                          []
                                                                          [ Val ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Challenge;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::iter::traits::iterator::Iterator",
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_circle::domain::CircleDomain")
                                                                        []
                                                                        [ Val ];
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Challenge;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ],
                                                              [],
                                                              [],
                                                              "next",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    iter
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let _ :=
                                                                M.is_struct_tuple (|
                                                                  γ,
                                                                  "core::option::Option::None"
                                                                |) in
                                                              M.alloc (|
                                                                M.never_to_any (|
                                                                  M.read (| M.break (||) |)
                                                                |)
                                                              |)));
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let γ0_0 :=
                                                                M.SubPointer.get_struct_tuple_field (|
                                                                  γ,
                                                                  "core::option::Option::Some",
                                                                  0
                                                                |) in
                                                              let γ0_0 := M.read (| γ0_0 |) in
                                                              let γ2_0 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ0_0,
                                                                  0
                                                                |) in
                                                              let γ2_1 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ0_0,
                                                                  1
                                                                |) in
                                                              let mat := M.alloc (| γ2_1 |) in
                                                              M.use
                                                                (M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [ Ty.tuple [] ],
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Challenge;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::iter::traits::collect::IntoIterator",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "into_iter",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [ M.read (| mat |) ]
                                                                    |)
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let iter :=
                                                                          M.copy (| γ |) in
                                                                        M.loop (|
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ],
                                                                          ltac:(M.monadic
                                                                            (let~ _ :
                                                                                Ty.apply
                                                                                  (Ty.path "*")
                                                                                  []
                                                                                  [ Ty.tuple [] ] :=
                                                                              M.match_operator (|
                                                                                Ty.apply
                                                                                  (Ty.path "*")
                                                                                  []
                                                                                  [ Ty.tuple [] ],
                                                                                M.alloc (|
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    M.get_trait_method (|
                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Challenge;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      [],
                                                                                      [],
                                                                                      "next",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.MutRef,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.MutRef,
                                                                                            iter
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |),
                                                                                [
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let _ :=
                                                                                        M.is_struct_tuple (|
                                                                                          γ,
                                                                                          "core::option::Option::None"
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        M.never_to_any (|
                                                                                          M.read (|
                                                                                            M.break (||)
                                                                                          |)
                                                                                        |)
                                                                                      |)));
                                                                                  fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      (let γ0_0 :=
                                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                                          γ,
                                                                                          "core::option::Option::Some",
                                                                                          0
                                                                                        |) in
                                                                                      let γ0_0 :=
                                                                                        M.read (|
                                                                                          γ0_0
                                                                                        |) in
                                                                                      let γ2_0 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ0_0,
                                                                                          0
                                                                                        |) in
                                                                                      let γ2_1 :=
                                                                                        M.SubPointer.get_tuple_field (|
                                                                                          γ0_0,
                                                                                          1
                                                                                        |) in
                                                                                      let point :=
                                                                                        M.alloc (|
                                                                                          γ2_1
                                                                                        |) in
                                                                                      let~ _ :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                []
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.tuple
                                                                                              [],
                                                                                            M.get_trait_method (|
                                                                                              "core::iter::traits::iterator::Iterator",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::slice::iter::Iter")
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ],
                                                                                              [],
                                                                                              [],
                                                                                              "for_each",
                                                                                              [],
                                                                                              [
                                                                                                Ty.function
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                                  (Ty.tuple
                                                                                                    [])
                                                                                              ]
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge
                                                                                                  ],
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ],
                                                                                                  "iter",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "slice")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.read (|
                                                                                                                point
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |);
                                                                                              M.closure
                                                                                                (fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    match
                                                                                                      γ
                                                                                                    with
                                                                                                    | [
                                                                                                          α0
                                                                                                        ] =>
                                                                                                      ltac:(M.monadic
                                                                                                        (M.match_operator (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "*")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.function
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                                (Ty.tuple
                                                                                                                  [])
                                                                                                            ],
                                                                                                          M.alloc (|
                                                                                                            α0
                                                                                                          |),
                                                                                                          [
                                                                                                            fun
                                                                                                                γ =>
                                                                                                              ltac:(M.monadic
                                                                                                                (let
                                                                                                                      γ :=
                                                                                                                  M.read (|
                                                                                                                    γ
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      opening :=
                                                                                                                  M.copy (|
                                                                                                                    γ
                                                                                                                  |) in
                                                                                                                M.call_closure (|
                                                                                                                  Ty.tuple
                                                                                                                    [],
                                                                                                                  M.get_trait_method (|
                                                                                                                    "p3_challenger::FieldChallenger",
                                                                                                                    Challenger,
                                                                                                                    [],
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ],
                                                                                                                    "observe_algebra_element",
                                                                                                                    [],
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ]
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.MutRef,
                                                                                                                      M.deref (|
                                                                                                                        M.read (|
                                                                                                                          challenger
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      opening
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)))
                                                                                                          ]
                                                                                                        |)))
                                                                                                    | _ =>
                                                                                                      M.impossible
                                                                                                        "wrong number of arguments"
                                                                                                    end))
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.Tuple
                                                                                          []
                                                                                      |)))
                                                                                ]
                                                                              |) in
                                                                            M.alloc (|
                                                                              Value.Tuple []
                                                                            |)))
                                                                        |)))
                                                                  ]
                                                                |))))
                                                        ]
                                                      |) in
                                                    M.alloc (| Value.Tuple [] |)))
                                                |)))
                                          ]
                                        |))))
                                ]
                              |) in
                            M.alloc (| Value.Tuple [] |)))
                        |)))
                  ]
                |)) in
            let~ alpha : Ty.apply (Ty.path "*") [] [ Challenge ] :=
              M.alloc (|
                M.call_closure (|
                  Challenge,
                  M.get_trait_method (|
                    "p3_challenger::FieldChallenger",
                    Challenger,
                    [],
                    [ Val ],
                    "sample_algebra_element",
                    [],
                    [ Challenge ]
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |) ]
                |)
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [],
                  M.get_trait_method (|
                    "p3_challenger::CanObserve",
                    Challenger,
                    [],
                    [
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [ Challenge ]
                        FriMmcs
                        "Commitment"
                    ],
                    "observe",
                    [],
                    []
                  |),
                  [
                    M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |);
                    M.call_closure (|
                      Ty.associated_in_trait
                        "p3_commit::mmcs::Mmcs"
                        []
                        [ Challenge ]
                        FriMmcs
                        "Commitment",
                      M.get_trait_method (|
                        "core::clone::Clone",
                        Ty.associated_in_trait
                          "p3_commit::mmcs::Mmcs"
                          []
                          [ Challenge ]
                          FriMmcs
                          "Commitment",
                        [],
                        [],
                        "clone",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| proof |) |),
                            "p3_circle::pcs::CirclePcsProof",
                            "first_layer_commitment"
                          |)
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            let~ bivariate_beta : Ty.apply (Ty.path "*") [] [ Challenge ] :=
              M.alloc (|
                M.call_closure (|
                  Challenge,
                  M.get_trait_method (|
                    "p3_challenger::FieldChallenger",
                    Challenger,
                    [],
                    [ Val ],
                    "sample_algebra_element",
                    [],
                    [ Challenge ]
                  |),
                  [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |) ]
                |)
              |) in
            let~ log_global_max_height : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.path "usize",
                  BinOp.Wrap.add,
                  [
                    M.call_closure (|
                      Ty.path "usize",
                      BinOp.Wrap.add,
                      [
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_commit::mmcs::Mmcs"
                                  []
                                  [ Challenge ]
                                  FriMmcs
                                  "Commitment";
                                Ty.path "alloc::alloc::Global"
                              ],
                            "len",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| proof |) |),
                                  "p3_circle::pcs::CirclePcsProof",
                                  "fri_proof"
                                |),
                                "p3_circle::proof::CircleFriProof",
                                "commit_phase_commits"
                              |)
                            |)
                          ]
                        |);
                        M.read (|
                          M.SubPointer.get_struct_record_field (|
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "p3_circle::pcs::CirclePcs",
                              "fri_config"
                            |),
                            "p3_fri::config::FriConfig",
                            "log_blowup"
                          |)
                        |)
                      ]
                    |);
                    Value.Integer IntegerKind.Usize 1
                  ]
                |)
              |) in
            let~ g :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "p3_circle::folding::CircleFriGenericConfig")
                      []
                      [
                        Val;
                        Ty.apply
                          (Ty.path "p3_circle::pcs::CircleInputProof")
                          []
                          [ Val; Challenge; InputMmcs; FriMmcs ];
                        Ty.apply
                          (Ty.path "p3_circle::pcs::InputError")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Val ]
                              InputMmcs
                              "Error";
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Challenge ]
                              FriMmcs
                              "Error"
                          ]
                      ]
                  ] :=
              M.alloc (|
                Value.StructTuple
                  "p3_circle::folding::CircleFriGenericConfig"
                  [ Value.StructTuple "core::marker::PhantomData" [] ]
              |) in
            M.alloc (|
              M.call_closure (|
                Ty.apply
                  (Ty.path "core::result::Result")
                  []
                  [
                    Ty.tuple [];
                    Ty.apply
                      (Ty.path "p3_fri::verifier::FriError")
                      []
                      [
                        Ty.associated_in_trait
                          "p3_commit::mmcs::Mmcs"
                          []
                          [ Challenge ]
                          FriMmcs
                          "Error";
                        Ty.apply
                          (Ty.path "p3_circle::pcs::InputError")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Val ]
                              InputMmcs
                              "Error";
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Challenge ]
                              FriMmcs
                              "Error"
                          ]
                      ]
                  ],
                M.get_function (|
                  "p3_circle::verifier::verify",
                  [],
                  [
                    Ty.apply
                      (Ty.path "p3_circle::folding::CircleFriGenericConfig")
                      []
                      [
                        Val;
                        Ty.apply
                          (Ty.path "p3_circle::pcs::CircleInputProof")
                          []
                          [ Val; Challenge; InputMmcs; FriMmcs ];
                        Ty.apply
                          (Ty.path "p3_circle::pcs::InputError")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Val ]
                              InputMmcs
                              "Error";
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Challenge ]
                              FriMmcs
                              "Error"
                          ]
                      ];
                    Val;
                    Challenge;
                    FriMmcs;
                    Challenger;
                    Ty.function
                      [
                        Ty.tuple
                          [
                            Ty.path "usize";
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "p3_circle::pcs::CircleInputProof")
                                  []
                                  [ Val; Challenge; InputMmcs; FriMmcs ]
                              ]
                          ]
                      ]
                      (Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.tuple [ Ty.path "usize"; Challenge ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "p3_circle::pcs::InputError")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_commit::mmcs::Mmcs"
                                []
                                [ Val ]
                                InputMmcs
                                "Error";
                              Ty.associated_in_trait
                                "p3_commit::mmcs::Mmcs"
                                []
                                [ Challenge ]
                                FriMmcs
                                "Error"
                            ]
                        ])
                  ]
                |),
                [
                  M.borrow (| Pointer.Kind.Ref, M.deref (| M.borrow (| Pointer.Kind.Ref, g |) |) |);
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "p3_circle::pcs::CirclePcs",
                          "fri_config"
                        |)
                      |)
                    |)
                  |);
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| proof |) |),
                          "p3_circle::pcs::CirclePcsProof",
                          "fri_proof"
                        |)
                      |)
                    |)
                  |);
                  M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |);
                  M.closure
                    (fun γ =>
                      ltac:(M.monadic
                        match γ with
                        | [ α0; α1 ] =>
                          ltac:(M.monadic
                            (M.match_operator (|
                              Ty.apply
                                (Ty.path "*")
                                []
                                [
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.path "usize";
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_circle::pcs::CircleInputProof")
                                                []
                                                [ Val; Challenge; InputMmcs; FriMmcs ]
                                            ]
                                        ]
                                    ]
                                    (Ty.apply
                                      (Ty.path "core::result::Result")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.tuple [ Ty.path "usize"; Challenge ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.apply
                                          (Ty.path "p3_circle::pcs::InputError")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::mmcs::Mmcs"
                                              []
                                              [ Val ]
                                              InputMmcs
                                              "Error";
                                            Ty.associated_in_trait
                                              "p3_commit::mmcs::Mmcs"
                                              []
                                              [ Challenge ]
                                              FriMmcs
                                              "Error"
                                          ]
                                      ])
                                ],
                              M.alloc (| α0 |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let index := M.copy (| γ |) in
                                    M.match_operator (|
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.function
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.path "usize";
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_circle::pcs::CircleInputProof")
                                                        []
                                                        [ Val; Challenge; InputMmcs; FriMmcs ]
                                                    ]
                                                ]
                                            ]
                                            (Ty.apply
                                              (Ty.path "core::result::Result")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.tuple [ Ty.path "usize"; Challenge ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.apply
                                                  (Ty.path "p3_circle::pcs::InputError")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::mmcs::Mmcs"
                                                      []
                                                      [ Val ]
                                                      InputMmcs
                                                      "Error";
                                                    Ty.associated_in_trait
                                                      "p3_commit::mmcs::Mmcs"
                                                      []
                                                      [ Challenge ]
                                                      FriMmcs
                                                      "Error"
                                                  ]
                                              ])
                                        ],
                                      M.alloc (| α1 |),
                                      [
                                        fun γ =>
                                          ltac:(M.monadic
                                            (let input_proof := M.copy (| γ |) in
                                            M.read (|
                                              let~ reduced_openings :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "alloc::collections::btree::map::BTreeMap")
                                                        []
                                                        [
                                                          Ty.path "usize";
                                                          Ty.tuple [ Challenge; Challenge ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path
                                                        "alloc::collections::btree::map::BTreeMap")
                                                      []
                                                      [
                                                        Ty.path "usize";
                                                        Ty.tuple [ Challenge; Challenge ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path
                                                          "alloc::collections::btree::map::BTreeMap")
                                                        []
                                                        [
                                                          Ty.path "usize";
                                                          Ty.tuple [ Challenge; Challenge ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      "new",
                                                      [],
                                                      []
                                                    |),
                                                    []
                                                  |)
                                                |) in
                                              M.match_operator (|
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::result::Result")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.tuple [ Ty.path "usize"; Challenge ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "p3_circle::pcs::InputError")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::mmcs::Mmcs"
                                                              []
                                                              [ Val ]
                                                              InputMmcs
                                                              "Error";
                                                            Ty.associated_in_trait
                                                              "p3_commit::mmcs::Mmcs"
                                                              []
                                                              [ Challenge ]
                                                              FriMmcs
                                                              "Error"
                                                          ]
                                                      ]
                                                  ],
                                                input_proof,
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ := M.read (| γ |) in
                                                      let γ1_0 :=
                                                        M.SubPointer.get_struct_record_field (|
                                                          γ,
                                                          "p3_circle::pcs::CircleInputProof",
                                                          "input_openings"
                                                        |) in
                                                      let γ1_1 :=
                                                        M.SubPointer.get_struct_record_field (|
                                                          γ,
                                                          "p3_circle::pcs::CircleInputProof",
                                                          "first_layer_siblings"
                                                        |) in
                                                      let γ1_2 :=
                                                        M.SubPointer.get_struct_record_field (|
                                                          γ,
                                                          "p3_circle::pcs::CircleInputProof",
                                                          "first_layer_proof"
                                                        |) in
                                                      let input_openings := M.alloc (| γ1_0 |) in
                                                      let first_layer_siblings :=
                                                        M.alloc (| γ1_1 |) in
                                                      let first_layer_proof := M.alloc (| γ1_2 |) in
                                                      let~ _ :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.tuple [] ] :=
                                                        M.use
                                                          (M.match_operator (|
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ],
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "p3_util::zip_eq::ZipEq")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_circle::pcs::BatchOpening")
                                                                          []
                                                                          [ Val; InputMmcs ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::mmcs::Mmcs"
                                                                              []
                                                                              [ Val ]
                                                                              InputMmcs
                                                                              "Commitment";
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_circle::domain::CircleDomain")
                                                                                      []
                                                                                      [ Val ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::collect::IntoIterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_util::zip_eq::ZipEq")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_circle::pcs::BatchOpening")
                                                                            []
                                                                            [ Val; InputMmcs ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::mmcs::Mmcs"
                                                                                []
                                                                                [ Val ]
                                                                                InputMmcs
                                                                                "Commitment";
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_circle::domain::CircleDomain")
                                                                                        []
                                                                                        [ Val ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Challenge;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "into_iter",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.read (|
                                                                    M.match_operator (|
                                                                      Ty.apply
                                                                        (Ty.path "*")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_util::zip_eq::ZipEq")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::slice::iter::Iter")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::BatchOpening")
                                                                                    []
                                                                                    [ Val; InputMmcs
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::slice::iter::Iter")
                                                                                []
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Commitment";
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ];
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::ops::control_flow::ControlFlow")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::convert::Infallible";
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::InputError")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Error";
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                        FriMmcs
                                                                                        "Error"
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_circle::pcs::BatchOpening")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          InputMmcs
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Commitment";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_circle::domain::CircleDomain")
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::ops::try_trait::Try",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::result::Result")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_circle::pcs::BatchOpening")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            InputMmcs
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                              InputMmcs
                                                                                              "Commitment";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_circle::domain::CircleDomain")
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_circle::pcs::InputError")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Val ]
                                                                                      InputMmcs
                                                                                      "Error";
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Challenge ]
                                                                                      FriMmcs
                                                                                      "Error"
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            [],
                                                                            "branch",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_circle::pcs::BatchOpening")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              InputMmcs
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Commitment";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::InputError")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Error";
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                        FriMmcs
                                                                                        "Error"
                                                                                    ]
                                                                                ],
                                                                              M.get_function (|
                                                                                "p3_util::zip_eq::zip_eq",
                                                                                [],
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_circle::pcs::BatchOpening")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              InputMmcs
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_circle::pcs::BatchOpening")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          InputMmcs
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Commitment";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Commitment";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_circle::domain::CircleDomain")
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::InputError")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Error";
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                        FriMmcs
                                                                                        "Error"
                                                                                    ]
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.read (|
                                                                                  input_openings
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  rounds
                                                                                |);
                                                                                Value.StructTuple
                                                                                  "p3_circle::pcs::InputError::InputShapeError"
                                                                                  []
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                γ,
                                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                                0
                                                                              |) in
                                                                            let residual :=
                                                                              M.copy (| γ0_0 |) in
                                                                            M.alloc (|
                                                                              M.never_to_any (|
                                                                                M.read (|
                                                                                  M.return_ (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize";
                                                                                                  Challenge
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_circle::pcs::InputError")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Error";
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                                FriMmcs
                                                                                                "Error"
                                                                                            ]
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::ops::try_trait::FromResidual",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::result::Result")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Challenge
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_circle::pcs::InputError")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Val
                                                                                                  ]
                                                                                                  InputMmcs
                                                                                                  "Error";
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge
                                                                                                  ]
                                                                                                  FriMmcs
                                                                                                  "Error"
                                                                                              ]
                                                                                          ],
                                                                                        [],
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::result::Result")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "core::convert::Infallible";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::pcs::InputError")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Error";
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                    FriMmcs
                                                                                                    "Error"
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                        "from_residual",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          residual
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)));
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                γ,
                                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                                0
                                                                              |) in
                                                                            let val :=
                                                                              M.copy (| γ0_0 |) in
                                                                            val))
                                                                      ]
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |),
                                                            [
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let iter := M.copy (| γ |) in
                                                                  M.loop (|
                                                                    Ty.apply
                                                                      (Ty.path "*")
                                                                      []
                                                                      [ Ty.tuple [] ],
                                                                    ltac:(M.monadic
                                                                      (let~ _ :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ] :=
                                                                        M.match_operator (|
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ],
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_circle::pcs::BatchOpening")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              InputMmcs
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Commitment";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_circle::pcs::BatchOpening")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            InputMmcs
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                              InputMmcs
                                                                                              "Commitment";
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_circle::domain::CircleDomain")
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |),
                                                                          [
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let _ :=
                                                                                  M.is_struct_tuple (|
                                                                                    γ,
                                                                                    "core::option::Option::None"
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  M.never_to_any (|
                                                                                    M.read (|
                                                                                      M.break (||)
                                                                                    |)
                                                                                  |)
                                                                                |)));
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let γ0_0 :=
                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                    γ,
                                                                                    "core::option::Option::Some",
                                                                                    0
                                                                                  |) in
                                                                                let γ1_0 :=
                                                                                  M.SubPointer.get_tuple_field (|
                                                                                    γ0_0,
                                                                                    0
                                                                                  |) in
                                                                                let γ1_1 :=
                                                                                  M.SubPointer.get_tuple_field (|
                                                                                    γ0_0,
                                                                                    1
                                                                                  |) in
                                                                                let batch_opening :=
                                                                                  M.copy (|
                                                                                    γ1_0
                                                                                  |) in
                                                                                let γ1_1 :=
                                                                                  M.read (|
                                                                                    γ1_1
                                                                                  |) in
                                                                                let γ3_0 :=
                                                                                  M.SubPointer.get_tuple_field (|
                                                                                    γ1_1,
                                                                                    0
                                                                                  |) in
                                                                                let γ3_1 :=
                                                                                  M.SubPointer.get_tuple_field (|
                                                                                    γ1_1,
                                                                                    1
                                                                                  |) in
                                                                                let batch_commit :=
                                                                                  M.alloc (|
                                                                                    γ3_0
                                                                                  |) in
                                                                                let mats :=
                                                                                  M.alloc (|
                                                                                    γ3_1
                                                                                  |) in
                                                                                let~ batch_heights :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "usize";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ] :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "usize";
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "itertools::Itertools",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::iter::adapters::map::Map")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::slice::iter::Iter")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_circle::domain::CircleDomain")
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_circle::domain::CircleDomain")
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "usize")
                                                                                          ],
                                                                                        [],
                                                                                        [],
                                                                                        "collect_vec",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::iter::adapters::map::Map")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::slice::iter::Iter")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                                []
                                                                                                                [
                                                                                                                  Val
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                (Ty.path
                                                                                                  "usize")
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::slice::iter::Iter")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_circle::domain::CircleDomain")
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            [],
                                                                                            "map",
                                                                                            [],
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize";
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                                []
                                                                                                                [
                                                                                                                  Val
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                (Ty.path
                                                                                                  "usize")
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::slice::iter::Iter")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ]
                                                                                                ],
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_circle::domain::CircleDomain")
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ],
                                                                                                "iter",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_circle::domain::CircleDomain")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::deref::Deref",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::domain::CircleDomain")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ];
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ],
                                                                                                        [],
                                                                                                        [],
                                                                                                        "deref",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              mats
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |);
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.match_operator (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "*")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.function
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "p3_circle::domain::CircleDomain")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ];
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ]
                                                                                                                                  ];
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                              (Ty.path
                                                                                                                "usize")
                                                                                                          ],
                                                                                                        M.alloc (|
                                                                                                          α0
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ :=
                                                                                                                M.read (|
                                                                                                                  γ
                                                                                                                |) in
                                                                                                              let
                                                                                                                    γ1_0 :=
                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                  γ,
                                                                                                                  0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    γ1_1 :=
                                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                                  γ,
                                                                                                                  1
                                                                                                                |) in
                                                                                                              let
                                                                                                                    domain :=
                                                                                                                M.alloc (|
                                                                                                                  γ1_0
                                                                                                                |) in
                                                                                                              M.call_closure (|
                                                                                                                Ty.path
                                                                                                                  "usize",
                                                                                                                BinOp.Wrap.shl,
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.path
                                                                                                                      "usize",
                                                                                                                    M.get_trait_method (|
                                                                                                                      "p3_commit::domain::PolynomialSpace",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ],
                                                                                                                      [],
                                                                                                                      [],
                                                                                                                      "size",
                                                                                                                      [],
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.deref (|
                                                                                                                          M.read (|
                                                                                                                            domain
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |);
                                                                                                                  M.read (|
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                                                        M.deref (|
                                                                                                                          M.read (|
                                                                                                                            self
                                                                                                                          |)
                                                                                                                        |),
                                                                                                                        "p3_circle::pcs::CirclePcs",
                                                                                                                        "fri_config"
                                                                                                                      |),
                                                                                                                      "p3_fri::config::FriConfig",
                                                                                                                      "log_blowup"
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)))
                                                                                                        ]
                                                                                                      |)))
                                                                                                  | _ =>
                                                                                                    M.impossible
                                                                                                      "wrong number of arguments"
                                                                                                  end))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                let~ batch_dims :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "p3_matrix::Dimensions";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ] :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "p3_matrix::Dimensions";
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "itertools::Itertools",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::iter::adapters::map::Map")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::slice::iter::Iter")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize"
                                                                                              ];
                                                                                            Ty.function
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "usize"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                              (Ty.path
                                                                                                "p3_matrix::Dimensions")
                                                                                          ],
                                                                                        [],
                                                                                        [],
                                                                                        "collect_vec",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::iter::adapters::map::Map")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::slice::iter::Iter")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize"
                                                                                                ];
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize"
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                (Ty.path
                                                                                                  "p3_matrix::Dimensions")
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::slice::iter::Iter")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize"
                                                                                              ],
                                                                                            [],
                                                                                            [],
                                                                                            "map",
                                                                                            [],
                                                                                            [
                                                                                              Ty.path
                                                                                                "p3_matrix::Dimensions";
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize"
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                                (Ty.path
                                                                                                  "p3_matrix::Dimensions")
                                                                                            ]
                                                                                          |),
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::slice::iter::Iter")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize"
                                                                                                ],
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ],
                                                                                                "iter",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "usize"
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::deref::Deref",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "usize";
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ],
                                                                                                        [],
                                                                                                        [],
                                                                                                        "deref",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          batch_heights
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |);
                                                                                            M.closure
                                                                                              (fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  match
                                                                                                    γ
                                                                                                  with
                                                                                                  | [
                                                                                                        α0
                                                                                                      ] =>
                                                                                                    ltac:(M.monadic
                                                                                                      (M.match_operator (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "*")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.function
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                              (Ty.path
                                                                                                                "p3_matrix::Dimensions")
                                                                                                          ],
                                                                                                        M.alloc (|
                                                                                                          α0
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ :=
                                                                                                                M.read (|
                                                                                                                  γ
                                                                                                                |) in
                                                                                                              let
                                                                                                                    height :=
                                                                                                                M.copy (|
                                                                                                                  γ
                                                                                                                |) in
                                                                                                              Value.StructRecord
                                                                                                                "p3_matrix::Dimensions"
                                                                                                                [
                                                                                                                  ("width",
                                                                                                                    Value.Integer
                                                                                                                      IntegerKind.Usize
                                                                                                                      0);
                                                                                                                  ("height",
                                                                                                                    M.read (|
                                                                                                                      height
                                                                                                                    |))
                                                                                                                ]))
                                                                                                        ]
                                                                                                      |)))
                                                                                                  | _ =>
                                                                                                    M.impossible
                                                                                                      "wrong number of arguments"
                                                                                                  end))
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [ Ty.tuple [] ],
                                                                                  M.match_operator (|
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "slice")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "p3_matrix::Dimensions"
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.path
                                                                                              "usize"
                                                                                          ]
                                                                                      ],
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let γ :=
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::option::Option")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ],
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::option::Option")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize"
                                                                                                        ]
                                                                                                    ],
                                                                                                  "map",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.function
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "usize"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                      (Ty.path
                                                                                                        "usize")
                                                                                                  ]
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::option::Option")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ]
                                                                                                      ],
                                                                                                    M.get_trait_method (|
                                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::slice::iter::Iter")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize"
                                                                                                        ],
                                                                                                      [],
                                                                                                      [],
                                                                                                      "max",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::slice::iter::Iter")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ],
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "usize"
                                                                                                            ],
                                                                                                          "iter",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize"
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "usize";
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    batch_heights
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.closure
                                                                                                    (fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        match
                                                                                                          γ
                                                                                                        with
                                                                                                        | [
                                                                                                              α0
                                                                                                            ] =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "*")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "usize"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.path
                                                                                                                      "usize")
                                                                                                                ],
                                                                                                              M.alloc (|
                                                                                                                α0
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          x :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "usize",
                                                                                                                      M.get_function (|
                                                                                                                        "p3_util::log2_strict_usize",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              x
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                        | _ =>
                                                                                                          M.impossible
                                                                                                            "wrong number of arguments"
                                                                                                        end))
                                                                                                ]
                                                                                              |)
                                                                                            |) in
                                                                                          let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                              γ,
                                                                                              "core::option::Option::Some",
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                log_batch_max_height :=
                                                                                            M.copy (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "p3_matrix::Dimensions"
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::index::Index",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "p3_matrix::Dimensions";
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ],
                                                                                                        [],
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "core::ops::range::RangeFull"
                                                                                                        ],
                                                                                                        "index",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          batch_dims
                                                                                                        |);
                                                                                                        Value.StructTuple
                                                                                                          "core::ops::range::RangeFull"
                                                                                                          []
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |);
                                                                                                M.call_closure (|
                                                                                                  Ty.path
                                                                                                    "usize",
                                                                                                  BinOp.Wrap.shr,
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      index
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "usize",
                                                                                                      BinOp.Wrap.sub,
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          log_global_max_height
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          log_batch_max_height
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                          |)));
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (M.alloc (|
                                                                                            Value.Tuple
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "p3_matrix::Dimensions"
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::index::Index",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "array")
                                                                                                          [
                                                                                                            Value.Integer
                                                                                                              IntegerKind.Usize
                                                                                                              0
                                                                                                          ]
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "p3_matrix::Dimensions"
                                                                                                          ],
                                                                                                        [],
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "core::ops::range::RangeFull"
                                                                                                        ],
                                                                                                        "index",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.alloc (|
                                                                                                            Value.Array
                                                                                                              []
                                                                                                          |)
                                                                                                        |);
                                                                                                        Value.StructTuple
                                                                                                          "core::ops::range::RangeFull"
                                                                                                          []
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |);
                                                                                                Value.Integer
                                                                                                  IntegerKind.Usize
                                                                                                  0
                                                                                              ]
                                                                                          |)))
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ0_0 :=
                                                                                          M.SubPointer.get_tuple_field (|
                                                                                            γ,
                                                                                            0
                                                                                          |) in
                                                                                        let γ0_1 :=
                                                                                          M.SubPointer.get_tuple_field (|
                                                                                            γ,
                                                                                            1
                                                                                          |) in
                                                                                        let dims :=
                                                                                          M.copy (|
                                                                                            γ0_0
                                                                                          |) in
                                                                                        let idx :=
                                                                                          M.copy (|
                                                                                            γ0_1
                                                                                          |) in
                                                                                        let~ _ :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ] :=
                                                                                          M.match_operator (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ],
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::ops::control_flow::ControlFlow")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "core::convert::Infallible";
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_circle::pcs::InputError")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                              InputMmcs
                                                                                                              "Error";
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                              FriMmcs
                                                                                                              "Error"
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.tuple
                                                                                                      []
                                                                                                  ],
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::Try",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::pcs::InputError")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ]
                                                                                                            InputMmcs
                                                                                                            "Error";
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge
                                                                                                            ]
                                                                                                            FriMmcs
                                                                                                            "Error"
                                                                                                        ]
                                                                                                    ],
                                                                                                  [],
                                                                                                  [],
                                                                                                  "branch",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_circle::pcs::InputError")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                              InputMmcs
                                                                                                              "Error";
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                              FriMmcs
                                                                                                              "Error"
                                                                                                          ]
                                                                                                      ],
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::result::Result")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [];
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ]
                                                                                                            InputMmcs
                                                                                                            "Error"
                                                                                                        ],
                                                                                                      "map_err",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_circle::pcs::InputError")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                              InputMmcs
                                                                                                              "Error";
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                              FriMmcs
                                                                                                              "Error"
                                                                                                          ];
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                              InputMmcs
                                                                                                              "Error"
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_circle::pcs::InputError")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                []
                                                                                                                [
                                                                                                                  Val
                                                                                                                ]
                                                                                                                InputMmcs
                                                                                                                "Error";
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ]
                                                                                                                FriMmcs
                                                                                                                "Error"
                                                                                                            ])
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::result::Result")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [];
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                              InputMmcs
                                                                                                              "Error"
                                                                                                          ],
                                                                                                        M.get_trait_method (|
                                                                                                          "p3_commit::mmcs::Mmcs",
                                                                                                          InputMmcs,
                                                                                                          [],
                                                                                                          [
                                                                                                            Val
                                                                                                          ],
                                                                                                          "verify_batch",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  self
                                                                                                                |)
                                                                                                              |),
                                                                                                              "p3_circle::pcs::CirclePcs",
                                                                                                              "mmcs"
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.read (|
                                                                                                                batch_commit
                                                                                                              |)
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.read (|
                                                                                                                dims
                                                                                                              |)
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.read (|
                                                                                                            idx
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              batch_opening
                                                                                                                            |)
                                                                                                                          |),
                                                                                                                          "p3_circle::pcs::BatchOpening",
                                                                                                                          "opened_values"
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      batch_opening
                                                                                                                    |)
                                                                                                                  |),
                                                                                                                  "p3_circle::pcs::BatchOpening",
                                                                                                                  "opening_proof"
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.constructor_as_closure
                                                                                                        "p3_circle::pcs::InputError::InputMmcsError'1"
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Break",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        residual :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        M.return_ (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize";
                                                                                                                        Challenge
                                                                                                                      ];
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::pcs::InputError")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                      InputMmcs
                                                                                                                      "Error";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ]
                                                                                                                      FriMmcs
                                                                                                                      "Error"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::FromResidual",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "usize";
                                                                                                                          Challenge
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_circle::pcs::InputError")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ]
                                                                                                                        InputMmcs
                                                                                                                        "Error";
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                        FriMmcs
                                                                                                                        "Error"
                                                                                                                    ]
                                                                                                                ],
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "core::convert::Infallible";
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "p3_circle::pcs::InputError")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ]
                                                                                                                          InputMmcs
                                                                                                                          "Error";
                                                                                                                        Ty.associated_in_trait
                                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge
                                                                                                                          ]
                                                                                                                          FriMmcs
                                                                                                                          "Error"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "from_residual",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                residual
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)));
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Continue",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        val :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  val))
                                                                                            ]
                                                                                          |) in
                                                                                        M.use
                                                                                          (M.match_operator (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ],
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::slice::iter::Iter")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Val;
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::slice::iter::Iter")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_circle::domain::CircleDomain")
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ],
                                                                                                M.get_trait_method (|
                                                                                                  "core::iter::traits::collect::IntoIterator",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::slice::iter::Iter")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Val;
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::slice::iter::Iter")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                                []
                                                                                                                [
                                                                                                                  Val
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  [],
                                                                                                  [],
                                                                                                  "into_iter",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    M.match_operator (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "*")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_util::zip_eq::ZipEq")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::ops::control_flow::ControlFlow")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "core::convert::Infallible";
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_circle::pcs::InputError")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ]
                                                                                                                        InputMmcs
                                                                                                                        "Error";
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                        FriMmcs
                                                                                                                        "Error"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_circle::domain::CircleDomain")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ],
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::try_trait::Try",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::Iter")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::Iter")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "p3_circle::domain::CircleDomain")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ];
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ]
                                                                                                                                  ];
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_circle::pcs::InputError")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                      InputMmcs
                                                                                                                      "Error";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ]
                                                                                                                      FriMmcs
                                                                                                                      "Error"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [],
                                                                                                            "branch",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::slice::iter::Iter")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::slice::iter::Iter")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val
                                                                                                                                ];
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "alloc::vec::Vec")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Challenge;
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                    ];
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_circle::pcs::InputError")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ]
                                                                                                                        InputMmcs
                                                                                                                        "Error";
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                        FriMmcs
                                                                                                                        "Error"
                                                                                                                    ]
                                                                                                                ],
                                                                                                              M.get_function (|
                                                                                                                "p3_util::zip_eq::zip_eq",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val
                                                                                                                                ];
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "alloc::vec::Vec")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Challenge;
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                    ];
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_circle::domain::CircleDomain")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_circle::pcs::InputError")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ]
                                                                                                                        InputMmcs
                                                                                                                        "Error";
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                        FriMmcs
                                                                                                                        "Error"
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        batch_opening
                                                                                                                      |)
                                                                                                                    |),
                                                                                                                    "p3_circle::pcs::BatchOpening",
                                                                                                                    "opened_values"
                                                                                                                  |)
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  mats
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "p3_circle::pcs::InputError::InputShapeError"
                                                                                                                  []
                                                                                                              ]
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  γ0_0 :=
                                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                                γ,
                                                                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                                                                0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  residual :=
                                                                                                              M.copy (|
                                                                                                                γ0_0
                                                                                                              |) in
                                                                                                            M.alloc (|
                                                                                                              M.never_to_any (|
                                                                                                                M.read (|
                                                                                                                  M.return_ (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::result::Result")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "usize";
                                                                                                                                  Challenge
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_circle::pcs::InputError")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val
                                                                                                                                ]
                                                                                                                                InputMmcs
                                                                                                                                "Error";
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge
                                                                                                                                ]
                                                                                                                                FriMmcs
                                                                                                                                "Error"
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::try_trait::FromResidual",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "core::result::Result")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "usize";
                                                                                                                                    Challenge
                                                                                                                                  ];
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ];
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "p3_circle::pcs::InputError")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.associated_in_trait
                                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Val
                                                                                                                                  ]
                                                                                                                                  InputMmcs
                                                                                                                                  "Error";
                                                                                                                                Ty.associated_in_trait
                                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Challenge
                                                                                                                                  ]
                                                                                                                                  FriMmcs
                                                                                                                                  "Error"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::result::Result")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "core::convert::Infallible";
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "p3_circle::pcs::InputError")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.associated_in_trait
                                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Val
                                                                                                                                    ]
                                                                                                                                    InputMmcs
                                                                                                                                    "Error";
                                                                                                                                  Ty.associated_in_trait
                                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge
                                                                                                                                    ]
                                                                                                                                    FriMmcs
                                                                                                                                    "Error"
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                        "from_residual",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          residual
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)));
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  γ0_0 :=
                                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                                γ,
                                                                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                                                                0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  val :=
                                                                                                              M.copy (|
                                                                                                                γ0_0
                                                                                                              |) in
                                                                                                            val))
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        iter :=
                                                                                                    M.copy (|
                                                                                                      γ
                                                                                                    |) in
                                                                                                  M.loop (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "*")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          []
                                                                                                      ],
                                                                                                    ltac:(M.monadic
                                                                                                      (let~
                                                                                                            _ :
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "*")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                []
                                                                                                            ] :=
                                                                                                        M.match_operator (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "*")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                []
                                                                                                            ],
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::option::Option")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val
                                                                                                                                ];
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "alloc::vec::Vec")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Challenge;
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                    ];
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::Iter")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::Iter")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "p3_circle::domain::CircleDomain")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ];
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ]
                                                                                                                                  ];
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                [],
                                                                                                                [],
                                                                                                                "next",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                  M.deref (|
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.MutRef,
                                                                                                                      iter
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |),
                                                                                                          [
                                                                                                            fun
                                                                                                                γ =>
                                                                                                              ltac:(M.monadic
                                                                                                                (let
                                                                                                                      _ :=
                                                                                                                  M.is_struct_tuple (|
                                                                                                                    γ,
                                                                                                                    "core::option::Option::None"
                                                                                                                  |) in
                                                                                                                M.alloc (|
                                                                                                                  M.never_to_any (|
                                                                                                                    M.read (|
                                                                                                                      M.break (||)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)));
                                                                                                            fun
                                                                                                                γ =>
                                                                                                              ltac:(M.monadic
                                                                                                                (let
                                                                                                                      γ0_0 :=
                                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                                    γ,
                                                                                                                    "core::option::Option::Some",
                                                                                                                    0
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      γ1_0 :=
                                                                                                                  M.SubPointer.get_tuple_field (|
                                                                                                                    γ0_0,
                                                                                                                    0
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      γ1_1 :=
                                                                                                                  M.SubPointer.get_tuple_field (|
                                                                                                                    γ0_0,
                                                                                                                    1
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      ps_at_x :=
                                                                                                                  M.copy (|
                                                                                                                    γ1_0
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      γ1_1 :=
                                                                                                                  M.read (|
                                                                                                                    γ1_1
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      γ3_0 :=
                                                                                                                  M.SubPointer.get_tuple_field (|
                                                                                                                    γ1_1,
                                                                                                                    0
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      γ3_1 :=
                                                                                                                  M.SubPointer.get_tuple_field (|
                                                                                                                    γ1_1,
                                                                                                                    1
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      mat_domain :=
                                                                                                                  M.alloc (|
                                                                                                                    γ3_0
                                                                                                                  |) in
                                                                                                                let
                                                                                                                      mat_points_and_values :=
                                                                                                                  M.alloc (|
                                                                                                                    γ3_1
                                                                                                                  |) in
                                                                                                                let~
                                                                                                                      log_height :
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize"
                                                                                                                      ] :=
                                                                                                                  M.alloc (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "usize",
                                                                                                                      BinOp.Wrap.add,
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                                            M.deref (|
                                                                                                                              M.read (|
                                                                                                                                mat_domain
                                                                                                                              |)
                                                                                                                            |),
                                                                                                                            "p3_circle::domain::CircleDomain",
                                                                                                                            "log_n"
                                                                                                                          |)
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                                            M.SubPointer.get_struct_record_field (|
                                                                                                                              M.deref (|
                                                                                                                                M.read (|
                                                                                                                                  self
                                                                                                                                |)
                                                                                                                              |),
                                                                                                                              "p3_circle::pcs::CirclePcs",
                                                                                                                              "fri_config"
                                                                                                                            |),
                                                                                                                            "p3_fri::config::FriConfig",
                                                                                                                            "log_blowup"
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |) in
                                                                                                                let~
                                                                                                                      bits_reduced :
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize"
                                                                                                                      ] :=
                                                                                                                  M.alloc (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "usize",
                                                                                                                      BinOp.Wrap.sub,
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          log_global_max_height
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          log_height
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |) in
                                                                                                                let~
                                                                                                                      orig_idx :
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize"
                                                                                                                      ] :=
                                                                                                                  M.alloc (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "usize",
                                                                                                                      M.get_function (|
                                                                                                                        "p3_circle::ordering::cfft_permute_index",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "usize",
                                                                                                                          BinOp.Wrap.shr,
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              index
                                                                                                                            |);
                                                                                                                            M.read (|
                                                                                                                              bits_reduced
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          log_height
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |) in
                                                                                                                let~
                                                                                                                      committed_domain :
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_circle::domain::CircleDomain")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ]
                                                                                                                      ] :=
                                                                                                                  M.alloc (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_circle::domain::CircleDomain")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ],
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_circle::domain::CircleDomain")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ],
                                                                                                                        "standard",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          log_height
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |) in
                                                                                                                let~
                                                                                                                      x :
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_circle::point::Point")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ]
                                                                                                                      ] :=
                                                                                                                  M.alloc (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_circle::point::Point")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ],
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_circle::domain::CircleDomain")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ],
                                                                                                                        "nth_point",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          committed_domain
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          orig_idx
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |) in
                                                                                                                M.match_operator (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "*")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        []
                                                                                                                    ],
                                                                                                                  M.alloc (|
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&mut")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::collections::btree::map::entry::Entry")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "usize";
                                                                                                                            Ty.tuple
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Challenge
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        "or_insert",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::collections::btree::map::entry::Entry")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "usize";
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Challenge
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ],
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::collections::btree::map::BTreeMap")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "usize";
                                                                                                                                Ty.tuple
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Challenge
                                                                                                                                  ];
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ],
                                                                                                                            "entry",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                              reduced_openings
                                                                                                                            |);
                                                                                                                            M.read (|
                                                                                                                              log_height
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |);
                                                                                                                        Value.Tuple
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              get_constant (|
                                                                                                                                "p3_field::field::PrimeCharacteristicRing::ONE",
                                                                                                                                Challenge
                                                                                                                              |)
                                                                                                                            |);
                                                                                                                            M.read (|
                                                                                                                              get_constant (|
                                                                                                                                "p3_field::field::PrimeCharacteristicRing::ZERO",
                                                                                                                                Challenge
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        (let
                                                                                                                              γ :=
                                                                                                                          M.read (|
                                                                                                                            γ
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ1_0 :=
                                                                                                                          M.SubPointer.get_tuple_field (|
                                                                                                                            γ,
                                                                                                                            0
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ1_1 :=
                                                                                                                          M.SubPointer.get_tuple_field (|
                                                                                                                            γ,
                                                                                                                            1
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              alpha_offset :=
                                                                                                                          M.alloc (|
                                                                                                                            γ1_0
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              ro :=
                                                                                                                          M.alloc (|
                                                                                                                            γ1_1
                                                                                                                          |) in
                                                                                                                        let~
                                                                                                                              alpha_pow_width_2 :
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Challenge
                                                                                                                              ] :=
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              Challenge,
                                                                                                                              M.get_trait_method (|
                                                                                                                                "p3_field::field::PrimeCharacteristicRing",
                                                                                                                                Challenge,
                                                                                                                                [],
                                                                                                                                [],
                                                                                                                                "square",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.alloc (|
                                                                                                                                    M.call_closure (|
                                                                                                                                      Challenge,
                                                                                                                                      M.get_trait_method (|
                                                                                                                                        "p3_field::field::PrimeCharacteristicRing",
                                                                                                                                        Challenge,
                                                                                                                                        [],
                                                                                                                                        [],
                                                                                                                                        "exp_u64",
                                                                                                                                        [],
                                                                                                                                        []
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        M.borrow (|
                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                          alpha
                                                                                                                                        |);
                                                                                                                                        M.cast
                                                                                                                                          (Ty.path
                                                                                                                                            "u64")
                                                                                                                                          (M.call_closure (|
                                                                                                                                            Ty.path
                                                                                                                                              "usize",
                                                                                                                                            M.get_associated_function (|
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Val;
                                                                                                                                                  Ty.path
                                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                                ],
                                                                                                                                              "len",
                                                                                                                                              [],
                                                                                                                                              []
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.deref (|
                                                                                                                                                  M.read (|
                                                                                                                                                    ps_at_x
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                          |))
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |) in
                                                                                                                        M.use
                                                                                                                          (M.match_operator (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  []
                                                                                                                              ],
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "core::slice::iter::Iter")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "alloc::vec::Vec")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Challenge;
                                                                                                                                            Ty.path
                                                                                                                                              "alloc::alloc::Global"
                                                                                                                                          ]
                                                                                                                                      ]
                                                                                                                                  ],
                                                                                                                                M.get_trait_method (|
                                                                                                                                  "core::iter::traits::collect::IntoIterator",
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "alloc::vec::Vec")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Ty.tuple
                                                                                                                                            [
                                                                                                                                              Challenge;
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Challenge;
                                                                                                                                                  Ty.path
                                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                                ]
                                                                                                                                            ];
                                                                                                                                          Ty.path
                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                        ]
                                                                                                                                    ],
                                                                                                                                  [],
                                                                                                                                  [],
                                                                                                                                  "into_iter",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.read (|
                                                                                                                                    mat_points_and_values
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (let
                                                                                                                                        iter :=
                                                                                                                                    M.copy (|
                                                                                                                                      γ
                                                                                                                                    |) in
                                                                                                                                  M.loop (|
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "*")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Ty.tuple
                                                                                                                                          []
                                                                                                                                      ],
                                                                                                                                    ltac:(M.monadic
                                                                                                                                      (let~
                                                                                                                                            _ :
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "*")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.tuple
                                                                                                                                                []
                                                                                                                                            ] :=
                                                                                                                                        M.match_operator (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "*")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.tuple
                                                                                                                                                []
                                                                                                                                            ],
                                                                                                                                          M.alloc (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "core::option::Option")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.tuple
                                                                                                                                                        [
                                                                                                                                                          Challenge;
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "alloc::vec::Vec")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Challenge;
                                                                                                                                                              Ty.path
                                                                                                                                                                "alloc::alloc::Global"
                                                                                                                                                            ]
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ],
                                                                                                                                              M.get_trait_method (|
                                                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "core::slice::iter::Iter")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.tuple
                                                                                                                                                      [
                                                                                                                                                        Challenge;
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "alloc::vec::Vec")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Challenge;
                                                                                                                                                            Ty.path
                                                                                                                                                              "alloc::alloc::Global"
                                                                                                                                                          ]
                                                                                                                                                      ]
                                                                                                                                                  ],
                                                                                                                                                [],
                                                                                                                                                [],
                                                                                                                                                "next",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.MutRef,
                                                                                                                                                      iter
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            fun
                                                                                                                                                γ =>
                                                                                                                                              ltac:(M.monadic
                                                                                                                                                (let
                                                                                                                                                      _ :=
                                                                                                                                                  M.is_struct_tuple (|
                                                                                                                                                    γ,
                                                                                                                                                    "core::option::Option::None"
                                                                                                                                                  |) in
                                                                                                                                                M.alloc (|
                                                                                                                                                  M.never_to_any (|
                                                                                                                                                    M.read (|
                                                                                                                                                      M.break (||)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)));
                                                                                                                                            fun
                                                                                                                                                γ =>
                                                                                                                                              ltac:(M.monadic
                                                                                                                                                (let
                                                                                                                                                      γ0_0 :=
                                                                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                    γ,
                                                                                                                                                    "core::option::Option::Some",
                                                                                                                                                    0
                                                                                                                                                  |) in
                                                                                                                                                let
                                                                                                                                                      γ0_0 :=
                                                                                                                                                  M.read (|
                                                                                                                                                    γ0_0
                                                                                                                                                  |) in
                                                                                                                                                let
                                                                                                                                                      γ2_0 :=
                                                                                                                                                  M.SubPointer.get_tuple_field (|
                                                                                                                                                    γ0_0,
                                                                                                                                                    0
                                                                                                                                                  |) in
                                                                                                                                                let
                                                                                                                                                      γ2_1 :=
                                                                                                                                                  M.SubPointer.get_tuple_field (|
                                                                                                                                                    γ0_0,
                                                                                                                                                    1
                                                                                                                                                  |) in
                                                                                                                                                let
                                                                                                                                                      zeta_uni :=
                                                                                                                                                  M.alloc (|
                                                                                                                                                    γ2_0
                                                                                                                                                  |) in
                                                                                                                                                let
                                                                                                                                                      ps_at_zeta :=
                                                                                                                                                  M.alloc (|
                                                                                                                                                    γ2_1
                                                                                                                                                  |) in
                                                                                                                                                let~
                                                                                                                                                      zeta :
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "*")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "p3_circle::point::Point")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Challenge
                                                                                                                                                          ]
                                                                                                                                                      ] :=
                                                                                                                                                  M.alloc (|
                                                                                                                                                    M.call_closure (|
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "p3_circle::point::Point")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Challenge
                                                                                                                                                        ],
                                                                                                                                                      M.get_associated_function (|
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "p3_circle::point::Point")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Challenge
                                                                                                                                                          ],
                                                                                                                                                        "from_projective_line",
                                                                                                                                                        [],
                                                                                                                                                        []
                                                                                                                                                      |),
                                                                                                                                                      [
                                                                                                                                                        M.read (|
                                                                                                                                                          M.deref (|
                                                                                                                                                            M.read (|
                                                                                                                                                              zeta_uni
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        |)
                                                                                                                                                      ]
                                                                                                                                                    |)
                                                                                                                                                  |) in
                                                                                                                                                let~
                                                                                                                                                      _ :
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "*")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.tuple
                                                                                                                                                          []
                                                                                                                                                      ] :=
                                                                                                                                                  M.alloc (|
                                                                                                                                                    M.call_closure (|
                                                                                                                                                      Ty.tuple
                                                                                                                                                        [],
                                                                                                                                                      M.get_trait_method (|
                                                                                                                                                        "core::ops::arith::AddAssign",
                                                                                                                                                        Challenge,
                                                                                                                                                        [],
                                                                                                                                                        [
                                                                                                                                                          Challenge
                                                                                                                                                        ],
                                                                                                                                                        "add_assign",
                                                                                                                                                        [],
                                                                                                                                                        []
                                                                                                                                                      |),
                                                                                                                                                      [
                                                                                                                                                        M.borrow (|
                                                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                                                          M.deref (|
                                                                                                                                                            M.read (|
                                                                                                                                                              ro
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        |);
                                                                                                                                                        M.call_closure (|
                                                                                                                                                          Challenge,
                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                            "core::ops::arith::Mul",
                                                                                                                                                            Challenge,
                                                                                                                                                            [],
                                                                                                                                                            [
                                                                                                                                                              Challenge
                                                                                                                                                            ],
                                                                                                                                                            "mul",
                                                                                                                                                            [],
                                                                                                                                                            []
                                                                                                                                                          |),
                                                                                                                                                          [
                                                                                                                                                            M.read (|
                                                                                                                                                              M.deref (|
                                                                                                                                                                M.read (|
                                                                                                                                                                  alpha_offset
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |);
                                                                                                                                                            M.call_closure (|
                                                                                                                                                              Challenge,
                                                                                                                                                              M.get_function (|
                                                                                                                                                                "p3_circle::deep_quotient::deep_quotient_reduce_row",
                                                                                                                                                                [],
                                                                                                                                                                [
                                                                                                                                                                  Val;
                                                                                                                                                                  Challenge
                                                                                                                                                                ]
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                M.read (|
                                                                                                                                                                  alpha
                                                                                                                                                                |);
                                                                                                                                                                M.read (|
                                                                                                                                                                  x
                                                                                                                                                                |);
                                                                                                                                                                M.read (|
                                                                                                                                                                  zeta
                                                                                                                                                                |);
                                                                                                                                                                M.borrow (|
                                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                                  M.deref (|
                                                                                                                                                                    M.call_closure (|
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "&")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "slice")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val
                                                                                                                                                                            ]
                                                                                                                                                                        ],
                                                                                                                                                                      M.get_trait_method (|
                                                                                                                                                                        "core::ops::deref::Deref",
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "alloc::vec::Vec")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Val;
                                                                                                                                                                            Ty.path
                                                                                                                                                                              "alloc::alloc::Global"
                                                                                                                                                                          ],
                                                                                                                                                                        [],
                                                                                                                                                                        [],
                                                                                                                                                                        "deref",
                                                                                                                                                                        [],
                                                                                                                                                                        []
                                                                                                                                                                      |),
                                                                                                                                                                      [
                                                                                                                                                                        M.borrow (|
                                                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                                                          M.deref (|
                                                                                                                                                                            M.read (|
                                                                                                                                                                              ps_at_x
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        |)
                                                                                                                                                                      ]
                                                                                                                                                                    |)
                                                                                                                                                                  |)
                                                                                                                                                                |);
                                                                                                                                                                M.borrow (|
                                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                                  M.deref (|
                                                                                                                                                                    M.call_closure (|
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "&")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "slice")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ]
                                                                                                                                                                        ],
                                                                                                                                                                      M.get_trait_method (|
                                                                                                                                                                        "core::ops::deref::Deref",
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "alloc::vec::Vec")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Challenge;
                                                                                                                                                                            Ty.path
                                                                                                                                                                              "alloc::alloc::Global"
                                                                                                                                                                          ],
                                                                                                                                                                        [],
                                                                                                                                                                        [],
                                                                                                                                                                        "deref",
                                                                                                                                                                        [],
                                                                                                                                                                        []
                                                                                                                                                                      |),
                                                                                                                                                                      [
                                                                                                                                                                        M.borrow (|
                                                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                                                          M.deref (|
                                                                                                                                                                            M.read (|
                                                                                                                                                                              ps_at_zeta
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        |)
                                                                                                                                                                      ]
                                                                                                                                                                    |)
                                                                                                                                                                  |)
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                            |)
                                                                                                                                                          ]
                                                                                                                                                        |)
                                                                                                                                                      ]
                                                                                                                                                    |)
                                                                                                                                                  |) in
                                                                                                                                                let~
                                                                                                                                                      _ :
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "*")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.tuple
                                                                                                                                                          []
                                                                                                                                                      ] :=
                                                                                                                                                  M.alloc (|
                                                                                                                                                    M.call_closure (|
                                                                                                                                                      Ty.tuple
                                                                                                                                                        [],
                                                                                                                                                      M.get_trait_method (|
                                                                                                                                                        "core::ops::arith::MulAssign",
                                                                                                                                                        Challenge,
                                                                                                                                                        [],
                                                                                                                                                        [
                                                                                                                                                          Challenge
                                                                                                                                                        ],
                                                                                                                                                        "mul_assign",
                                                                                                                                                        [],
                                                                                                                                                        []
                                                                                                                                                      |),
                                                                                                                                                      [
                                                                                                                                                        M.borrow (|
                                                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                                                          M.deref (|
                                                                                                                                                            M.read (|
                                                                                                                                                              alpha_offset
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        |);
                                                                                                                                                        M.read (|
                                                                                                                                                          alpha_pow_width_2
                                                                                                                                                        |)
                                                                                                                                                      ]
                                                                                                                                                    |)
                                                                                                                                                  |) in
                                                                                                                                                M.alloc (|
                                                                                                                                                  Value.Tuple
                                                                                                                                                    []
                                                                                                                                                |)))
                                                                                                                                          ]
                                                                                                                                        |) in
                                                                                                                                      M.alloc (|
                                                                                                                                        Value.Tuple
                                                                                                                                          []
                                                                                                                                      |)))
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |))))
                                                                                                                  ]
                                                                                                                |)))
                                                                                                          ]
                                                                                                        |) in
                                                                                                      M.alloc (|
                                                                                                        Value.Tuple
                                                                                                          []
                                                                                                      |)))
                                                                                                  |)))
                                                                                            ]
                                                                                          |))))
                                                                                  ]
                                                                                |)))
                                                                          ]
                                                                        |) in
                                                                      M.alloc (| Value.Tuple [] |)))
                                                                  |)))
                                                            ]
                                                          |)) in
                                                      M.match_operator (|
                                                        Ty.apply
                                                          (Ty.path "*")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [ Ty.path "usize"; Challenge
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_circle::pcs::InputError")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::mmcs::Mmcs"
                                                                      []
                                                                      [ Val ]
                                                                      InputMmcs
                                                                      "Error";
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::mmcs::Mmcs"
                                                                      []
                                                                      [ Challenge ]
                                                                      FriMmcs
                                                                      "Error"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [ Ty.path "usize"; Challenge
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.path "p3_matrix::Dimensions";
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "itertools::Itertools",
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::map::Map")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_util::zip_eq::ZipEq")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_util::zip_eq::ZipEq")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::collections::btree::map::IntoIter")
                                                                            []
                                                                            [
                                                                              Ty.path "usize";
                                                                              Ty.tuple
                                                                                [
                                                                                  Challenge;
                                                                                  Challenge
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [ Challenge ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [ Challenge ]
                                                                    ];
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Challenge;
                                                                                          Challenge
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [ Challenge ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [ Challenge ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.path "usize";
                                                                            Challenge
                                                                          ];
                                                                        Ty.path
                                                                          "p3_matrix::Dimensions";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ])
                                                                ],
                                                              [],
                                                              [],
                                                              "multiunzip",
                                                              [],
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.path "usize";
                                                                            Challenge
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "p3_matrix::Dimensions";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_util::zip_eq::ZipEq")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_util::zip_eq::ZipEq")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::collections::btree::map::IntoIter")
                                                                              []
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Challenge
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              []
                                                                              [ Challenge ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [ Challenge ]
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Challenge;
                                                                                            Challenge
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [ Challenge ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [ Challenge ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      (Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Challenge
                                                                            ];
                                                                          Ty.path
                                                                            "p3_matrix::Dimensions";
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ])
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_util::zip_eq::ZipEq")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_util::zip_eq::ZipEq")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::collections::btree::map::IntoIter")
                                                                            []
                                                                            [
                                                                              Ty.path "usize";
                                                                              Ty.tuple
                                                                                [
                                                                                  Challenge;
                                                                                  Challenge
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [ Challenge ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [ Challenge ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "map",
                                                                  [],
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.path "usize";
                                                                            Challenge
                                                                          ];
                                                                        Ty.path
                                                                          "p3_matrix::Dimensions";
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Challenge;
                                                                                            Challenge
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [ Challenge ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [ Challenge ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      (Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Challenge
                                                                            ];
                                                                          Ty.path
                                                                            "p3_matrix::Dimensions";
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ])
                                                                  ]
                                                                |),
                                                                [
                                                                  M.read (|
                                                                    M.match_operator (|
                                                                      Ty.apply
                                                                        (Ty.path "*")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_util::zip_eq::ZipEq")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::collections::btree::map::IntoIter")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Challenge;
                                                                                          Challenge
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [ Challenge ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::slice::iter::Iter")
                                                                                []
                                                                                [ Challenge ]
                                                                            ]
                                                                        ],
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::ops::control_flow::ControlFlow")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "core::convert::Infallible";
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::InputError")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Error";
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                        FriMmcs
                                                                                        "Error"
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::collections::btree::map::IntoIter")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "usize";
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Challenge;
                                                                                              Challenge
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [ Challenge ]
                                                                                ]
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::ops::try_trait::Try",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::result::Result")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_util::zip_eq::ZipEq")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::collections::btree::map::IntoIter")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "usize";
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Challenge;
                                                                                                Challenge
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_circle::pcs::InputError")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Val ]
                                                                                      InputMmcs
                                                                                      "Error";
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Challenge ]
                                                                                      FriMmcs
                                                                                      "Error"
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            [],
                                                                            "branch",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_util::zip_eq::ZipEq")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::collections::btree::map::IntoIter")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize";
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Challenge
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::InputError")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Error";
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                        FriMmcs
                                                                                        "Error"
                                                                                    ]
                                                                                ],
                                                                              M.get_function (|
                                                                                "p3_util::zip_eq::zip_eq",
                                                                                [],
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::collections::btree::map::IntoIter")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "usize";
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Challenge;
                                                                                              Challenge
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::collections::btree::map::IntoIter")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "usize";
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Challenge;
                                                                                              Challenge
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [ Challenge ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_circle::pcs::InputError")
                                                                                    []
                                                                                    [
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Val ]
                                                                                        InputMmcs
                                                                                        "Error";
                                                                                      Ty.associated_in_trait
                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                        []
                                                                                        [ Challenge
                                                                                        ]
                                                                                        FriMmcs
                                                                                        "Error"
                                                                                    ]
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.read (|
                                                                                  M.match_operator (|
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_util::zip_eq::ZipEq")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::collections::btree::map::IntoIter")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize";
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Challenge
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::slice::iter::Iter")
                                                                                              []
                                                                                              [
                                                                                                Challenge
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::ops::control_flow::ControlFlow")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::result::Result")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "core::convert::Infallible";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_circle::pcs::InputError")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ]
                                                                                                      InputMmcs
                                                                                                      "Error";
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                      FriMmcs
                                                                                                      "Error"
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_util::zip_eq::ZipEq")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::collections::btree::map::IntoIter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Challenge
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::try_trait::Try",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::result::Result")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::collections::btree::map::IntoIter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "usize";
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Challenge
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::pcs::InputError")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Error";
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                    FriMmcs
                                                                                                    "Error"
                                                                                                ]
                                                                                            ],
                                                                                          [],
                                                                                          [],
                                                                                          "branch",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::result::Result")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_util::zip_eq::ZipEq")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::collections::btree::map::IntoIter")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "usize";
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Challenge
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::slice::iter::Iter")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_circle::pcs::InputError")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ]
                                                                                                      InputMmcs
                                                                                                      "Error";
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                      FriMmcs
                                                                                                      "Error"
                                                                                                  ]
                                                                                              ],
                                                                                            M.get_function (|
                                                                                              "p3_util::zip_eq::zip_eq",
                                                                                              [],
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::collections::btree::map::BTreeMap")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Challenge
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::collections::btree::map::IntoIter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Challenge
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_circle::pcs::InputError")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ]
                                                                                                      InputMmcs
                                                                                                      "Error";
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                      FriMmcs
                                                                                                      "Error"
                                                                                                  ]
                                                                                              ]
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                reduced_openings
                                                                                              |);
                                                                                              M.read (|
                                                                                                first_layer_siblings
                                                                                              |);
                                                                                              Value.StructTuple
                                                                                                "p3_circle::pcs::InputError::InputShapeError"
                                                                                                []
                                                                                            ]
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                              γ,
                                                                                              "core::ops::control_flow::ControlFlow::Break",
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                residual :=
                                                                                            M.copy (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            M.never_to_any (|
                                                                                              M.read (|
                                                                                                M.return_ (|
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "usize";
                                                                                                                Challenge
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_circle::pcs::InputError")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                              InputMmcs
                                                                                                              "Error";
                                                                                                            Ty.associated_in_trait
                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                              FriMmcs
                                                                                                              "Error"
                                                                                                          ]
                                                                                                      ],
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::try_trait::FromResidual",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::result::Result")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "usize";
                                                                                                                  Challenge
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_circle::pcs::InputError")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                []
                                                                                                                [
                                                                                                                  Val
                                                                                                                ]
                                                                                                                InputMmcs
                                                                                                                "Error";
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ]
                                                                                                                FriMmcs
                                                                                                                "Error"
                                                                                                            ]
                                                                                                        ],
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::result::Result")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "core::convert::Infallible";
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_circle::pcs::InputError")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ]
                                                                                                                  InputMmcs
                                                                                                                  "Error";
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                                  FriMmcs
                                                                                                                  "Error"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ],
                                                                                                      "from_residual",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        residual
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)));
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                              γ,
                                                                                              "core::ops::control_flow::ControlFlow::Continue",
                                                                                              0
                                                                                            |) in
                                                                                          let val :=
                                                                                            M.copy (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          val))
                                                                                    ]
                                                                                  |)
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        proof
                                                                                      |)
                                                                                    |),
                                                                                    "p3_circle::pcs::CirclePcsProof",
                                                                                    "lambdas"
                                                                                  |)
                                                                                |);
                                                                                Value.StructTuple
                                                                                  "p3_circle::pcs::InputError::InputShapeError"
                                                                                  []
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                γ,
                                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                                0
                                                                              |) in
                                                                            let residual :=
                                                                              M.copy (| γ0_0 |) in
                                                                            M.alloc (|
                                                                              M.never_to_any (|
                                                                                M.read (|
                                                                                  M.return_ (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize";
                                                                                                  Challenge
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_circle::pcs::InputError")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Error";
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                                FriMmcs
                                                                                                "Error"
                                                                                            ]
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::ops::try_trait::FromResidual",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::result::Result")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Challenge
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_circle::pcs::InputError")
                                                                                              []
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Val
                                                                                                  ]
                                                                                                  InputMmcs
                                                                                                  "Error";
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge
                                                                                                  ]
                                                                                                  FriMmcs
                                                                                                  "Error"
                                                                                              ]
                                                                                          ],
                                                                                        [],
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::result::Result")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "core::convert::Infallible";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::pcs::InputError")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Error";
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                    FriMmcs
                                                                                                    "Error"
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                        "from_residual",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.read (|
                                                                                          residual
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)));
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                γ,
                                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                                0
                                                                              |) in
                                                                            let val :=
                                                                              M.copy (| γ0_0 |) in
                                                                            val))
                                                                      ]
                                                                    |)
                                                                  |);
                                                                  M.closure
                                                                    (fun γ =>
                                                                      ltac:(M.monadic
                                                                        match γ with
                                                                        | [ α0 ] =>
                                                                          ltac:(M.monadic
                                                                            (M.match_operator (|
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "usize";
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Challenge
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.tuple
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.path
                                                                                              "usize";
                                                                                            Challenge
                                                                                          ];
                                                                                        Ty.path
                                                                                          "p3_matrix::Dimensions";
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ])
                                                                                ],
                                                                              M.alloc (| α0 |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ,
                                                                                        0
                                                                                      |) in
                                                                                    let γ0_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ,
                                                                                        1
                                                                                      |) in
                                                                                    let γ1_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        1
                                                                                      |) in
                                                                                    let γ2_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ1_0,
                                                                                        0
                                                                                      |) in
                                                                                    let γ2_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ1_0,
                                                                                        1
                                                                                      |) in
                                                                                    let
                                                                                          log_height :=
                                                                                      M.copy (|
                                                                                        γ2_0
                                                                                      |) in
                                                                                    let γ3_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ2_1,
                                                                                        0
                                                                                      |) in
                                                                                    let γ3_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ2_1,
                                                                                        1
                                                                                      |) in
                                                                                    let ro :=
                                                                                      M.copy (|
                                                                                        γ3_1
                                                                                      |) in
                                                                                    let γ1_1 :=
                                                                                      M.read (|
                                                                                        γ1_1
                                                                                      |) in
                                                                                    let fl_sib :=
                                                                                      M.copy (|
                                                                                        γ1_1
                                                                                      |) in
                                                                                    let γ0_1 :=
                                                                                      M.read (|
                                                                                        γ0_1
                                                                                      |) in
                                                                                    let lambda :=
                                                                                      M.copy (|
                                                                                        γ0_1
                                                                                      |) in
                                                                                    M.read (|
                                                                                      let~ _ :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                []
                                                                                            ] :=
                                                                                        M.match_operator (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                []
                                                                                            ],
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.use
                                                                                                    (M.alloc (|
                                                                                                      UnOp.not (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "bool",
                                                                                                          BinOp.gt,
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              log_height
                                                                                                            |);
                                                                                                            Value.Integer
                                                                                                              IntegerKind.Usize
                                                                                                              0
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)) in
                                                                                                let
                                                                                                      _ :=
                                                                                                  is_constant_or_break_match (|
                                                                                                    M.read (|
                                                                                                      γ
                                                                                                    |),
                                                                                                    Value.Bool
                                                                                                      true
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.never_to_any (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "never",
                                                                                                      M.get_function (|
                                                                                                        "core::panicking::panic",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        mk_str (|
                                                                                                          "assertion failed: log_height > 0"
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.alloc (|
                                                                                                  Value.Tuple
                                                                                                    []
                                                                                                |)))
                                                                                          ]
                                                                                        |) in
                                                                                      let~
                                                                                            orig_size :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize"
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.path
                                                                                              "usize",
                                                                                            BinOp.Wrap.sub,
                                                                                            [
                                                                                              M.read (|
                                                                                                log_height
                                                                                              |);
                                                                                              M.read (|
                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                    M.deref (|
                                                                                                      M.read (|
                                                                                                        self
                                                                                                      |)
                                                                                                    |),
                                                                                                    "p3_circle::pcs::CirclePcs",
                                                                                                    "fri_config"
                                                                                                  |),
                                                                                                  "p3_fri::config::FriConfig",
                                                                                                  "log_blowup"
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~
                                                                                            bits_reduced :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize"
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.path
                                                                                              "usize",
                                                                                            BinOp.Wrap.sub,
                                                                                            [
                                                                                              M.read (|
                                                                                                log_global_max_height
                                                                                              |);
                                                                                              M.read (|
                                                                                                log_height
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~
                                                                                            orig_idx :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize"
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.path
                                                                                              "usize",
                                                                                            M.get_function (|
                                                                                              "p3_circle::ordering::cfft_permute_index",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "usize",
                                                                                                BinOp.Wrap.shr,
                                                                                                [
                                                                                                  M.read (|
                                                                                                    index
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    bits_reduced
                                                                                                  |)
                                                                                                ]
                                                                                              |);
                                                                                              M.read (|
                                                                                                log_height
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~
                                                                                            lde_domain :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_circle::domain::CircleDomain")
                                                                                              []
                                                                                              [ Val
                                                                                              ],
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ],
                                                                                              "standard",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                log_height
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~ p :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::point::Point")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_circle::point::Point")
                                                                                              []
                                                                                              [ Val
                                                                                              ],
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_circle::domain::CircleDomain")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ],
                                                                                              "nth_point",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                lde_domain
                                                                                              |);
                                                                                              M.read (|
                                                                                                orig_idx
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~
                                                                                            lambda_corrected :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Challenge,
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::arith::Sub",
                                                                                              Challenge,
                                                                                              [],
                                                                                              [
                                                                                                Challenge
                                                                                              ],
                                                                                              "sub",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                ro
                                                                                              |);
                                                                                              M.call_closure (|
                                                                                                Challenge,
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::arith::Mul",
                                                                                                  Challenge,
                                                                                                  [],
                                                                                                  [
                                                                                                    Val
                                                                                                  ],
                                                                                                  "mul",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    lambda
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Val,
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_circle::point::Point")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ],
                                                                                                      "v_n",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        p
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        orig_size
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~
                                                                                            fl_values :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            M.get_function (|
                                                                                              "alloc::vec::from_elem",
                                                                                              [],
                                                                                              [
                                                                                                Challenge
                                                                                              ]
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                lambda_corrected
                                                                                              |);
                                                                                              Value.Integer
                                                                                                IntegerKind.Usize
                                                                                                2
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let~ _ :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                []
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          M.write (|
                                                                                            M.deref (|
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&mut")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge
                                                                                                  ],
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::index::IndexMut",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ],
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ],
                                                                                                  "index_mut",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.MutRef,
                                                                                                    fl_values
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.path
                                                                                                      "usize",
                                                                                                    BinOp.Wrap.bit_xor,
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "usize",
                                                                                                        BinOp.Wrap.bit_and,
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.path
                                                                                                              "usize",
                                                                                                            BinOp.Wrap.shr,
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                index
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                bits_reduced
                                                                                                              |)
                                                                                                            ]
                                                                                                          |);
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            1
                                                                                                        ]
                                                                                                      |);
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |),
                                                                                            M.read (|
                                                                                              fl_sib
                                                                                            |)
                                                                                          |)
                                                                                        |) in
                                                                                      let~
                                                                                            fri_input :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize";
                                                                                                  Challenge
                                                                                                ]
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "usize",
                                                                                                BinOp.Wrap.sub,
                                                                                                [
                                                                                                  M.read (|
                                                                                                    log_height
                                                                                                  |);
                                                                                                  Value.Integer
                                                                                                    IntegerKind.Usize
                                                                                                    1
                                                                                                ]
                                                                                              |);
                                                                                              M.call_closure (|
                                                                                                Challenge,
                                                                                                M.get_function (|
                                                                                                  "p3_circle::folding::fold_y_row",
                                                                                                  [],
                                                                                                  [
                                                                                                    Val;
                                                                                                    Challenge;
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::iter::adapters::copied::Copied")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::slice::iter::Iter")
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.path
                                                                                                      "usize",
                                                                                                    BinOp.Wrap.shr,
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        index
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "usize",
                                                                                                        BinOp.Wrap.add,
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            bits_reduced
                                                                                                          |);
                                                                                                          Value.Integer
                                                                                                            IntegerKind.Usize
                                                                                                            1
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.path
                                                                                                      "usize",
                                                                                                    BinOp.Wrap.sub,
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        log_height
                                                                                                      |);
                                                                                                      Value.Integer
                                                                                                        IntegerKind.Usize
                                                                                                        1
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.read (|
                                                                                                    bivariate_beta
                                                                                                  |);
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::iter::adapters::copied::Copied")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::slice::iter::Iter")
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                      ],
                                                                                                    M.get_trait_method (|
                                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::slice::iter::Iter")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge
                                                                                                        ],
                                                                                                      [],
                                                                                                      [],
                                                                                                      "copied",
                                                                                                      [],
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::slice::iter::Iter")
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ],
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge
                                                                                                            ],
                                                                                                          "iter",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    fl_values
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                        |) in
                                                                                      let~ fl_dims :
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "p3_matrix::Dimensions"
                                                                                            ] :=
                                                                                        M.alloc (|
                                                                                          Value.StructRecord
                                                                                            "p3_matrix::Dimensions"
                                                                                            [
                                                                                              ("width",
                                                                                                Value.Integer
                                                                                                  IntegerKind.Usize
                                                                                                  0);
                                                                                              ("height",
                                                                                                M.call_closure (|
                                                                                                  Ty.path
                                                                                                    "usize",
                                                                                                  BinOp.Wrap.shl,
                                                                                                  [
                                                                                                    Value.Integer
                                                                                                      IntegerKind.Usize
                                                                                                      1;
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "usize",
                                                                                                      BinOp.Wrap.sub,
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          log_height
                                                                                                        |);
                                                                                                        Value.Integer
                                                                                                          IntegerKind.Usize
                                                                                                          1
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |))
                                                                                            ]
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.Tuple
                                                                                          [
                                                                                            M.read (|
                                                                                              fri_input
                                                                                            |);
                                                                                            M.read (|
                                                                                              fl_dims
                                                                                            |);
                                                                                            M.read (|
                                                                                              fl_values
                                                                                            |)
                                                                                          ]
                                                                                      |)
                                                                                    |)))
                                                                              ]
                                                                            |)))
                                                                        | _ =>
                                                                          M.impossible
                                                                            "wrong number of arguments"
                                                                        end))
                                                                ]
                                                              |)
                                                            ]
                                                          |)
                                                        |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let γ0_0 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ,
                                                                  0
                                                                |) in
                                                              let γ0_1 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ,
                                                                  1
                                                                |) in
                                                              let γ0_2 :=
                                                                M.SubPointer.get_tuple_field (|
                                                                  γ,
                                                                  2
                                                                |) in
                                                              let fri_input := M.copy (| γ0_0 |) in
                                                              let fl_dims := M.copy (| γ0_1 |) in
                                                              let fl_leaves := M.copy (| γ0_2 |) in
                                                              let~ _ :
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [ Ty.tuple [] ] :=
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    Ty.tuple [],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Challenge
                                                                            ]
                                                                        ],
                                                                      "reverse",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.MutRef,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&mut")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize";
                                                                                        Challenge
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::DerefMut",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Challenge
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref_mut",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.MutRef,
                                                                                fri_input
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |) in
                                                              let~ _ :
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [ Ty.tuple [] ] :=
                                                                M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [ Ty.tuple [] ],
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::ops::control_flow::ControlFlow")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::result::Result")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "core::convert::Infallible";
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_circle::pcs::InputError")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Val ]
                                                                                    InputMmcs
                                                                                    "Error";
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Challenge ]
                                                                                    FriMmcs
                                                                                    "Error"
                                                                                ]
                                                                            ];
                                                                          Ty.tuple []
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::ops::try_trait::Try",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          []
                                                                          [
                                                                            Ty.tuple [];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_circle::pcs::InputError")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                  []
                                                                                  [ Val ]
                                                                                  InputMmcs
                                                                                  "Error";
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                  []
                                                                                  [ Challenge ]
                                                                                  FriMmcs
                                                                                  "Error"
                                                                              ]
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "branch",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::result::Result")
                                                                            []
                                                                            [
                                                                              Ty.tuple [];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_circle::pcs::InputError")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Val ]
                                                                                    InputMmcs
                                                                                    "Error";
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Challenge ]
                                                                                    FriMmcs
                                                                                    "Error"
                                                                                ]
                                                                            ],
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::result::Result")
                                                                              []
                                                                              [
                                                                                Ty.tuple [];
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                  []
                                                                                  [ Challenge ]
                                                                                  FriMmcs
                                                                                  "Error"
                                                                              ],
                                                                            "map_err",
                                                                            [],
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_circle::pcs::InputError")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Val ]
                                                                                    InputMmcs
                                                                                    "Error";
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Challenge ]
                                                                                    FriMmcs
                                                                                    "Error"
                                                                                ];
                                                                              Ty.function
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Challenge ]
                                                                                    FriMmcs
                                                                                    "Error"
                                                                                ]
                                                                                (Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_circle::pcs::InputError")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Val ]
                                                                                      InputMmcs
                                                                                      "Error";
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Challenge ]
                                                                                      FriMmcs
                                                                                      "Error"
                                                                                  ])
                                                                            ]
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                []
                                                                                [
                                                                                  Ty.tuple [];
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Challenge ]
                                                                                    FriMmcs
                                                                                    "Error"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "p3_commit::mmcs::Mmcs",
                                                                                FriMmcs,
                                                                                [],
                                                                                [ Challenge ],
                                                                                "verify_batch",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          self
                                                                                        |)
                                                                                      |),
                                                                                      "p3_circle::pcs::CirclePcs",
                                                                                      "fri_config"
                                                                                    |),
                                                                                    "p3_fri::config::FriConfig",
                                                                                    "mmcs"
                                                                                  |)
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            proof
                                                                                          |)
                                                                                        |),
                                                                                        "p3_circle::pcs::CirclePcsProof",
                                                                                        "first_layer_commitment"
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "p3_matrix::Dimensions"
                                                                                            ]
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::ops::deref::Deref",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "p3_matrix::Dimensions";
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ],
                                                                                        [],
                                                                                        [],
                                                                                        "deref",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              fl_dims
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.call_closure (|
                                                                                  Ty.path "usize",
                                                                                  BinOp.Wrap.shr,
                                                                                  [
                                                                                    M.read (|
                                                                                      index
                                                                                    |);
                                                                                    Value.Integer
                                                                                      IntegerKind.I32
                                                                                      1
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::ops::deref::Deref",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ],
                                                                                        [],
                                                                                        [],
                                                                                        "deref",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              fl_leaves
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.read (|
                                                                                      first_layer_proof
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.constructor_as_closure
                                                                              "p3_circle::pcs::InputError::FirstLayerMmcsError"
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ0_0 :=
                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                            γ,
                                                                            "core::ops::control_flow::ControlFlow::Break",
                                                                            0
                                                                          |) in
                                                                        let residual :=
                                                                          M.copy (| γ0_0 |) in
                                                                        M.alloc (|
                                                                          M.never_to_any (|
                                                                            M.read (|
                                                                              M.return_ (|
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize";
                                                                                              Challenge
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_circle::pcs::InputError")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Error";
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ]
                                                                                            FriMmcs
                                                                                            "Error"
                                                                                        ]
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::ops::try_trait::FromResidual",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::result::Result")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize";
                                                                                                Challenge
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_circle::pcs::InputError")
                                                                                          []
                                                                                          [
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                              InputMmcs
                                                                                              "Error";
                                                                                            Ty.associated_in_trait
                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                              []
                                                                                              [
                                                                                                Challenge
                                                                                              ]
                                                                                              FriMmcs
                                                                                              "Error"
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::result::Result")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "core::convert::Infallible";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_circle::pcs::InputError")
                                                                                            []
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Error";
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                                FriMmcs
                                                                                                "Error"
                                                                                            ]
                                                                                        ]
                                                                                    ],
                                                                                    "from_residual",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      residual
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |)));
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ0_0 :=
                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                            γ,
                                                                            "core::ops::control_flow::ControlFlow::Continue",
                                                                            0
                                                                          |) in
                                                                        let val :=
                                                                          M.copy (| γ0_0 |) in
                                                                        val))
                                                                  ]
                                                                |) in
                                                              M.alloc (|
                                                                Value.StructTuple
                                                                  "core::result::Result::Ok"
                                                                  [ M.read (| fri_input |) ]
                                                              |)))
                                                        ]
                                                      |)))
                                                ]
                                              |)
                                            |)))
                                      ]
                                    |)))
                              ]
                            |)))
                        | _ => M.impossible "wrong number of arguments"
                        end))
                ]
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val InputMmcs FriMmcs Challenge Challenger : Ty.t),
      M.IsTraitInstance
        "p3_commit::pcs::Pcs"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) [ Challenge; Challenger ]
        (Self Val InputMmcs FriMmcs Challenge Challenger)
        (* Instance *)
        [
          ("Domain", InstanceField.Ty (_Domain Val InputMmcs FriMmcs Challenge Challenger));
          ("Commitment", InstanceField.Ty (_Commitment Val InputMmcs FriMmcs Challenge Challenger));
          ("ProverData", InstanceField.Ty (_ProverData Val InputMmcs FriMmcs Challenge Challenger));
          ("EvaluationsOnDomain",
            InstanceField.Ty (_EvaluationsOnDomain Val InputMmcs FriMmcs Challenge Challenger));
          ("Proof", InstanceField.Ty (_Proof Val InputMmcs FriMmcs Challenge Challenger));
          ("Error", InstanceField.Ty (_Error Val InputMmcs FriMmcs Challenge Challenger));
          ("natural_domain_for_degree",
            InstanceField.Method
              (natural_domain_for_degree Val InputMmcs FriMmcs Challenge Challenger));
          ("commit", InstanceField.Method (commit Val InputMmcs FriMmcs Challenge Challenger));
          ("get_evaluations_on_domain",
            InstanceField.Method
              (get_evaluations_on_domain Val InputMmcs FriMmcs Challenge Challenger));
          ("open", InstanceField.Method (open Val InputMmcs FriMmcs Challenge Challenger));
          ("verify", InstanceField.Method (verify Val InputMmcs FriMmcs Challenge Challenger))
        ].
  End Impl_p3_commit_pcs_Pcs_where_p3_field_extension_complex_ComplexExtendable_Val_where_p3_field_field_ExtensionField_Challenge_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_p3_challenger_FieldChallenger_Challenger_Val_where_p3_challenger_grinding_challenger_GrindingChallenger_Challenger_where_p3_challenger_CanObserve_Challenger_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Commitment_Challenge_Challenger_for_p3_circle_pcs_CirclePcs_Val_InputMmcs_FriMmcs.
End pcs.
