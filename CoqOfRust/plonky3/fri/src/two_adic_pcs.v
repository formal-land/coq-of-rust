(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module two_adic_pcs.
  (* StructRecord
    {
      name := "TwoAdicFriPcs";
      const_params := [];
      ty_params := [ "Val"; "Dft"; "InputMmcs"; "FriMmcs" ];
      fields :=
        [
          ("dft", Dft);
          ("mmcs", InputMmcs);
          ("fri", Ty.apply (Ty.path "p3_fri::config::FriConfig") [] [ FriMmcs ]);
          ("_phantom", Ty.apply (Ty.path "core::marker::PhantomData") [] [ Val ])
        ];
    } *)
  
  Module Impl_core_fmt_Debug_where_core_fmt_Debug_Val_where_core_fmt_Debug_Dft_where_core_fmt_Debug_InputMmcs_where_core_fmt_Debug_FriMmcs_for_p3_fri_two_adic_pcs_TwoAdicFriPcs_Val_Dft_InputMmcs_FriMmcs.
    Definition Self (Val Dft InputMmcs FriMmcs : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriPcs") [] [ Val; Dft; InputMmcs; FriMmcs ].
    
    (* Debug *)
    Definition fmt
        (Val Dft InputMmcs FriMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs in
      match ε, τ, α with
      | [], [], [ self; f ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let f := M.alloc (| f |) in
          M.call_closure (|
            Ty.apply
              (Ty.path "core::result::Result")
              []
              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
            M.get_associated_function (|
              Ty.path "core::fmt::Formatter",
              "debug_struct_field4_finish",
              [],
              []
            |),
            [
              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "TwoAdicFriPcs" |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "dft" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                        "dft"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "mmcs" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                        "mmcs"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "fri" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                        "fri"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "_phantom" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.alloc (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                            "_phantom"
                          |)
                        |)
                      |)
                    |)
                  |)
                |))
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val Dft InputMmcs FriMmcs : Ty.t),
      M.IsTraitInstance
        "core::fmt::Debug"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self Val Dft InputMmcs FriMmcs)
        (* Instance *) [ ("fmt", InstanceField.Method (fmt Val Dft InputMmcs FriMmcs)) ].
  End Impl_core_fmt_Debug_where_core_fmt_Debug_Val_where_core_fmt_Debug_Dft_where_core_fmt_Debug_InputMmcs_where_core_fmt_Debug_FriMmcs_for_p3_fri_two_adic_pcs_TwoAdicFriPcs_Val_Dft_InputMmcs_FriMmcs.
  
  Module Impl_p3_fri_two_adic_pcs_TwoAdicFriPcs_Val_Dft_InputMmcs_FriMmcs.
    Definition Self (Val Dft InputMmcs FriMmcs : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriPcs") [] [ Val; Dft; InputMmcs; FriMmcs ].
    
    (*
        pub const fn new(dft: Dft, mmcs: InputMmcs, fri: FriConfig<FriMmcs>) -> Self {
            Self {
                dft,
                mmcs,
                fri,
                _phantom: PhantomData,
            }
        }
    *)
    Definition new
        (Val Dft InputMmcs FriMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs in
      match ε, τ, α with
      | [], [], [ dft; mmcs; fri ] =>
        ltac:(M.monadic
          (let dft := M.alloc (| dft |) in
          let mmcs := M.alloc (| mmcs |) in
          let fri := M.alloc (| fri |) in
          Value.StructRecord
            "p3_fri::two_adic_pcs::TwoAdicFriPcs"
            [
              ("dft", M.read (| dft |));
              ("mmcs", M.read (| mmcs |));
              ("fri", M.read (| fri |));
              ("_phantom", Value.StructTuple "core::marker::PhantomData" [])
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_new :
      forall (Val Dft InputMmcs FriMmcs : Ty.t),
      M.IsAssociatedFunction.C
        (Self Val Dft InputMmcs FriMmcs)
        "new"
        (new Val Dft InputMmcs FriMmcs).
    Admitted.
    Global Typeclasses Opaque new.
  End Impl_p3_fri_two_adic_pcs_TwoAdicFriPcs_Val_Dft_InputMmcs_FriMmcs.
  
  (* StructRecord
    {
      name := "BatchOpening";
      const_params := [];
      ty_params := [ "Val"; "InputMmcs" ];
      fields :=
        [
          ("opened_values",
            Ty.apply
              (Ty.path "alloc::vec::Vec")
              []
              [
                Ty.apply (Ty.path "alloc::vec::Vec") [] [ Val; Ty.path "alloc::alloc::Global" ];
                Ty.path "alloc::alloc::Global"
              ]);
          ("opening_proof",
            Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Proof")
        ];
    } *)
  
  Module underscore.
    Module Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_fri_two_adic_pcs_BatchOpening_Val_InputMmcs.
      Definition Self (Val InputMmcs : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "p3_fri::two_adic_pcs::BatchOpening") [] [ Val; InputMmcs ].
      
      (* Serialize *)
      Definition serialize
          (Val InputMmcs : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val InputMmcs in
        match ε, τ, α with
        | [], [ __S ], [ self; __serializer ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let __serializer := M.alloc (| __serializer |) in
            M.catch_return
              (Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                ]) (|
              ltac:(M.monadic
                (M.read (|
                  let~ __serde_state :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.associated_in_trait
                            "serde::ser::Serializer"
                            []
                            []
                            __S
                            "SerializeStruct"
                        ] :=
                    M.copy (|
                      M.match_operator (|
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.associated_in_trait
                              "serde::ser::Serializer"
                              []
                              []
                              __S
                              "SerializeStruct"
                          ],
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::ops::control_flow::ControlFlow")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.path "core::convert::Infallible";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ];
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct"
                              ],
                            M.get_trait_method (|
                              "core::ops::try_trait::Try",
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.associated_in_trait
                                    "serde::ser::Serializer"
                                    []
                                    []
                                    __S
                                    "SerializeStruct";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              [],
                              [],
                              "branch",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "core::result::Result")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "SerializeStruct";
                                    Ty.associated_in_trait
                                      "serde::ser::Serializer"
                                      []
                                      []
                                      __S
                                      "Error"
                                  ],
                                M.get_trait_method (|
                                  "serde::ser::Serializer",
                                  __S,
                                  [],
                                  [],
                                  "serialize_struct",
                                  [],
                                  []
                                |),
                                [
                                  M.read (| __serializer |);
                                  mk_str (| "BatchOpening" |);
                                  M.call_closure (|
                                    Ty.path "usize",
                                    BinOp.Wrap.add,
                                    [
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.add,
                                        [
                                          M.cast (Ty.path "usize") (Value.Bool false);
                                          Value.Integer IntegerKind.Usize 1
                                        ]
                                      |);
                                      Value.Integer IntegerKind.Usize 1
                                    ]
                                  |)
                                ]
                              |)
                            ]
                          |)
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Break",
                                  0
                                |) in
                              let residual := M.copy (| γ0_0 |) in
                              M.alloc (|
                                M.never_to_any (|
                                  M.read (|
                                    M.return_ (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        M.get_trait_method (|
                                          "core::ops::try_trait::FromResidual",
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Ok";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ],
                                          [],
                                          [
                                            Ty.apply
                                              (Ty.path "core::result::Result")
                                              []
                                              [
                                                Ty.path "core::convert::Infallible";
                                                Ty.associated_in_trait
                                                  "serde::ser::Serializer"
                                                  []
                                                  []
                                                  __S
                                                  "Error"
                                              ]
                                          ],
                                          "from_residual",
                                          [],
                                          []
                                        |),
                                        [ M.read (| residual |) ]
                                      |)
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ,
                                  "core::ops::control_flow::ControlFlow::Continue",
                                  0
                                |) in
                              let val := M.copy (| γ0_0 |) in
                              val))
                        ]
                      |)
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Val; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "opened_values" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_fri::two_adic_pcs::BatchOpening",
                                        "opened_values"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                    M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::ops::control_flow::ControlFlow")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.path "core::convert::Infallible";
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ];
                              Ty.tuple []
                            ],
                          M.get_trait_method (|
                            "core::ops::try_trait::Try",
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                              ],
                            [],
                            [],
                            "branch",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::result::Result")
                                []
                                [
                                  Ty.tuple [];
                                  Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                                ],
                              M.get_trait_method (|
                                "serde::ser::SerializeStruct",
                                Ty.associated_in_trait
                                  "serde::ser::Serializer"
                                  []
                                  []
                                  __S
                                  "SerializeStruct",
                                [],
                                [],
                                "serialize_field",
                                [],
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Val ]
                                    InputMmcs
                                    "Proof"
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (| M.borrow (| Pointer.Kind.MutRef, __serde_state |) |)
                                |);
                                mk_str (| "opening_proof" |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| self |) |),
                                        "p3_fri::two_adic_pcs::BatchOpening",
                                        "opening_proof"
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Break",
                                0
                              |) in
                            let residual := M.copy (| γ0_0 |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.read (|
                                  M.return_ (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Ok";
                                          Ty.associated_in_trait
                                            "serde::ser::Serializer"
                                            []
                                            []
                                            __S
                                            "Error"
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::try_trait::FromResidual",
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Ok";
                                            Ty.associated_in_trait
                                              "serde::ser::Serializer"
                                              []
                                              []
                                              __S
                                              "Error"
                                          ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "core::result::Result")
                                            []
                                            [
                                              Ty.path "core::convert::Infallible";
                                              Ty.associated_in_trait
                                                "serde::ser::Serializer"
                                                []
                                                []
                                                __S
                                                "Error"
                                            ]
                                        ],
                                        "from_residual",
                                        [],
                                        []
                                      |),
                                      [ M.read (| residual |) ]
                                    |)
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 :=
                              M.SubPointer.get_struct_tuple_field (|
                                γ,
                                "core::ops::control_flow::ControlFlow::Continue",
                                0
                              |) in
                            let val := M.copy (| γ0_0 |) in
                            val))
                      ]
                    |) in
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Ok";
                          Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "Error"
                        ],
                      M.get_trait_method (|
                        "serde::ser::SerializeStruct",
                        Ty.associated_in_trait "serde::ser::Serializer" [] [] __S "SerializeStruct",
                        [],
                        [],
                        "end",
                        [],
                        []
                      |),
                      [ M.read (| __serde_state |) ]
                    |)
                  |)
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val InputMmcs : Ty.t),
        M.IsTraitInstance
          "serde::ser::Serialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val InputMmcs)
          (* Instance *) [ ("serialize", InstanceField.Method (serialize Val InputMmcs)) ].
    End Impl_serde_ser_Serialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_fri_two_adic_pcs_BatchOpening_Val_InputMmcs.
    Module Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_fri_two_adic_pcs_BatchOpening_Val_InputMmcs.
      Definition Self (Val InputMmcs : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "p3_fri::two_adic_pcs::BatchOpening") [] [ Val; InputMmcs ].
      
      (* Deserialize *)
      Definition deserialize
          (Val InputMmcs : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self Val InputMmcs in
        match ε, τ, α with
        | [], [ __D ], [ __deserializer ] =>
          ltac:(M.monadic
            (let __deserializer := M.alloc (| __deserializer |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [
                  Ty.apply (Ty.path "p3_fri::two_adic_pcs::BatchOpening") [] [ Val; InputMmcs ];
                  Ty.associated_in_trait "serde::de::Deserializer" [] [] __D "Error"
                ],
              M.get_trait_method (|
                "serde::de::Deserializer",
                __D,
                [],
                [],
                "deserialize_struct",
                [],
                [
                  Ty.apply
                    (Ty.path "p3_fri::two_adic_pcs::_'1::deserialize::__Visitor")
                    []
                    [ Val; InputMmcs ]
                ]
              |),
              [
                M.read (| __deserializer |);
                mk_str (| "BatchOpening" |);
                M.read (|
                  get_constant (|
                    "p3_fri::two_adic_pcs::_'1::deserialize::FIELDS",
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "slice")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "str" ] ]
                      ]
                  |)
                |);
                Value.StructRecord
                  "p3_fri::two_adic_pcs::_'1::deserialize::__Visitor"
                  [
                    ("marker", Value.StructTuple "core::marker::PhantomData" []);
                    ("lifetime", Value.StructTuple "core::marker::PhantomData" [])
                  ]
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (Val InputMmcs : Ty.t),
        M.IsTraitInstance
          "serde::de::Deserialize"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self Val InputMmcs)
          (* Instance *) [ ("deserialize", InstanceField.Method (deserialize Val InputMmcs)) ].
    End Impl_serde_de_Deserialize_where_p3_field_field_Field_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_fri_two_adic_pcs_BatchOpening_Val_InputMmcs.
  End underscore.
  
  
  Module Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_fri_two_adic_pcs_BatchOpening_Val_InputMmcs.
    Definition Self (Val InputMmcs : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_fri::two_adic_pcs::BatchOpening") [] [ Val; InputMmcs ].
    
    (* Clone *)
    Definition clone
        (Val InputMmcs : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val InputMmcs in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructRecord
            "p3_fri::two_adic_pcs::BatchOpening"
            [
              ("opened_values",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [ Val; Ty.path "alloc::alloc::Global" ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ Val; Ty.path "alloc::alloc::Global" ];
                        Ty.path "alloc::alloc::Global"
                      ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_fri::two_adic_pcs::BatchOpening",
                            "opened_values"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("opening_proof",
                M.call_closure (|
                  Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Proof",
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Proof",
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_fri::two_adic_pcs::BatchOpening",
                            "opening_proof"
                          |)
                        |)
                      |)
                    |)
                  ]
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val InputMmcs : Ty.t),
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self Val InputMmcs)
        (* Instance *) [ ("clone", InstanceField.Method (clone Val InputMmcs)) ].
  End Impl_core_clone_Clone_where_core_clone_Clone_Val_where_p3_field_field_Field_Val_where_core_clone_Clone_InputMmcs_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_for_p3_fri_two_adic_pcs_BatchOpening_Val_InputMmcs.
  
  (* StructTuple
    {
      name := "TwoAdicFriGenericConfig";
      const_params := [];
      ty_params := [ "InputProof"; "InputError" ];
      fields :=
        [ Ty.apply (Ty.path "core::marker::PhantomData") [] [ Ty.tuple [ InputProof; InputError ] ]
        ];
    } *)
  
  Axiom TwoAdicFriGenericConfigForMmcs :
    forall (F M_ : Ty.t),
    (Ty.apply (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfigForMmcs") [] [ F; M_ ]) =
      (Ty.apply
        (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig")
        []
        [
          Ty.apply
            (Ty.path "alloc::vec::Vec")
            []
            [
              Ty.apply (Ty.path "p3_fri::two_adic_pcs::BatchOpening") [] [ F; M_ ];
              Ty.path "alloc::alloc::Global"
            ];
          Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ F ] M_ "Error"
        ]).
  
  Module Impl_p3_fri_config_FriGenericConfig_where_p3_field_field_TwoAdicField_F_where_core_fmt_Debug_InputError_F_for_p3_fri_two_adic_pcs_TwoAdicFriGenericConfig_InputProof_InputError.
    Definition Self (F InputProof InputError : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig")
        []
        [ InputProof; InputError ].
    
    (*     type InputProof = InputProof; *)
    Definition _InputProof (F InputProof InputError : Ty.t) : Ty.t := InputProof.
    
    (*     type InputError = InputError; *)
    Definition _InputError (F InputProof InputError : Ty.t) : Ty.t := InputError.
    
    (*
        fn extra_query_index_bits(&self) -> usize {
            0
        }
    *)
    Definition extra_query_index_bits
        (F InputProof InputError : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self F InputProof InputError in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.Integer IntegerKind.Usize 0))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn fold_row(
            &self,
            index: usize,
            log_height: usize,
            beta: F,
            evals: impl Iterator<Item = F>,
        ) -> F {
            let arity = 2;
            let log_arity = 1;
            let (e0, e1) = evals
                .collect_tuple()
                .expect("TwoAdicFriFolder only supports arity=2");
            // If performance critical, make this API stateful to avoid this
            // This is a bit more math than is necessary, but leaving it here
            // in case we want higher arity in the future
            let subgroup_start = F::two_adic_generator(log_height + log_arity)
                .exp_u64(reverse_bits_len(index, log_height) as u64);
            let mut xs = F::two_adic_generator(log_arity)
                .shifted_powers(subgroup_start)
                .take(arity)
                .collect_vec();
            reverse_slice_index_bits(&mut xs);
            assert_eq!(log_arity, 1, "can only interpolate two points for now");
            // interpolate and evaluate at beta
            e0 + (beta - xs[0]) * (e1 - e0) / (xs[1] - xs[0])
        }
    *)
    Definition fold_row
        (F InputProof InputError : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self F InputProof InputError in
      match ε, τ, α with
      | [], [ impl_Iterator_Item___F_ ], [ self; index; log_height; beta; evals ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let index := M.alloc (| index |) in
          let log_height := M.alloc (| log_height |) in
          let beta := M.alloc (| beta |) in
          let evals := M.alloc (| evals |) in
          M.read (|
            let~ arity : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
              M.alloc (| Value.Integer IntegerKind.Usize 2 |) in
            let~ log_arity : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
              M.alloc (| Value.Integer IntegerKind.Usize 1 |) in
            M.match_operator (|
              Ty.apply (Ty.path "*") [] [ F ],
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [ F; F ],
                  M.get_associated_function (|
                    Ty.apply (Ty.path "core::option::Option") [] [ Ty.tuple [ F; F ] ],
                    "expect",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply (Ty.path "core::option::Option") [] [ Ty.tuple [ F; F ] ],
                      M.get_trait_method (|
                        "itertools::Itertools",
                        impl_Iterator_Item___F_,
                        [],
                        [],
                        "collect_tuple",
                        [],
                        [ Ty.tuple [ F; F ] ]
                      |),
                      [ M.read (| evals |) ]
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| mk_str (| "TwoAdicFriFolder only supports arity=2" |) |)
                    |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                    let e0 := M.copy (| γ0_0 |) in
                    let e1 := M.copy (| γ0_1 |) in
                    let~ subgroup_start : Ty.apply (Ty.path "*") [] [ F ] :=
                      M.alloc (|
                        M.call_closure (|
                          F,
                          M.get_trait_method (|
                            "p3_field::field::PrimeCharacteristicRing",
                            F,
                            [],
                            [],
                            "exp_u64",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.alloc (|
                                M.call_closure (|
                                  F,
                                  M.get_trait_method (|
                                    "p3_field::field::TwoAdicField",
                                    F,
                                    [],
                                    [],
                                    "two_adic_generator",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.path "usize",
                                      BinOp.Wrap.add,
                                      [ M.read (| log_height |); M.read (| log_arity |) ]
                                    |)
                                  ]
                                |)
                              |)
                            |);
                            M.cast
                              (Ty.path "u64")
                              (M.call_closure (|
                                Ty.path "usize",
                                M.get_function (| "p3_util::reverse_bits_len", [], [] |),
                                [ M.read (| index |); M.read (| log_height |) ]
                              |))
                          ]
                        |)
                      |) in
                    let~ xs :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ],
                          M.get_trait_method (|
                            "itertools::Itertools",
                            Ty.apply
                              (Ty.path "core::iter::adapters::take::Take")
                              []
                              [ Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ] ],
                            [],
                            [],
                            "collect_vec",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::take::Take")
                                []
                                [ Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ] ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ],
                                [],
                                [],
                                "take",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ],
                                  M.get_trait_method (|
                                    "p3_field::field::PrimeCharacteristicRing",
                                    F,
                                    [],
                                    [],
                                    "shifted_powers",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        M.call_closure (|
                                          F,
                                          M.get_trait_method (|
                                            "p3_field::field::TwoAdicField",
                                            F,
                                            [],
                                            [],
                                            "two_adic_generator",
                                            [],
                                            []
                                          |),
                                          [ M.read (| log_arity |) ]
                                        |)
                                      |)
                                    |);
                                    M.read (| subgroup_start |)
                                  ]
                                |);
                                M.read (| arity |)
                              ]
                            |)
                          ]
                        |)
                      |) in
                    let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.tuple [],
                          M.get_function (| "p3_util::reverse_slice_index_bits", [], [ F ] |),
                          [
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&mut")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ F ] ],
                                  M.get_trait_method (|
                                    "core::ops::deref::DerefMut",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ F; Ty.path "alloc::alloc::Global" ],
                                    [],
                                    [],
                                    "deref_mut",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.MutRef,
                                      M.deref (| M.borrow (| Pointer.Kind.MutRef, xs |) |)
                                    |)
                                  ]
                                |)
                              |)
                            |)
                          ]
                        |)
                      |) in
                    let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                      M.match_operator (|
                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                        M.alloc (|
                          Value.Tuple
                            [
                              M.borrow (| Pointer.Kind.Ref, log_arity |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.alloc (| Value.Integer IntegerKind.Usize 1 |)
                              |)
                            ]
                        |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let left_val := M.copy (| γ0_0 |) in
                              let right_val := M.copy (| γ0_1 |) in
                              M.match_operator (|
                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                M.alloc (| Value.Tuple [] |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let γ :=
                                        M.use
                                          (M.alloc (|
                                            UnOp.not (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                BinOp.eq,
                                                [
                                                  M.read (| M.deref (| M.read (| left_val |) |) |);
                                                  M.read (| M.deref (| M.read (| right_val |) |) |)
                                                ]
                                              |)
                                            |)
                                          |)) in
                                      let _ :=
                                        is_constant_or_break_match (|
                                          M.read (| γ |),
                                          Value.Bool true
                                        |) in
                                      M.alloc (|
                                        M.never_to_any (|
                                          M.read (|
                                            let~ kind :
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [ Ty.path "core::panicking::AssertKind" ] :=
                                              M.alloc (|
                                                Value.StructTuple
                                                  "core::panicking::AssertKind::Eq"
                                                  []
                                              |) in
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "never",
                                                M.get_function (|
                                                  "core::panicking::assert_failed",
                                                  [],
                                                  [ Ty.path "usize"; Ty.path "usize" ]
                                                |),
                                                [
                                                  M.read (| kind |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (| M.read (| left_val |) |)
                                                      |)
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (| M.read (| right_val |) |)
                                                      |)
                                                    |)
                                                  |);
                                                  Value.StructTuple
                                                    "core::option::Option::Some"
                                                    [
                                                      M.call_closure (|
                                                        Ty.path "core::fmt::Arguments",
                                                        M.get_associated_function (|
                                                          Ty.path "core::fmt::Arguments",
                                                          "new_const",
                                                          [ Value.Integer IntegerKind.Usize 1 ],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.alloc (|
                                                                  Value.Array
                                                                    [
                                                                      mk_str (|
                                                                        "can only interpolate two points for now"
                                                                      |)
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    ]
                                                ]
                                              |)
                                            |)
                                          |)
                                        |)
                                      |)));
                                  fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                ]
                              |)))
                        ]
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        F,
                        M.get_trait_method (|
                          "core::ops::arith::Add",
                          F,
                          [],
                          [ F ],
                          "add",
                          [],
                          []
                        |),
                        [
                          M.read (| e0 |);
                          M.call_closure (|
                            F,
                            M.get_trait_method (|
                              "core::ops::arith::Div",
                              F,
                              [],
                              [ F ],
                              "div",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                F,
                                M.get_trait_method (|
                                  "core::ops::arith::Mul",
                                  F,
                                  [],
                                  [ F ],
                                  "mul",
                                  [],
                                  []
                                |),
                                [
                                  M.call_closure (|
                                    F,
                                    M.get_trait_method (|
                                      "core::ops::arith::Sub",
                                      F,
                                      [],
                                      [ F ],
                                      "sub",
                                      [],
                                      []
                                    |),
                                    [
                                      M.read (| beta |);
                                      M.read (|
                                        M.deref (|
                                          M.call_closure (|
                                            Ty.apply (Ty.path "&") [] [ F ],
                                            M.get_trait_method (|
                                              "core::ops::index::Index",
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ F; Ty.path "alloc::alloc::Global" ],
                                              [],
                                              [ Ty.path "usize" ],
                                              "index",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (| Pointer.Kind.Ref, xs |);
                                              Value.Integer IntegerKind.Usize 0
                                            ]
                                          |)
                                        |)
                                      |)
                                    ]
                                  |);
                                  M.call_closure (|
                                    F,
                                    M.get_trait_method (|
                                      "core::ops::arith::Sub",
                                      F,
                                      [],
                                      [ F ],
                                      "sub",
                                      [],
                                      []
                                    |),
                                    [ M.read (| e1 |); M.read (| e0 |) ]
                                  |)
                                ]
                              |);
                              M.call_closure (|
                                F,
                                M.get_trait_method (|
                                  "core::ops::arith::Sub",
                                  F,
                                  [],
                                  [ F ],
                                  "sub",
                                  [],
                                  []
                                |),
                                [
                                  M.read (|
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply (Ty.path "&") [] [ F ],
                                        M.get_trait_method (|
                                          "core::ops::index::Index",
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ F; Ty.path "alloc::alloc::Global" ],
                                          [],
                                          [ Ty.path "usize" ],
                                          "index",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (| Pointer.Kind.Ref, xs |);
                                          Value.Integer IntegerKind.Usize 1
                                        ]
                                      |)
                                    |)
                                  |);
                                  M.read (|
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply (Ty.path "&") [] [ F ],
                                        M.get_trait_method (|
                                          "core::ops::index::Index",
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ F; Ty.path "alloc::alloc::Global" ],
                                          [],
                                          [ Ty.path "usize" ],
                                          "index",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (| Pointer.Kind.Ref, xs |);
                                          Value.Integer IntegerKind.Usize 0
                                        ]
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            ]
                          |)
                        ]
                      |)
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn fold_matrix<M: Matrix<F>>(&self, beta: F, m: M) -> Vec<F> {
            // We use the fact that
            //     p_e(x^2) = (p(x) + p(-x)) / 2
            //     p_o(x^2) = (p(x) - p(-x)) / (2 x)
            // that is,
            //     p_e(g^(2i)) = (p(g^i) + p(g^(n/2 + i))) / 2
            //     p_o(g^(2i)) = (p(g^i) - p(g^(n/2 + i))) / (2 g^i)
            // so
            //     result(g^(2i)) = p_e(g^(2i)) + beta p_o(g^(2i))
            //                    = (1/2 + beta/2 g_inv^i) p(g^i)
            //                    + (1/2 - beta/2 g_inv^i) p(g^(n/2 + i))
            let g_inv = F::two_adic_generator(log2_strict_usize(m.height()) + 1).inverse();
            let one_half = F::ONE.halve();
            let half_beta = beta * one_half;
    
            // TODO: vectorize this (after we have packed extension fields)
    
            // beta/2 times successive powers of g_inv
            let mut powers = g_inv
                .shifted_powers(half_beta)
                .take(m.height())
                .collect_vec();
            reverse_slice_index_bits(&mut powers);
    
            m.par_rows()
                .zip(powers)
                .map(|(mut row, power)| {
                    let (lo, hi) = row.next_tuple().unwrap();
                    (one_half + power) * lo + (one_half - power) * hi
                })
                .collect()
        }
    *)
    Definition fold_matrix
        (F InputProof InputError : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self F InputProof InputError in
      match ε, τ, α with
      | [], [ M_ ], [ self; beta; m ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let beta := M.alloc (| beta |) in
          let m := M.alloc (| m |) in
          M.read (|
            let~ g_inv : Ty.apply (Ty.path "*") [] [ F ] :=
              M.alloc (|
                M.call_closure (|
                  F,
                  M.get_trait_method (| "p3_field::field::Field", F, [], [], "inverse", [], [] |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.alloc (|
                        M.call_closure (|
                          F,
                          M.get_trait_method (|
                            "p3_field::field::TwoAdicField",
                            F,
                            [],
                            [],
                            "two_adic_generator",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.path "usize",
                              BinOp.Wrap.add,
                              [
                                M.call_closure (|
                                  Ty.path "usize",
                                  M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                                  [
                                    M.call_closure (|
                                      Ty.path "usize",
                                      M.get_trait_method (|
                                        "p3_matrix::Matrix",
                                        M_,
                                        [],
                                        [ F ],
                                        "height",
                                        [],
                                        []
                                      |),
                                      [ M.borrow (| Pointer.Kind.Ref, m |) ]
                                    |)
                                  ]
                                |);
                                Value.Integer IntegerKind.Usize 1
                              ]
                            |)
                          ]
                        |)
                      |)
                    |)
                  ]
                |)
              |) in
            let~ one_half : Ty.apply (Ty.path "*") [] [ F ] :=
              M.alloc (|
                M.call_closure (|
                  F,
                  M.get_trait_method (| "p3_field::field::Field", F, [], [], "halve", [], [] |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      get_constant (| "p3_field::field::PrimeCharacteristicRing::ONE", F |)
                    |)
                  ]
                |)
              |) in
            let~ half_beta : Ty.apply (Ty.path "*") [] [ F ] :=
              M.alloc (|
                M.call_closure (|
                  F,
                  M.get_trait_method (| "core::ops::arith::Mul", F, [], [ F ], "mul", [], [] |),
                  [ M.read (| beta |); M.read (| one_half |) ]
                |)
              |) in
            let~ powers :
                Ty.apply
                  (Ty.path "*")
                  []
                  [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ],
                  M.get_trait_method (|
                    "itertools::Itertools",
                    Ty.apply
                      (Ty.path "core::iter::adapters::take::Take")
                      []
                      [ Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ] ],
                    [],
                    [],
                    "collect_vec",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::take::Take")
                        []
                        [ Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ] ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ],
                        [],
                        [],
                        "take",
                        [],
                        []
                      |),
                      [
                        M.call_closure (|
                          Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ],
                          M.get_trait_method (|
                            "p3_field::field::PrimeCharacteristicRing",
                            F,
                            [],
                            [],
                            "shifted_powers",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, g_inv |); M.read (| half_beta |) ]
                        |);
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_trait_method (|
                            "p3_matrix::Matrix",
                            M_,
                            [],
                            [ F ],
                            "height",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, m |) ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [],
                  M.get_function (| "p3_util::reverse_slice_index_bits", [], [ F ] |),
                  [
                    M.borrow (|
                      Pointer.Kind.MutRef,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ F ] ],
                          M.get_trait_method (|
                            "core::ops::deref::DerefMut",
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref_mut",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (| M.borrow (| Pointer.Kind.MutRef, powers |) |)
                            |)
                          ]
                        |)
                      |)
                    |)
                  ]
                |)
              |) in
            M.alloc (|
              M.call_closure (|
                Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ],
                M.get_trait_method (|
                  "core::iter::traits::iterator::Iterator",
                  Ty.apply
                    (Ty.path "core::iter::adapters::map::Map")
                    []
                    [
                      Ty.apply
                        (Ty.path "core::iter::adapters::zip::Zip")
                        []
                        [
                          Ty.associated_in_trait "p3_matrix::Matrix" [] [ F ] M_ "{{synthetic}}'1";
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ]
                        ];
                      Ty.function
                        [
                          Ty.tuple
                            [
                              Ty.tuple
                                [ Ty.associated_in_trait "p3_matrix::Matrix" [] [ F ] M_ "Row"; F ]
                            ]
                        ]
                        F
                    ],
                  [],
                  [],
                  "collect",
                  [],
                  [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ] ]
                |),
                [
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::iter::adapters::zip::Zip")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_matrix::Matrix"
                              []
                              [ F ]
                              M_
                              "{{synthetic}}'1";
                            Ty.apply
                              (Ty.path "alloc::vec::into_iter::IntoIter")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.tuple
                                  [ Ty.associated_in_trait "p3_matrix::Matrix" [] [ F ] M_ "Row"; F
                                  ]
                              ]
                          ]
                          F
                      ],
                    M.get_trait_method (|
                      "core::iter::traits::iterator::Iterator",
                      Ty.apply
                        (Ty.path "core::iter::adapters::zip::Zip")
                        []
                        [
                          Ty.associated_in_trait "p3_matrix::Matrix" [] [ F ] M_ "{{synthetic}}'1";
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ]
                        ],
                      [],
                      [],
                      "map",
                      [],
                      [
                        F;
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.tuple
                                  [ Ty.associated_in_trait "p3_matrix::Matrix" [] [ F ] M_ "Row"; F
                                  ]
                              ]
                          ]
                          F
                      ]
                    |),
                    [
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::zip::Zip")
                          []
                          [
                            Ty.associated_in_trait
                              "p3_matrix::Matrix"
                              []
                              [ F ]
                              M_
                              "{{synthetic}}'1";
                            Ty.apply
                              (Ty.path "alloc::vec::into_iter::IntoIter")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.associated_in_trait "p3_matrix::Matrix" [] [ F ] M_ "{{synthetic}}'1",
                          [],
                          [],
                          "zip",
                          [],
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ]
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.associated_in_trait
                              "p3_matrix::Matrix"
                              []
                              [ F ]
                              M_
                              "{{synthetic}}'1",
                            M.get_trait_method (|
                              "p3_matrix::Matrix",
                              M_,
                              [],
                              [ F ],
                              "par_rows",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, m |) ]
                          |);
                          M.read (| powers |)
                        ]
                      |);
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              ltac:(M.monadic
                                (M.match_operator (|
                                  Ty.apply
                                    (Ty.path "*")
                                    []
                                    [
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_matrix::Matrix"
                                                    []
                                                    [ F ]
                                                    M_
                                                    "Row";
                                                  F
                                                ]
                                            ]
                                        ]
                                        F
                                    ],
                                  M.alloc (| α0 |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                        let row := M.copy (| γ0_0 |) in
                                        let power := M.copy (| γ0_1 |) in
                                        M.read (|
                                          M.match_operator (|
                                            Ty.apply (Ty.path "*") [] [ F ],
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.tuple [ F; F ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "core::option::Option")
                                                    []
                                                    [ Ty.tuple [ F; F ] ],
                                                  "unwrap",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::option::Option")
                                                      []
                                                      [ Ty.tuple [ F; F ] ],
                                                    M.get_trait_method (|
                                                      "itertools::Itertools",
                                                      Ty.associated_in_trait
                                                        "p3_matrix::Matrix"
                                                        []
                                                        [ F ]
                                                        M_
                                                        "Row",
                                                      [],
                                                      [],
                                                      "next_tuple",
                                                      [],
                                                      [ Ty.tuple [ F; F ] ]
                                                    |),
                                                    [ M.borrow (| Pointer.Kind.MutRef, row |) ]
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ0_0 :=
                                                    M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                  let γ0_1 :=
                                                    M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                  let lo := M.copy (| γ0_0 |) in
                                                  let hi := M.copy (| γ0_1 |) in
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      F,
                                                      M.get_trait_method (|
                                                        "core::ops::arith::Add",
                                                        F,
                                                        [],
                                                        [ F ],
                                                        "add",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          F,
                                                          M.get_trait_method (|
                                                            "core::ops::arith::Mul",
                                                            F,
                                                            [],
                                                            [ F ],
                                                            "mul",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              F,
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Add",
                                                                F,
                                                                [],
                                                                [ F ],
                                                                "add",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.read (| one_half |);
                                                                M.read (| power |)
                                                              ]
                                                            |);
                                                            M.read (| lo |)
                                                          ]
                                                        |);
                                                        M.call_closure (|
                                                          F,
                                                          M.get_trait_method (|
                                                            "core::ops::arith::Mul",
                                                            F,
                                                            [],
                                                            [ F ],
                                                            "mul",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              F,
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Sub",
                                                                F,
                                                                [],
                                                                [ F ],
                                                                "sub",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.read (| one_half |);
                                                                M.read (| power |)
                                                              ]
                                                            |);
                                                            M.read (| hi |)
                                                          ]
                                                        |)
                                                      ]
                                                    |)
                                                  |)))
                                            ]
                                          |)
                                        |)))
                                  ]
                                |)))
                            | _ => M.impossible "wrong number of arguments"
                            end))
                    ]
                  |)
                ]
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (F InputProof InputError : Ty.t),
      M.IsTraitInstance
        "p3_fri::config::FriGenericConfig"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) [ F ]
        (Self F InputProof InputError)
        (* Instance *)
        [
          ("InputProof", InstanceField.Ty (_InputProof F InputProof InputError));
          ("InputError", InstanceField.Ty (_InputError F InputProof InputError));
          ("extra_query_index_bits",
            InstanceField.Method (extra_query_index_bits F InputProof InputError));
          ("fold_row", InstanceField.Method (fold_row F InputProof InputError));
          ("fold_matrix", InstanceField.Method (fold_matrix F InputProof InputError))
        ].
  End Impl_p3_fri_config_FriGenericConfig_where_p3_field_field_TwoAdicField_F_where_core_fmt_Debug_InputError_F_for_p3_fri_two_adic_pcs_TwoAdicFriGenericConfig_InputProof_InputError.
  
  Module Impl_p3_commit_pcs_Pcs_where_p3_field_field_TwoAdicField_Val_where_p3_dft_traits_TwoAdicSubgroupDft_Dft_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_p3_field_field_TwoAdicField_Challenge_where_p3_field_field_ExtensionField_Challenge_Val_where_p3_challenger_FieldChallenger_Challenger_Val_where_p3_challenger_CanObserve_Challenger_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Commitment_where_p3_challenger_grinding_challenger_GrindingChallenger_Challenger_Challenge_Challenger_for_p3_fri_two_adic_pcs_TwoAdicFriPcs_Val_Dft_InputMmcs_FriMmcs.
    Definition Self (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriPcs") [] [ Val; Dft; InputMmcs; FriMmcs ].
    
    (*     type Domain = TwoAdicMultiplicativeCoset<Val>; *)
    Definition _Domain (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset") [] [ Val ].
    
    (*     type Commitment = InputMmcs::Commitment; *)
    Definition _Commitment (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Commitment".
    
    (*     type ProverData = InputMmcs::ProverData<RowMajorMatrix<Val>>; *)
    Definition _ProverData (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.associated_in_trait
        "p3_commit::mmcs::Mmcs"
        []
        [
          Val;
          Ty.apply
            (Ty.path "p3_matrix::dense::DenseMatrix")
            []
            [ Val; Ty.apply (Ty.path "alloc::vec::Vec") [] [ Val; Ty.path "alloc::alloc::Global" ] ]
        ]
        InputMmcs
        "ProverData".
    
    (*     type EvaluationsOnDomain<'a> = BitReversedMatrixView<DenseMatrix<Val, &'a [Val]>>; *)
    Definition _EvaluationsOnDomain
        (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t)
        : Ty.t :=
      Ty.apply
        (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
        []
        [
          Ty.path "p3_matrix::bitrev::BitReversalPerm";
          Ty.apply
            (Ty.path "p3_matrix::dense::DenseMatrix")
            []
            [ Val; Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ] ]
        ].
    
    (*     type Proof = FriProof<Challenge, FriMmcs, Val, Vec<BatchOpening<Val, InputMmcs>>>; *)
    Definition _Proof (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_fri::proof::FriProof")
        []
        [
          Challenge;
          FriMmcs;
          Val;
          Ty.apply
            (Ty.path "alloc::vec::Vec")
            []
            [
              Ty.apply (Ty.path "p3_fri::two_adic_pcs::BatchOpening") [] [ Val; InputMmcs ];
              Ty.path "alloc::alloc::Global"
            ]
        ].
    
    (*     type Error = FriError<FriMmcs::Error, InputMmcs::Error>; *)
    Definition _Error (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_fri::verifier::FriError")
        []
        [
          Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Challenge ] FriMmcs "Error";
          Ty.associated_in_trait "p3_commit::mmcs::Mmcs" [] [ Val ] InputMmcs "Error"
        ].
    
    (*
        fn natural_domain_for_degree(&self, degree: usize) -> Self::Domain {
            // This panics if (and only if) `degree` is not a power of 2 or `degree`
            // > `1 << Val::TWO_ADICITY`.
            TwoAdicMultiplicativeCoset::new(Val::ONE, log2_strict_usize(degree)).unwrap()
        }
    *)
    Definition natural_domain_for_degree
        (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; degree ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let degree := M.alloc (| degree |) in
          M.call_closure (|
            Ty.apply (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset") [] [ Val ],
            M.get_associated_function (|
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [ Ty.apply (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset") [] [ Val ] ],
              "unwrap",
              [],
              []
            |),
            [
              M.call_closure (|
                Ty.apply
                  (Ty.path "core::option::Option")
                  []
                  [ Ty.apply (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset") [] [ Val ] ],
                M.get_associated_function (|
                  Ty.apply (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset") [] [ Val ],
                  "new",
                  [],
                  []
                |),
                [
                  M.read (|
                    get_constant (| "p3_field::field::PrimeCharacteristicRing::ONE", Val |)
                  |);
                  M.call_closure (|
                    Ty.path "usize",
                    M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                    [ M.read (| degree |) ]
                  |)
                ]
              |)
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn commit(
            &self,
            evaluations: Vec<(Self::Domain, RowMajorMatrix<Val>)>,
        ) -> (Self::Commitment, Self::ProverData) {
            let ldes: Vec<_> = evaluations
                .into_iter()
                .map(|(domain, evals)| {
                    assert_eq!(domain.size(), evals.height());
                    let shift = Val::GENERATOR / domain.shift();
                    // Commit to the bit-reversed LDE.
                    self.dft
                        .coset_lde_batch(evals, self.fri.log_blowup, shift)
                        .bit_reverse_rows()
                        .to_row_major_matrix()
                })
                .collect();
    
            self.mmcs.commit(ldes)
        }
    *)
    Definition commit
        (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; evaluations ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let evaluations := M.alloc (| evaluations |) in
          M.read (|
            let~ ldes :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Val;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Val; Ty.path "alloc::alloc::Global" ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Val;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Val; Ty.path "alloc::alloc::Global" ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                  []
                                  [ Val ];
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                      []
                                      [ Val ];
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                      ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                    []
                                    [ Val ];
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                        []
                                        [ Val ];
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Val; Ty.path "alloc::alloc::Global" ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                  []
                                  [ Val ];
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                  ]
                              ];
                            Ty.path "alloc::alloc::Global"
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Val; Ty.path "alloc::alloc::Global" ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                        []
                                        [ Val ];
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Val; Ty.path "alloc::alloc::Global" ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                    []
                                    [ Val ];
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                    ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                      []
                                      [ Val ];
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                      ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [ M.read (| evaluations |) ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                      []
                                                      [ Val ];
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let domain := M.copy (| γ0_0 |) in
                                          let evals := M.copy (| γ0_1 |) in
                                          M.read (|
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.match_operator (|
                                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                M.alloc (|
                                                  Value.Tuple
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_associated_function (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                []
                                                                [ Val ],
                                                              "size",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                domain
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "usize",
                                                            M.get_trait_method (|
                                                              "p3_matrix::Matrix",
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              [],
                                                              [ Val ],
                                                              "height",
                                                              [],
                                                              []
                                                            |),
                                                            [ M.borrow (| Pointer.Kind.Ref, evals |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let left_val := M.copy (| γ0_0 |) in
                                                      let right_val := M.copy (| γ0_1 |) in
                                                      M.match_operator (|
                                                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                        M.alloc (| Value.Tuple [] |),
                                                        [
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (let γ :=
                                                                M.use
                                                                  (M.alloc (|
                                                                    UnOp.not (|
                                                                      M.call_closure (|
                                                                        Ty.path "bool",
                                                                        BinOp.eq,
                                                                        [
                                                                          M.read (|
                                                                            M.deref (|
                                                                              M.read (| left_val |)
                                                                            |)
                                                                          |);
                                                                          M.read (|
                                                                            M.deref (|
                                                                              M.read (| right_val |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  |)) in
                                                              let _ :=
                                                                is_constant_or_break_match (|
                                                                  M.read (| γ |),
                                                                  Value.Bool true
                                                                |) in
                                                              M.alloc (|
                                                                M.never_to_any (|
                                                                  M.read (|
                                                                    let~ kind :
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "core::panicking::AssertKind"
                                                                          ] :=
                                                                      M.alloc (|
                                                                        Value.StructTuple
                                                                          "core::panicking::AssertKind::Eq"
                                                                          []
                                                                      |) in
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        Ty.path "never",
                                                                        M.get_function (|
                                                                          "core::panicking::assert_failed",
                                                                          [],
                                                                          [
                                                                            Ty.path "usize";
                                                                            Ty.path "usize"
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.read (| kind |);
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (|
                                                                                    left_val
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |);
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (|
                                                                                    right_val
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |);
                                                                          Value.StructTuple
                                                                            "core::option::Option::None"
                                                                            []
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)));
                                                          fun γ =>
                                                            ltac:(M.monadic
                                                              (M.alloc (| Value.Tuple [] |)))
                                                        ]
                                                      |)))
                                                ]
                                              |) in
                                            let~ shift : Ty.apply (Ty.path "*") [] [ Val ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Val,
                                                  M.get_trait_method (|
                                                    "core::ops::arith::Div",
                                                    Val,
                                                    [],
                                                    [ Val ],
                                                    "div",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.read (|
                                                      get_constant (|
                                                        "p3_field::field::Field::GENERATOR",
                                                        Val
                                                      |)
                                                    |);
                                                    M.call_closure (|
                                                      Val,
                                                      M.get_associated_function (|
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                          []
                                                          [ Val ],
                                                        "shift",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, domain |) ]
                                                    |)
                                                  ]
                                                |)
                                              |) in
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                                  ],
                                                M.get_trait_method (|
                                                  "p3_matrix::Matrix",
                                                  Ty.associated_in_trait
                                                    "p3_matrix::bitrev::BitReversibleMatrix"
                                                    []
                                                    [ Val ]
                                                    (Ty.associated_in_trait
                                                      "p3_dft::traits::TwoAdicSubgroupDft"
                                                      []
                                                      [ Val ]
                                                      Dft
                                                      "Evaluations")
                                                    "BitRev",
                                                  [],
                                                  [ Val ],
                                                  "to_row_major_matrix",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.associated_in_trait
                                                      "p3_matrix::bitrev::BitReversibleMatrix"
                                                      []
                                                      [ Val ]
                                                      (Ty.associated_in_trait
                                                        "p3_dft::traits::TwoAdicSubgroupDft"
                                                        []
                                                        [ Val ]
                                                        Dft
                                                        "Evaluations")
                                                      "BitRev",
                                                    M.get_trait_method (|
                                                      "p3_matrix::bitrev::BitReversibleMatrix",
                                                      Ty.associated_in_trait
                                                        "p3_dft::traits::TwoAdicSubgroupDft"
                                                        []
                                                        [ Val ]
                                                        Dft
                                                        "Evaluations",
                                                      [],
                                                      [ Val ],
                                                      "bit_reverse_rows",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.associated_in_trait
                                                          "p3_dft::traits::TwoAdicSubgroupDft"
                                                          []
                                                          [ Val ]
                                                          Dft
                                                          "Evaluations",
                                                        M.get_trait_method (|
                                                          "p3_dft::traits::TwoAdicSubgroupDft",
                                                          Dft,
                                                          [],
                                                          [ Val ],
                                                          "coset_lde_batch",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              M.deref (| M.read (| self |) |),
                                                              "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                              "dft"
                                                            |)
                                                          |);
                                                          M.read (| evals |);
                                                          M.read (|
                                                            M.SubPointer.get_struct_record_field (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.deref (| M.read (| self |) |),
                                                                "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                "fri"
                                                              |),
                                                              "p3_fri::config::FriConfig",
                                                              "log_blowup"
                                                            |)
                                                          |);
                                                          M.read (| shift |)
                                                        ]
                                                      |)
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |) in
            M.alloc (|
              M.call_closure (|
                Ty.tuple
                  [
                    Ty.associated_in_trait
                      "p3_commit::mmcs::Mmcs"
                      []
                      [ Val ]
                      InputMmcs
                      "Commitment";
                    Ty.associated_in_trait
                      "p3_commit::mmcs::Mmcs"
                      []
                      [
                        Val;
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Val;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Val; Ty.path "alloc::alloc::Global" ]
                          ]
                      ]
                      InputMmcs
                      "ProverData"
                  ],
                M.get_trait_method (|
                  "p3_commit::mmcs::Mmcs",
                  InputMmcs,
                  [],
                  [ Val ],
                  "commit",
                  [],
                  [
                    Ty.apply
                      (Ty.path "p3_matrix::dense::DenseMatrix")
                      []
                      [
                        Val;
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ Val; Ty.path "alloc::alloc::Global" ]
                      ]
                  ]
                |),
                [
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                      "mmcs"
                    |)
                  |);
                  M.read (| ldes |)
                ]
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn get_evaluations_on_domain<'a>(
            &self,
            prover_data: &'a Self::ProverData,
            idx: usize,
            domain: Self::Domain,
        ) -> Self::EvaluationsOnDomain<'a> {
            // todo: handle extrapolation for LDEs we don't have
            assert_eq!(domain.shift(), Val::GENERATOR);
            let lde = self.mmcs.get_matrices(prover_data)[idx];
            assert!(lde.height() >= domain.size());
            lde.split_rows(domain.size()).0.bit_reverse_rows()
        }
    *)
    Definition get_evaluations_on_domain
        (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; prover_data; idx; domain ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let prover_data := M.alloc (| prover_data |) in
          let idx := M.alloc (| idx |) in
          let domain := M.alloc (| domain |) in
          M.read (|
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.match_operator (|
                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                M.alloc (|
                  Value.Tuple
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.alloc (|
                          M.call_closure (|
                            Val,
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                []
                                [ Val ],
                              "shift",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, domain |) ]
                          |)
                        |)
                      |);
                      M.borrow (|
                        Pointer.Kind.Ref,
                        get_constant (| "p3_field::field::Field::GENERATOR", Val |)
                      |)
                    ]
                |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                      let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                      let left_val := M.copy (| γ0_0 |) in
                      let right_val := M.copy (| γ0_1 |) in
                      M.match_operator (|
                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                        M.alloc (| Value.Tuple [] |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ :=
                                M.use
                                  (M.alloc (|
                                    UnOp.not (|
                                      M.call_closure (|
                                        Ty.path "bool",
                                        M.get_trait_method (|
                                          "core::cmp::PartialEq",
                                          Val,
                                          [],
                                          [ Val ],
                                          "eq",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| left_val |) |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| right_val |) |)
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)) in
                              let _ :=
                                is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                              M.alloc (|
                                M.never_to_any (|
                                  M.read (|
                                    let~ kind :
                                        Ty.apply
                                          (Ty.path "*")
                                          []
                                          [ Ty.path "core::panicking::AssertKind" ] :=
                                      M.alloc (|
                                        Value.StructTuple "core::panicking::AssertKind::Eq" []
                                      |) in
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "never",
                                        M.get_function (|
                                          "core::panicking::assert_failed",
                                          [],
                                          [ Val; Val ]
                                        |),
                                        [
                                          M.read (| kind |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| left_val |) |)
                                              |)
                                            |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| right_val |) |)
                                              |)
                                            |)
                                          |);
                                          Value.StructTuple "core::option::Option::None" []
                                        ]
                                      |)
                                    |)
                                  |)
                                |)
                              |)));
                          fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                        ]
                      |)))
                ]
              |) in
            let~ lde :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Val;
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Val; Ty.path "alloc::alloc::Global" ]
                          ]
                      ]
                  ] :=
              M.copy (|
                M.deref (|
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "&")
                      []
                      [
                        Ty.apply
                          (Ty.path "&")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Val; Ty.path "alloc::alloc::Global" ]
                              ]
                          ]
                      ],
                    M.get_trait_method (|
                      "core::ops::index::Index",
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Val; Ty.path "alloc::alloc::Global" ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      [ Ty.path "usize" ],
                      "index",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                      ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            M.get_trait_method (|
                              "p3_commit::mmcs::Mmcs",
                              InputMmcs,
                              [],
                              [ Val ],
                              "get_matrices",
                              [],
                              [
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                  ]
                              ]
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| self |) |),
                                  "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                  "mmcs"
                                |)
                              |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.read (| prover_data |) |)
                              |)
                            ]
                          |)
                        |)
                      |);
                      M.read (| idx |)
                    ]
                  |)
                |)
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.match_operator (|
                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                M.alloc (| Value.Tuple [] |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ :=
                        M.use
                          (M.alloc (|
                            UnOp.not (|
                              M.call_closure (|
                                Ty.path "bool",
                                BinOp.ge,
                                [
                                  M.call_closure (|
                                    Ty.path "usize",
                                    M.get_trait_method (|
                                      "p3_matrix::Matrix",
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                        ],
                                      [],
                                      [ Val ],
                                      "height",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| lde |) |)
                                      |)
                                    ]
                                  |);
                                  M.call_closure (|
                                    Ty.path "usize",
                                    M.get_associated_function (|
                                      Ty.apply
                                        (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                        []
                                        [ Val ],
                                      "size",
                                      [],
                                      []
                                    |),
                                    [ M.borrow (| Pointer.Kind.Ref, domain |) ]
                                  |)
                                ]
                              |)
                            |)
                          |)) in
                      let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                      M.alloc (|
                        M.never_to_any (|
                          M.call_closure (|
                            Ty.path "never",
                            M.get_function (| "core::panicking::panic", [], [] |),
                            [ mk_str (| "assertion failed: lde.height() >= domain.size()" |) ]
                          |)
                        |)
                      |)));
                  fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                ]
              |) in
            M.alloc (|
              M.call_closure (|
                Ty.apply
                  (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                  []
                  [
                    Ty.path "p3_matrix::bitrev::BitReversalPerm";
                    Ty.apply
                      (Ty.path "p3_matrix::dense::DenseMatrix")
                      []
                      [ Val; Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ] ]
                  ],
                M.get_trait_method (|
                  "p3_matrix::bitrev::BitReversibleMatrix",
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [ Val; Ty.apply (Ty.path "&") [] [ Ty.apply (Ty.path "slice") [] [ Val ] ] ],
                  [],
                  [ Val ],
                  "bit_reverse_rows",
                  [],
                  []
                |),
                [
                  M.read (|
                    M.SubPointer.get_tuple_field (|
                      M.alloc (|
                        M.call_closure (|
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                ];
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Val; Ty.path "alloc::alloc::Global" ]
                              ],
                            "split_rows",
                            [],
                            []
                          |),
                          [
                            M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| lde |) |) |);
                            M.call_closure (|
                              Ty.path "usize",
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                  []
                                  [ Val ],
                                "size",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, domain |) ]
                            |)
                          ]
                        |)
                      |),
                      0
                    |)
                  |)
                ]
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn open(
            &self,
            // For each round,
            rounds: Vec<(
                &Self::ProverData,
                // for each matrix,
                Vec<
                    // points to open
                    Vec<Challenge>,
                >,
            )>,
            challenger: &mut Challenger,
        ) -> (OpenedValues<Challenge>, Self::Proof) {
            /*
    
            A quick rundown of the optimizations in this function:
            We are trying to compute sum_i alpha^i * (p(X) - y)/(X - z),
            for each z an opening point, y = p(z). Each p(X) is given as evaluations in bit-reversed order
            in the columns of the matrices. y is computed by barycentric interpolation.
            X and p(X) are in the base field; alpha, y and z are in the extension.
            The primary goal is to minimize extension multiplications.
    
            - Instead of computing all alpha^i, we just compute alpha^i for i up to the largest width
            of a matrix, then multiply by an "alpha offset" when accumulating.
                  a^0 x0 + a^1 x1 + a^2 x2 + a^3 x3 + ...
                = a^0 ( a^0 x0 + a^1 x1 ) + a^2 ( a^0 x2 + a^1 x3 ) + ...
                (see `alpha_pows`, `alpha_pow_offset`, `num_reduced`)
    
            - For each unique point z, we precompute 1/(X-z) for the largest subgroup opened at this point.
            Since we compute it in bit-reversed order, smaller subgroups can simply truncate the vector.
                (see `inv_denoms`)
    
            - Then, for each matrix (with columns p_i) and opening point z, we want:
                for each row (corresponding to subgroup element X):
                    reduced[X] += alpha_offset * sum_i [ alpha^i * inv_denom[X] * (p_i[X] - y[i]) ]
    
                We can factor out inv_denom, and expand what's left:
                    reduced[X] += alpha_offset * inv_denom[X] * sum_i [ alpha^i * p_i[X] - alpha^i * y[i] ]
    
                And separate the sum:
                    reduced[X] += alpha_offset * inv_denom[X] * [ sum_i [ alpha^i * p_i[X] ] - sum_i [ alpha^i * y[i] ] ]
    
                And now the last sum doesn't depend on X, so we can precompute that for the matrix, too.
                So the hot loop (that depends on both X and i) is just:
                    sum_i [ alpha^i * p_i[X] ]
    
                with alpha^i an extension, p_i[X] a base
    
            */
    
            let mats_and_points = rounds
                .iter()
                .map(|(data, points)| {
                    let mats = self
                        .mmcs
                        .get_matrices(data)
                        .into_iter()
                        .map(|m| m.as_view())
                        .collect_vec();
                    debug_assert_eq!(
                        mats.len(),
                        points.len(),
                        "each matrix should have a corresponding set of evaluation points"
                    );
                    (mats, points)
                })
                .collect_vec();
    
            // Find the maximum height and the maximum width of matrices in the batch.
            // These do not need to correspond to the same matrix.
            let (global_max_height, global_max_width) = mats_and_points
                .iter()
                .flat_map(|(mats, _)| mats.iter().map(|m| (m.height(), m.width())))
                .reduce(|(hmax, wmax), (h, w)| (hmax.max(h), wmax.max(w)))
                .expect("No Matrices Supplied?");
            let log_global_max_height = log2_strict_usize(global_max_height);
    
            // For each unique opening point z, we will find the largest degree bound
            // for that point, and precompute 1/(z - X) for the largest subgroup (in bitrev order).
            let inv_denoms = compute_inverse_denominators(&mats_and_points, Val::GENERATOR);
    
            // Evaluate coset representations and write openings to the challenger
            let all_opened_values = mats_and_points
                .iter()
                .map(|(mats, points)| {
                    izip!(mats.iter(), points.iter())
                        .map(|(mat, points_for_mat)| {
                            points_for_mat
                                .iter()
                                .map(|&point| {
                                    let _guard =
                                        info_span!("evaluate matrix", dims = %mat.dimensions())
                                            .entered();
    
                                    // Use Barycentric interpolation to evaluate the matrix at the given point.
                                    let ys =
                                        info_span!("compute opened values with Lagrange interpolation")
                                            .in_scope(|| {
                                                let h = mat.height() >> self.fri.log_blowup;
                                                let (low_coset, _) = mat.split_rows(h);
                                                let mut inv_denoms =
                                                    inv_denoms.get(&point).unwrap()[..h].to_vec();
                                                reverse_slice_index_bits(&mut inv_denoms);
                                                interpolate_coset(
                                                    &BitReversalPerm::new_view(low_coset),
                                                    Val::GENERATOR,
                                                    point,
                                                    Some(&inv_denoms),
                                                )
                                            });
                                    ys.iter()
                                        .for_each(|&y| challenger.observe_algebra_element(y));
                                    ys
                                })
                                .collect_vec()
                        })
                        .collect_vec()
                })
                .collect_vec();
    
            // Batch combination challenge
            // TODO: Should we be computing a different alpha for each height?
            let alpha: Challenge = challenger.sample_algebra_element();
    
            // We precompute powers of alpha as we need the same powers for each matrix.
            // We compute both a vector of unpacked powers and a vector of packed powers.
            // TODO: It should be possible to refactor this to only use the packed powers but
            // this is not a bottleneck so is not a priority.
            let packed_alpha_powers =
                Challenge::ExtensionPacking::packed_ext_powers_capped(alpha, global_max_width)
                    .collect_vec();
            let alpha_powers =
                Challenge::ExtensionPacking::to_ext_iter(packed_alpha_powers.iter().copied())
                    .collect_vec();
    
            // Now that we have sent the openings to the verifier, it remains to prove
            // that those openings are correct.
    
            // Given a low degree polynomial `f(x)` with claimed evaluation `f(zeta)`, we can check
            // that `f(zeta)` is correct by doing a low degree test on `(f(zeta) - f(x))/(zeta - x)`.
            // We will use `alpha` to batch together both different claimed openings `zeta` and
            // different polynomials `f` whose evaluation vectors have the same height.
    
            // TODO: If we allow different polynomials to have different blow_up factors
            // we may need to revisit this and to ensure it is safe to batch them together.
    
            // num_reduced records the number of reduced function opening point pairs
            // of each given `log_height`.
            let mut num_reduced = [0; 32];
    
            // For each `log_height` from 2^1 -> 2^32, reduced_openings will contain either `None`
            // if there are no matrices of that height, or `Some(vec)` where `vec` is equal to
            // a sum of `(f(zeta) - f(x))/(zeta - x)` over all `f`'s of that height and
            // opening points `zeta` with the sum weighted by powers of alpha.
            let mut reduced_openings: [_; 32] = core::array::from_fn(|_| None);
    
            for ((mats, points), openings_for_round) in
                mats_and_points.iter().zip(all_opened_values.iter())
            {
                for (mat, points_for_mat, openings_for_mat) in
                    izip!(mats.iter(), points.iter(), openings_for_round.iter())
                {
                    let _guard =
                        info_span!("reduce matrix quotient", dims = %mat.dimensions()).entered();
    
                    let log_height = log2_strict_usize(mat.height());
    
                    // If this is our first matrix at this height, initialise reduced_openings to zero.
                    // Otherwise, get a mutable reference to it.
                    let reduced_opening_for_log_height = reduced_openings[log_height]
                        .get_or_insert_with(|| vec![Challenge::ZERO; mat.height()]);
                    debug_assert_eq!(reduced_opening_for_log_height.len(), mat.height());
    
                    // Treating our matrix M as the evaluations of functions M0, M1, ...
                    // Compute the evaluations of `Mred(x) = M0(x) + alpha*M1(x) + ...`
                    let mat_compressed = info_span!("compress mat").in_scope(|| {
                        // This will be reused for all points z which M is opened at so we collect into a vector.
                        mat.rowwise_packed_dot_product::<Challenge>(&packed_alpha_powers)
                            .collect::<Vec<_>>()
                    });
    
                    for (&point, openings) in points_for_mat.iter().zip(openings_for_mat) {
                        // If we have multiple matrices at the same height, we need to scale mat to combine them.
                        let alpha_pow_offset = alpha.exp_u64(num_reduced[log_height] as u64);
    
                        // As we have all the openings `Mi(z)`, we can combine them using `alpha`
                        // in an identical way to before to also compute `Mred(z)`.
                        let reduced_openings: Challenge =
                            dot_product(alpha_powers.iter().copied(), openings.iter().copied());
    
                        mat_compressed
                            .par_iter()
                            .zip(reduced_opening_for_log_height.par_iter_mut())
                            // inv_denoms contains `1/(point - x)` for `x` in a coset `gK`.
                            // If `|K| =/= mat.height()` we actually want a subset of this
                            // corresponding to the evaluations over `gH` for `|H| = mat.height()`.
                            // As inv_denoms is bit reversed, the evaluations over `gH` are exactly
                            // the evaluations over `gK` at the indices `0..mat.height()`.
                            // So zip will truncate to the desired smaller length.
                            .zip(inv_denoms.get(&point).unwrap().par_iter())
                            // Map the function `Mred(x) -> (Mred(z) - Mred(x))/(z - x)`
                            // across the evaluations vector of `Mred(x)`.
                            .for_each(|((&reduced_row, ro), &inv_denom)| {
                                *ro += alpha_pow_offset * (reduced_openings - reduced_row) * inv_denom
                            });
                        num_reduced[log_height] += mat.width();
                    }
                }
            }
    
            let fri_input = reduced_openings.into_iter().rev().flatten().collect_vec();
    
            let g: TwoAdicFriGenericConfigForMmcs<Val, InputMmcs> =
                TwoAdicFriGenericConfig(PhantomData);
    
            let fri_proof = prover::prove(&g, &self.fri, fri_input, challenger, |index| {
                rounds
                    .iter()
                    .map(|(data, _)| {
                        let log_max_height = log2_strict_usize(self.mmcs.get_max_height(data));
                        let bits_reduced = log_global_max_height - log_max_height;
                        let reduced_index = index >> bits_reduced;
                        let (opened_values, opening_proof) = self.mmcs.open_batch(reduced_index, data);
                        BatchOpening {
                            opened_values,
                            opening_proof,
                        }
                    })
                    .collect()
            });
    
            (all_opened_values, fri_proof)
        }
    *)
    Definition open
        (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; rounds; challenger ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let rounds := M.alloc (| rounds |) in
          let challenger := M.alloc (| challenger |) in
          M.read (|
            let~ mats_and_points :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.tuple
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Val;
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ];
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "itertools::Itertools",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                      InputMmcs
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::mmcs::Mmcs"
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Val; Ty.path "alloc::alloc::Global" ]
                                                  ]
                                              ]
                                              InputMmcs
                                              "ProverData"
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                          (Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ])
                      ],
                    [],
                    [],
                    "collect_vec",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                        InputMmcs
                                        "ProverData"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                                    ]
                                                ]
                                                InputMmcs
                                                "ProverData"
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Val; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                      InputMmcs
                                      "ProverData"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Val;
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Val; Ty.path "alloc::alloc::Global" ]
                                                    ]
                                                ]
                                                InputMmcs
                                                "ProverData"
                                            ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_commit::mmcs::Mmcs"
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Val; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                        InputMmcs
                                        "ProverData"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ],
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::mmcs::Mmcs"
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Val; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ]
                                          InputMmcs
                                          "ProverData"
                                      ];
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ],
                            "iter",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::mmcs::Mmcs"
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ Val; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ]
                                                    InputMmcs
                                                    "ProverData"
                                                ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::mmcs::Mmcs"
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ Val; Ty.path "alloc::alloc::Global" ]
                                                      ]
                                                  ]
                                                  InputMmcs
                                                  "ProverData"
                                              ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, rounds |) ]
                                |)
                              |)
                            |)
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_commit::mmcs::Mmcs"
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                              InputMmcs
                                                              "ProverData"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                          ]
                                          (Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ := M.read (| γ |) in
                                          let γ1_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ1_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let data := M.alloc (| γ1_0 |) in
                                          let points := M.alloc (| γ1_1 |) in
                                          M.read (|
                                            let~ mats :
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [ Val ]
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.apply (Ty.path "slice") [] [ Val ]
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ],
                                                  M.get_trait_method (|
                                                    "itertools::Itertools",
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "alloc::vec::into_iter::IntoIter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Val;
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [ Val ]
                                                                ]
                                                            ])
                                                      ],
                                                    [],
                                                    [],
                                                    "collect_vec",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::map::Map")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ Val ]
                                                                  ]
                                                              ])
                                                        ],
                                                      M.get_trait_method (|
                                                        "core::iter::traits::iterator::Iterator",
                                                        Ty.apply
                                                          (Ty.path
                                                            "alloc::vec::into_iter::IntoIter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        [],
                                                        [],
                                                        "map",
                                                        [],
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Val;
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [ Val ]
                                                                ]
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ Val ]
                                                                  ]
                                                              ])
                                                        ]
                                                      |),
                                                      [
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "alloc::vec::into_iter::IntoIter")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::iter::traits::collect::IntoIterator",
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ],
                                                            [],
                                                            [],
                                                            "into_iter",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              M.get_trait_method (|
                                                                "p3_commit::mmcs::Mmcs",
                                                                InputMmcs,
                                                                [],
                                                                [ Val ],
                                                                "get_matrices",
                                                                [],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ]
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    M.deref (| M.read (| self |) |),
                                                                    "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                    "mmcs"
                                                                  |)
                                                                |);
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      M.deref (|
                                                                        M.read (| data |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                        |);
                                                        M.closure
                                                          (fun γ =>
                                                            ltac:(M.monadic
                                                              match γ with
                                                              | [ α0 ] =>
                                                                ltac:(M.monadic
                                                                  (M.match_operator (|
                                                                    Ty.apply
                                                                      (Ty.path "*")
                                                                      []
                                                                      [
                                                                        Ty.function
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                          (Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ])
                                                                      ],
                                                                    M.alloc (| α0 |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let m :=
                                                                            M.copy (| γ |) in
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ],
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ],
                                                                              "as_view",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (| m |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)))
                                                                    ]
                                                                  |)))
                                                              | _ =>
                                                                M.impossible
                                                                  "wrong number of arguments"
                                                              end))
                                                      ]
                                                    |)
                                                  ]
                                                |)
                                              |) in
                                            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                              M.match_operator (|
                                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                M.alloc (| Value.Tuple [] |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ :=
                                                        M.use (M.alloc (| Value.Bool true |)) in
                                                      let _ :=
                                                        is_constant_or_break_match (|
                                                          M.read (| γ |),
                                                          Value.Bool true
                                                        |) in
                                                      let~ _ :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.tuple [] ] :=
                                                        M.match_operator (|
                                                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                          M.alloc (|
                                                            Value.Tuple
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.path "usize",
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        "len",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          mats
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |);
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.path "usize",
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        "len",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.deref (|
                                                                            M.read (| points |)
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let γ0_0 :=
                                                                  M.SubPointer.get_tuple_field (|
                                                                    γ,
                                                                    0
                                                                  |) in
                                                                let γ0_1 :=
                                                                  M.SubPointer.get_tuple_field (|
                                                                    γ,
                                                                    1
                                                                  |) in
                                                                let left_val := M.copy (| γ0_0 |) in
                                                                let right_val :=
                                                                  M.copy (| γ0_1 |) in
                                                                M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [ Ty.tuple [] ],
                                                                  M.alloc (| Value.Tuple [] |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ :=
                                                                          M.use
                                                                            (M.alloc (|
                                                                              UnOp.not (|
                                                                                M.call_closure (|
                                                                                  Ty.path "bool",
                                                                                  BinOp.eq,
                                                                                  [
                                                                                    M.read (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          left_val
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.read (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          right_val
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |)) in
                                                                        let _ :=
                                                                          is_constant_or_break_match (|
                                                                            M.read (| γ |),
                                                                            Value.Bool true
                                                                          |) in
                                                                        M.alloc (|
                                                                          M.never_to_any (|
                                                                            M.read (|
                                                                              let~ kind :
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "core::panicking::AssertKind"
                                                                                    ] :=
                                                                                M.alloc (|
                                                                                  Value.StructTuple
                                                                                    "core::panicking::AssertKind::Eq"
                                                                                    []
                                                                                |) in
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path "never",
                                                                                  M.get_function (|
                                                                                    "core::panicking::assert_failed",
                                                                                    [],
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      kind
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              left_val
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              right_val
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |);
                                                                                    Value.StructTuple
                                                                                      "core::option::Option::Some"
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "core::fmt::Arguments",
                                                                                          M.get_associated_function (|
                                                                                            Ty.path
                                                                                              "core::fmt::Arguments",
                                                                                            "new_const",
                                                                                            [
                                                                                              Value.Integer
                                                                                                IntegerKind.Usize
                                                                                                1
                                                                                            ],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.alloc (|
                                                                                                    Value.Array
                                                                                                      [
                                                                                                        mk_str (|
                                                                                                          "each matrix should have a corresponding set of evaluation points"
                                                                                                        |)
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        |)));
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (M.alloc (|
                                                                          Value.Tuple []
                                                                        |)))
                                                                  ]
                                                                |)))
                                                          ]
                                                        |) in
                                                      M.alloc (| Value.Tuple [] |)));
                                                  fun γ =>
                                                    ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                                ]
                                              |) in
                                            M.alloc (|
                                              Value.Tuple [ M.read (| mats |); M.read (| points |) ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |) in
            M.match_operator (|
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.tuple
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ];
                      Ty.apply
                        (Ty.path "p3_fri::proof::FriProof")
                        []
                        [
                          Challenge;
                          FriMmcs;
                          Val;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                []
                                [ Val; InputMmcs ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ]
                    ]
                ],
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [ Ty.path "usize"; Ty.path "usize" ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.tuple [ Ty.path "usize"; Ty.path "usize" ] ],
                    "expect",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [ Ty.tuple [ Ty.path "usize"; Ty.path "usize" ] ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "core::iter::adapters::flatten::FlatMap")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ];
                            Ty.apply
                              (Ty.path "core::iter::adapters::map::Map")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::slice::iter::Iter")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Val;
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                      ]
                                  ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                              ]
                                          ]
                                      ]
                                  ]
                                  (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                              ];
                            Ty.function
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                              ]
                              (Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                ])
                          ],
                        [],
                        [],
                        "reduce",
                        [],
                        [
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
                                  Ty.tuple [ Ty.path "usize"; Ty.path "usize" ]
                                ]
                            ]
                            (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::flatten::FlatMap")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                ];
                              Ty.function
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                                (Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                          ]
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                  ])
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::slice::iter::Iter")
                              []
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ],
                            [],
                            [],
                            "flat_map",
                            [],
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Val;
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                ];
                              Ty.function
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                ]
                                (Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Val;
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                          ]
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                  ])
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::slice::iter::Iter")
                                []
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Val;
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ],
                                "iter",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "slice")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.apply (Ty.path "slice") [] [ Val ]
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Challenge;
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::deref::Deref",
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ],
                                        [],
                                        [],
                                        "deref",
                                        [],
                                        []
                                      |),
                                      [ M.borrow (| Pointer.Kind.Ref, mats_and_points |) ]
                                    |)
                                  |)
                                |)
                              ]
                            |);
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.apply
                                          (Ty.path "*")
                                          []
                                          [
                                            Ty.function
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          []
                                                                          [ Val ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                              ]
                                              (Ty.apply
                                                (Ty.path "core::iter::adapters::map::Map")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.apply (Ty.path "slice") [] [ Val ]
                                                            ]
                                                        ]
                                                    ];
                                                  Ty.function
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [ Val ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                    (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                                ])
                                          ],
                                        M.alloc (| α0 |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let γ := M.read (| γ |) in
                                              let γ1_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                              let γ1_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                              let mats := M.alloc (| γ1_0 |) in
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::iter::adapters::map::Map")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [ Val ]
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          []
                                                                          [ Val ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.tuple
                                                        [ Ty.path "usize"; Ty.path "usize" ])
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.apply (Ty.path "slice") [] [ Val ]
                                                            ]
                                                        ]
                                                    ],
                                                  [],
                                                  [],
                                                  "map",
                                                  [],
                                                  [
                                                    Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          []
                                                                          [ Val ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.tuple
                                                        [ Ty.path "usize"; Ty.path "usize" ])
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [ Val ]
                                                              ]
                                                          ]
                                                      ],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Val;
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [ Val ]
                                                                ]
                                                            ]
                                                        ],
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [ Val ]
                                                                        ]
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| mats |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |);
                                                  M.closure
                                                    (fun γ =>
                                                      ltac:(M.monadic
                                                        match γ with
                                                        | [ α0 ] =>
                                                          ltac:(M.monadic
                                                            (M.match_operator (|
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "slice")
                                                                                        []
                                                                                        [ Val ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.tuple
                                                                      [
                                                                        Ty.path "usize";
                                                                        Ty.path "usize"
                                                                      ])
                                                                ],
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let m := M.copy (| γ |) in
                                                                    Value.Tuple
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.path "usize",
                                                                          M.get_trait_method (|
                                                                            "p3_matrix::Matrix",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            [ Val ],
                                                                            "height",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (| m |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          Ty.path "usize",
                                                                          M.get_trait_method (|
                                                                            "p3_matrix::Matrix",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            [ Val ],
                                                                            "width",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (| m |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]))
                                                              ]
                                                            |)))
                                                        | _ =>
                                                          M.impossible "wrong number of arguments"
                                                        end))
                                                ]
                                              |)))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0; α1 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [
                                            Ty.tuple
                                              [
                                                Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
                                                Ty.tuple [ Ty.path "usize"; Ty.path "usize" ]
                                              ]
                                          ]
                                          (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let hmax := M.copy (| γ0_0 |) in
                                          let wmax := M.copy (| γ0_1 |) in
                                          M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [
                                                Ty.function
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.tuple
                                                          [ Ty.path "usize"; Ty.path "usize" ];
                                                        Ty.tuple
                                                          [ Ty.path "usize"; Ty.path "usize" ]
                                                      ]
                                                  ]
                                                  (Ty.tuple [ Ty.path "usize"; Ty.path "usize" ])
                                              ],
                                            M.alloc (| α1 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ0_0 :=
                                                    M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                  let γ0_1 :=
                                                    M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                  let h := M.copy (| γ0_0 |) in
                                                  let w := M.copy (| γ0_1 |) in
                                                  Value.Tuple
                                                    [
                                                      M.call_closure (|
                                                        Ty.path "usize",
                                                        M.get_trait_method (|
                                                          "core::cmp::Ord",
                                                          Ty.path "usize",
                                                          [],
                                                          [],
                                                          "max",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| hmax |); M.read (| h |) ]
                                                      |);
                                                      M.call_closure (|
                                                        Ty.path "usize",
                                                        M.get_trait_method (|
                                                          "core::cmp::Ord",
                                                          Ty.path "usize",
                                                          [],
                                                          [],
                                                          "max",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| wmax |); M.read (| w |) ]
                                                      |)
                                                    ]))
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| mk_str (| "No Matrices Supplied?" |) |)
                    |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                    let global_max_height := M.copy (| γ0_0 |) in
                    let global_max_width := M.copy (| γ0_1 |) in
                    let~ log_global_max_height : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                          [ M.read (| global_max_height |) ]
                        |)
                      |) in
                    let~ inv_denoms :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_util::linear_map::LinearMap")
                              []
                              [
                                Challenge;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "p3_util::linear_map::LinearMap")
                            []
                            [
                              Challenge;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                            ],
                          M.get_function (|
                            "p3_fri::two_adic_pcs::compute_inverse_denominators",
                            [],
                            [
                              Val;
                              Challenge;
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Val;
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                ]
                            ]
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (| M.borrow (| Pointer.Kind.Ref, mats_and_points |) |)
                                    |)
                                  ]
                                |)
                              |)
                            |);
                            M.read (| get_constant (| "p3_field::field::Field::GENERATOR", Val |) |)
                          ]
                        |)
                      |) in
                    let~ all_opened_values :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ Challenge; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ Challenge; Ty.path "alloc::alloc::Global" ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "itertools::Itertools",
                            Ty.apply
                              (Ty.path "core::iter::adapters::map::Map")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::slice::iter::Iter")
                                  []
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                  ]
                                  (Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Challenge; Ty.path "alloc::alloc::Global" ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ])
                              ],
                            [],
                            [],
                            "collect_vec",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.apply (Ty.path "slice") [] [ Val ]
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Challenge;
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ])
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::slice::iter::Iter")
                                  []
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Val;
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ],
                                [],
                                [],
                                "map",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ Challenge; Ty.path "alloc::alloc::Global" ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Val;
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [ Ty.apply (Ty.path "slice") [] [ Val ]
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Challenge;
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ])
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ],
                                  M.get_associated_function (|
                                    Ty.apply
                                      (Ty.path "slice")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ],
                                    "iter",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "slice")
                                                []
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Val;
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [ Val ]
                                                                ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ],
                                          M.get_trait_method (|
                                            "core::ops::deref::Deref",
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Val;
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [ Val ]
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ],
                                            [],
                                            [],
                                            "deref",
                                            [],
                                            []
                                          |),
                                          [ M.borrow (| Pointer.Kind.Ref, mats_and_points |) ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [
                                                Ty.function
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                  ]
                                                  (Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Challenge;
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ])
                                              ],
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ := M.read (| γ |) in
                                                  let γ1_0 :=
                                                    M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                  let γ1_1 :=
                                                    M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                  let mats := M.alloc (| γ1_0 |) in
                                                  let points := M.alloc (| γ1_1 |) in
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ],
                                                    M.get_trait_method (|
                                                      "itertools::Itertools",
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::map::Map")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [ Val ]
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ])
                                                        ],
                                                      [],
                                                      [],
                                                      "collect_vec",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::map::Map")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ])
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [ Val ]
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ],
                                                          [],
                                                          [],
                                                          "map",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ])
                                                          ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::iter::traits::iterator::Iterator",
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_matrix::dense::DenseMatrix")
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [ Val ]
                                                                        ]
                                                                    ]
                                                                ],
                                                              [],
                                                              [],
                                                              "zip",
                                                              [],
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::collect::IntoIterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ Val ]
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "into_iter",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [ Val ]
                                                                              ]
                                                                          ]
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      "iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [ Val ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (| mats |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |);
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ],
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ],
                                                                  "iter",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.call_closure (|
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ],
                                                                        M.get_trait_method (|
                                                                          "core::ops::deref::Deref",
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ],
                                                                          [],
                                                                          [],
                                                                          "deref",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.deref (|
                                                                                  M.read (|
                                                                                    points
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |);
                                                          M.closure
                                                            (fun γ =>
                                                              ltac:(M.monadic
                                                                match γ with
                                                                | [ α0 ] =>
                                                                  ltac:(M.monadic
                                                                    (M.match_operator (|
                                                                      Ty.apply
                                                                        (Ty.path "*")
                                                                        []
                                                                        [
                                                                          Ty.function
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Challenge;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            (Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ])
                                                                        ],
                                                                      M.alloc (| α0 |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ,
                                                                                0
                                                                              |) in
                                                                            let γ0_1 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ,
                                                                                1
                                                                              |) in
                                                                            let mat :=
                                                                              M.copy (| γ0_0 |) in
                                                                            let points_for_mat :=
                                                                              M.copy (| γ0_1 |) in
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "itertools::Itertools",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::iter::adapters::map::Map")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ];
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Challenge
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ])
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "collect_vec",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::iter::adapters::map::Map")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ])
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ],
                                                                                    [],
                                                                                    [],
                                                                                    "map",
                                                                                    [],
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Challenge
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ])
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ],
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ],
                                                                                        "iter",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ],
                                                                                                [],
                                                                                                [],
                                                                                                "deref",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      points_for_mat
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            ltac:(M.monadic
                                                                                              (M.match_operator (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "*")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.function
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ])
                                                                                                  ],
                                                                                                M.alloc (|
                                                                                                  α0
                                                                                                |),
                                                                                                [
                                                                                                  fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      (let
                                                                                                            γ :=
                                                                                                        M.read (|
                                                                                                          γ
                                                                                                        |) in
                                                                                                      let
                                                                                                            point :=
                                                                                                        M.copy (|
                                                                                                          γ
                                                                                                        |) in
                                                                                                      M.read (|
                                                                                                        let~
                                                                                                              _guard :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "tracing::span::EnteredSpan"
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "tracing::span::EnteredSpan",
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "tracing::span::Span",
                                                                                                                "entered",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  let~
                                                                                                                        interest :
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "*")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::subscriber::Interest"
                                                                                                                        ] :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::subscriber::Interest",
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::subscriber::Interest",
                                                                                                                          "never",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  M.match_operator (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing::span::Span"
                                                                                                                      ],
                                                                                                                    M.alloc (|
                                                                                                                      Value.Tuple
                                                                                                                        []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (let
                                                                                                                                γ :=
                                                                                                                            M.use
                                                                                                                              (M.alloc (|
                                                                                                                                LogicalOp.and (|
                                                                                                                                  LogicalOp.and (|
                                                                                                                                    LogicalOp.and (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.path
                                                                                                                                          "bool",
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "core::cmp::PartialOrd",
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::metadata::Level",
                                                                                                                                          [],
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                                                          ],
                                                                                                                                          "le",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            get_associated_constant (|
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Level",
                                                                                                                                              "INFO",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Level"
                                                                                                                                            |)
                                                                                                                                          |);
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            get_constant (|
                                                                                                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::LevelFilter"
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      ltac:(M.monadic
                                                                                                                                        (M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "bool",
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "core::cmp::PartialOrd",
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::Level",
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::LevelFilter"
                                                                                                                                            ],
                                                                                                                                            "le",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              get_associated_constant (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Level",
                                                                                                                                                "INFO",
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Level"
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.alloc (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "tracing_core::metadata::LevelFilter",
                                                                                                                                                    "current",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  []
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)))
                                                                                                                                    |),
                                                                                                                                    ltac:(M.monadic
                                                                                                                                      (M.read (|
                                                                                                                                        let~
                                                                                                                                              _ :
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "*")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.tuple
                                                                                                                                                  []
                                                                                                                                              ] :=
                                                                                                                                          M.alloc (|
                                                                                                                                            M.write (|
                                                                                                                                              interest,
                                                                                                                                              M.call_closure (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                                                M.get_associated_function (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                                                  "interest",
                                                                                                                                                  [],
                                                                                                                                                  []
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    M.deref (|
                                                                                                                                                      M.read (|
                                                                                                                                                        get_constant (|
                                                                                                                                                          "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.path
                                                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                            ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |) in
                                                                                                                                        M.alloc (|
                                                                                                                                          UnOp.not (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.path
                                                                                                                                                "bool",
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                                                "is_never",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  interest
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |)))
                                                                                                                                  |),
                                                                                                                                  ltac:(M.monadic
                                                                                                                                    (M.call_closure (|
                                                                                                                                      Ty.path
                                                                                                                                        "bool",
                                                                                                                                      M.get_function (|
                                                                                                                                        "tracing::__macro_support::__is_enabled",
                                                                                                                                        [],
                                                                                                                                        []
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        M.borrow (|
                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                          M.deref (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                                                ],
                                                                                                                                              M.get_trait_method (|
                                                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                                                [],
                                                                                                                                                [],
                                                                                                                                                "metadata",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.read (|
                                                                                                                                                      get_constant (|
                                                                                                                                                        "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "&")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                          ]
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          interest
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                    |)))
                                                                                                                                |)
                                                                                                                              |)) in
                                                                                                                          let
                                                                                                                                _ :=
                                                                                                                            is_constant_or_break_match (|
                                                                                                                              M.read (|
                                                                                                                                γ
                                                                                                                              |),
                                                                                                                              Value.Bool
                                                                                                                                true
                                                                                                                            |) in
                                                                                                                          let~
                                                                                                                                meta :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::metadata::Metadata"
                                                                                                                                    ]
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "&")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                                  ],
                                                                                                                                M.get_trait_method (|
                                                                                                                                  "tracing_core::callsite::Callsite",
                                                                                                                                  Ty.path
                                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                                  [],
                                                                                                                                  [],
                                                                                                                                  "metadata",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.read (|
                                                                                                                                        get_constant (|
                                                                                                                                          "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                                            ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |) in
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              Ty.path
                                                                                                                                "tracing::span::Span",
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing::span::Span",
                                                                                                                                "new",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.deref (|
                                                                                                                                    M.read (|
                                                                                                                                      meta
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |);
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.deref (|
                                                                                                                                    M.borrow (|
                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                      let~
                                                                                                                                            iter :
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "*")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::field::Iter"
                                                                                                                                            ] :=
                                                                                                                                        M.alloc (|
                                                                                                                                          M.call_closure (|
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::field::Iter",
                                                                                                                                            M.get_associated_function (|
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::field::FieldSet",
                                                                                                                                              "iter",
                                                                                                                                              [],
                                                                                                                                              []
                                                                                                                                            |),
                                                                                                                                            [
                                                                                                                                              M.borrow (|
                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                M.deref (|
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "&")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "tracing_core::field::FieldSet"
                                                                                                                                                      ],
                                                                                                                                                    M.get_associated_function (|
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::metadata::Metadata",
                                                                                                                                                      "fields",
                                                                                                                                                      [],
                                                                                                                                                      []
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.borrow (|
                                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                                        M.deref (|
                                                                                                                                                          M.read (|
                                                                                                                                                            meta
                                                                                                                                                          |)
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            ]
                                                                                                                                          |)
                                                                                                                                        |) in
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::field::ValueSet",
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::field::FieldSet",
                                                                                                                                            "value_set",
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "array")
                                                                                                                                                [
                                                                                                                                                  Value.Integer
                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                    1
                                                                                                                                                ]
                                                                                                                                                [
                                                                                                                                                  Ty.tuple
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "tracing_core::field::Field"
                                                                                                                                                        ];
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "core::option::Option")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.dyn
                                                                                                                                                                [
                                                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                                                    [])
                                                                                                                                                                ]
                                                                                                                                                            ]
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::field::FieldSet"
                                                                                                                                                    ],
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                                                                    "fields",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                      M.deref (|
                                                                                                                                                        M.read (|
                                                                                                                                                          meta
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.alloc (|
                                                                                                                                                    Value.Array
                                                                                                                                                      [
                                                                                                                                                        Value.Tuple
                                                                                                                                                          [
                                                                                                                                                            M.borrow (|
                                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                                              M.alloc (|
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "tracing_core::field::Field",
                                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "core::option::Option")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.path
                                                                                                                                                                          "tracing_core::field::Field"
                                                                                                                                                                      ],
                                                                                                                                                                    "expect",
                                                                                                                                                                    [],
                                                                                                                                                                    []
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    M.call_closure (|
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "core::option::Option")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.path
                                                                                                                                                                            "tracing_core::field::Field"
                                                                                                                                                                        ],
                                                                                                                                                                      M.get_trait_method (|
                                                                                                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                                                                                                        Ty.path
                                                                                                                                                                          "tracing_core::field::Iter",
                                                                                                                                                                        [],
                                                                                                                                                                        [],
                                                                                                                                                                        "next",
                                                                                                                                                                        [],
                                                                                                                                                                        []
                                                                                                                                                                      |),
                                                                                                                                                                      [
                                                                                                                                                                        M.borrow (|
                                                                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                                                                          M.deref (|
                                                                                                                                                                            M.borrow (|
                                                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                                                              iter
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        |)
                                                                                                                                                                      ]
                                                                                                                                                                    |);
                                                                                                                                                                    M.borrow (|
                                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                                      M.deref (|
                                                                                                                                                                        mk_str (|
                                                                                                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |);
                                                                                                                                                            Value.StructTuple
                                                                                                                                                              "core::option::Option::Some"
                                                                                                                                                              [
                                                                                                                                                                M.read (|
                                                                                                                                                                  M.use
                                                                                                                                                                    (M.alloc (|
                                                                                                                                                                      (* Unsize *)
                                                                                                                                                                      M.pointer_coercion
                                                                                                                                                                        (M.borrow (|
                                                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                                                          M.deref (|
                                                                                                                                                                            M.borrow (|
                                                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                                                              M.alloc (|
                                                                                                                                                                                M.call_closure (|
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "tracing_core::field::DisplayValue")
                                                                                                                                                                                    []
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.apply
                                                                                                                                                                                        (Ty.path
                                                                                                                                                                                          "&")
                                                                                                                                                                                        []
                                                                                                                                                                                        [
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "p3_matrix::Dimensions"
                                                                                                                                                                                        ]
                                                                                                                                                                                    ],
                                                                                                                                                                                  M.get_function (|
                                                                                                                                                                                    "tracing_core::field::display",
                                                                                                                                                                                    [],
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.apply
                                                                                                                                                                                        (Ty.path
                                                                                                                                                                                          "&")
                                                                                                                                                                                        []
                                                                                                                                                                                        [
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "p3_matrix::Dimensions"
                                                                                                                                                                                        ]
                                                                                                                                                                                    ]
                                                                                                                                                                                  |),
                                                                                                                                                                                  [
                                                                                                                                                                                    M.borrow (|
                                                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                                                      M.alloc (|
                                                                                                                                                                                        M.call_closure (|
                                                                                                                                                                                          Ty.path
                                                                                                                                                                                            "p3_matrix::Dimensions",
                                                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                                                            "p3_matrix::Matrix",
                                                                                                                                                                                            Ty.apply
                                                                                                                                                                                              (Ty.path
                                                                                                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                                                                                                              []
                                                                                                                                                                                              [
                                                                                                                                                                                                Val;
                                                                                                                                                                                                Ty.apply
                                                                                                                                                                                                  (Ty.path
                                                                                                                                                                                                    "&")
                                                                                                                                                                                                  []
                                                                                                                                                                                                  [
                                                                                                                                                                                                    Ty.apply
                                                                                                                                                                                                      (Ty.path
                                                                                                                                                                                                        "slice")
                                                                                                                                                                                                      []
                                                                                                                                                                                                      [
                                                                                                                                                                                                        Val
                                                                                                                                                                                                      ]
                                                                                                                                                                                                  ]
                                                                                                                                                                                              ],
                                                                                                                                                                                            [],
                                                                                                                                                                                            [
                                                                                                                                                                                              Val
                                                                                                                                                                                            ],
                                                                                                                                                                                            "dimensions",
                                                                                                                                                                                            [],
                                                                                                                                                                                            []
                                                                                                                                                                                          |),
                                                                                                                                                                                          [
                                                                                                                                                                                            M.borrow (|
                                                                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                                                                              M.deref (|
                                                                                                                                                                                                M.read (|
                                                                                                                                                                                                  mat
                                                                                                                                                                                                |)
                                                                                                                                                                                              |)
                                                                                                                                                                                            |)
                                                                                                                                                                                          ]
                                                                                                                                                                                        |)
                                                                                                                                                                                      |)
                                                                                                                                                                                    |)
                                                                                                                                                                                  ]
                                                                                                                                                                                |)
                                                                                                                                                                              |)
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        |))
                                                                                                                                                                    |))
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                          ]
                                                                                                                                                      ]
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)));
                                                                                                                      fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (let~
                                                                                                                                span :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "tracing::span::Span"
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing::span::Span",
                                                                                                                                M.get_function (|
                                                                                                                                  "tracing::__macro_support::__disabled_span",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::Metadata"
                                                                                                                                          ],
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "tracing_core::callsite::Callsite",
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::callsite::DefaultCallsite",
                                                                                                                                          [],
                                                                                                                                          [],
                                                                                                                                          "metadata",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.read (|
                                                                                                                                                get_constant (|
                                                                                                                                                  "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE",
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |) in
                                                                                                                          let~
                                                                                                                                _ :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    []
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            |) in
                                                                                                                          span))
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              ys :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "tracing::span::Span",
                                                                                                                "in_scope",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        []
                                                                                                                    ]
                                                                                                                    (Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]);
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  let~
                                                                                                                        interest :
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "*")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::subscriber::Interest"
                                                                                                                        ] :=
                                                                                                                    M.alloc (|
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::subscriber::Interest",
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::subscriber::Interest",
                                                                                                                          "never",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        []
                                                                                                                      |)
                                                                                                                    |) in
                                                                                                                  M.match_operator (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "*")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing::span::Span"
                                                                                                                      ],
                                                                                                                    M.alloc (|
                                                                                                                      Value.Tuple
                                                                                                                        []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (let
                                                                                                                                γ :=
                                                                                                                            M.use
                                                                                                                              (M.alloc (|
                                                                                                                                LogicalOp.and (|
                                                                                                                                  LogicalOp.and (|
                                                                                                                                    LogicalOp.and (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.path
                                                                                                                                          "bool",
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "core::cmp::PartialOrd",
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::metadata::Level",
                                                                                                                                          [],
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                                                          ],
                                                                                                                                          "le",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            get_associated_constant (|
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Level",
                                                                                                                                              "INFO",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::Level"
                                                                                                                                            |)
                                                                                                                                          |);
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            get_constant (|
                                                                                                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::LevelFilter"
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |),
                                                                                                                                      ltac:(M.monadic
                                                                                                                                        (M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "bool",
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "core::cmp::PartialOrd",
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::Level",
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::metadata::LevelFilter"
                                                                                                                                            ],
                                                                                                                                            "le",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              get_associated_constant (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Level",
                                                                                                                                                "INFO",
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::metadata::Level"
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.alloc (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "tracing_core::metadata::LevelFilter",
                                                                                                                                                    "current",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  []
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)))
                                                                                                                                    |),
                                                                                                                                    ltac:(M.monadic
                                                                                                                                      (M.read (|
                                                                                                                                        let~
                                                                                                                                              _ :
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "*")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.tuple
                                                                                                                                                  []
                                                                                                                                              ] :=
                                                                                                                                          M.alloc (|
                                                                                                                                            M.write (|
                                                                                                                                              interest,
                                                                                                                                              M.call_closure (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                                                M.get_associated_function (|
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                                                  "interest",
                                                                                                                                                  [],
                                                                                                                                                  []
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    M.deref (|
                                                                                                                                                      M.read (|
                                                                                                                                                        get_constant (|
                                                                                                                                                          "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE'1",
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.path
                                                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                            ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |) in
                                                                                                                                        M.alloc (|
                                                                                                                                          UnOp.not (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.path
                                                                                                                                                "bool",
                                                                                                                                              M.get_associated_function (|
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::subscriber::Interest",
                                                                                                                                                "is_never",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  interest
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |)))
                                                                                                                                  |),
                                                                                                                                  ltac:(M.monadic
                                                                                                                                    (M.call_closure (|
                                                                                                                                      Ty.path
                                                                                                                                        "bool",
                                                                                                                                      M.get_function (|
                                                                                                                                        "tracing::__macro_support::__is_enabled",
                                                                                                                                        [],
                                                                                                                                        []
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        M.borrow (|
                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                          M.deref (|
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.path
                                                                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                                                                ],
                                                                                                                                              M.get_trait_method (|
                                                                                                                                                "tracing_core::callsite::Callsite",
                                                                                                                                                Ty.path
                                                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                                                [],
                                                                                                                                                [],
                                                                                                                                                "metadata",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.read (|
                                                                                                                                                      get_constant (|
                                                                                                                                                        "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE'1",
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "&")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Ty.path
                                                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                          ]
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          interest
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                    |)))
                                                                                                                                |)
                                                                                                                              |)) in
                                                                                                                          let
                                                                                                                                _ :=
                                                                                                                            is_constant_or_break_match (|
                                                                                                                              M.read (|
                                                                                                                                γ
                                                                                                                              |),
                                                                                                                              Value.Bool
                                                                                                                                true
                                                                                                                            |) in
                                                                                                                          let~
                                                                                                                                meta :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::metadata::Metadata"
                                                                                                                                    ]
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "&")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                                                  ],
                                                                                                                                M.get_trait_method (|
                                                                                                                                  "tracing_core::callsite::Callsite",
                                                                                                                                  Ty.path
                                                                                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                                                                                  [],
                                                                                                                                  [],
                                                                                                                                  "metadata",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.read (|
                                                                                                                                        get_constant (|
                                                                                                                                          "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE'1",
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "&")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.path
                                                                                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                                                                                            ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |) in
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              Ty.path
                                                                                                                                "tracing::span::Span",
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing::span::Span",
                                                                                                                                "new",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.deref (|
                                                                                                                                    M.read (|
                                                                                                                                      meta
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |);
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  M.deref (|
                                                                                                                                    M.borrow (|
                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::field::ValueSet",
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::field::FieldSet",
                                                                                                                                            "value_set",
                                                                                                                                            [],
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "array")
                                                                                                                                                [
                                                                                                                                                  Value.Integer
                                                                                                                                                    IntegerKind.Usize
                                                                                                                                                    0
                                                                                                                                                ]
                                                                                                                                                [
                                                                                                                                                  Ty.tuple
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "&")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.path
                                                                                                                                                            "tracing_core::field::Field"
                                                                                                                                                        ];
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "core::option::Option")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.dyn
                                                                                                                                                                [
                                                                                                                                                                  ("tracing_core::field::Value::Trait",
                                                                                                                                                                    [])
                                                                                                                                                                ]
                                                                                                                                                            ]
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ]
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::field::FieldSet"
                                                                                                                                                    ],
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.path
                                                                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                                                                    "fields",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                      M.deref (|
                                                                                                                                                        M.read (|
                                                                                                                                                          meta
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.alloc (|
                                                                                                                                                    Value.Array
                                                                                                                                                      []
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)));
                                                                                                                      fun
                                                                                                                          γ =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (let~
                                                                                                                                span :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.path
                                                                                                                                    "tracing::span::Span"
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing::span::Span",
                                                                                                                                M.get_function (|
                                                                                                                                  "tracing::__macro_support::__disabled_span",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      M.call_closure (|
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "tracing_core::metadata::Metadata"
                                                                                                                                          ],
                                                                                                                                        M.get_trait_method (|
                                                                                                                                          "tracing_core::callsite::Callsite",
                                                                                                                                          Ty.path
                                                                                                                                            "tracing_core::callsite::DefaultCallsite",
                                                                                                                                          [],
                                                                                                                                          [],
                                                                                                                                          "metadata",
                                                                                                                                          [],
                                                                                                                                          []
                                                                                                                                        |),
                                                                                                                                        [
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.deref (|
                                                                                                                                              M.read (|
                                                                                                                                                get_constant (|
                                                                                                                                                  "p3_fri::two_adic_pcs::open::{{closure}}'3::{{closure}}::{{closure}}::__CALLSITE'1",
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.path
                                                                                                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                                                                                                    ]
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        ]
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |) in
                                                                                                                          let~
                                                                                                                                _ :
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "*")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    []
                                                                                                                                ] :=
                                                                                                                            M.alloc (|
                                                                                                                              Value.Tuple
                                                                                                                                []
                                                                                                                            |) in
                                                                                                                          span))
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |);
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (M.match_operator (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.function
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      []
                                                                                                                                  ]
                                                                                                                                  (Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ])
                                                                                                                              ],
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (M.read (|
                                                                                                                                    let~
                                                                                                                                          h :
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "*")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Ty.path
                                                                                                                                              "usize"
                                                                                                                                          ] :=
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.path
                                                                                                                                            "usize",
                                                                                                                                          BinOp.Wrap.shr,
                                                                                                                                          [
                                                                                                                                            M.call_closure (|
                                                                                                                                              Ty.path
                                                                                                                                                "usize",
                                                                                                                                              M.get_trait_method (|
                                                                                                                                                "p3_matrix::Matrix",
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Val;
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "&")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "slice")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Val
                                                                                                                                                          ]
                                                                                                                                                      ]
                                                                                                                                                  ],
                                                                                                                                                [],
                                                                                                                                                [
                                                                                                                                                  Val
                                                                                                                                                ],
                                                                                                                                                "height",
                                                                                                                                                [],
                                                                                                                                                []
                                                                                                                                              |),
                                                                                                                                              [
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.read (|
                                                                                                                                                      mat
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                |)
                                                                                                                                              ]
                                                                                                                                            |);
                                                                                                                                            M.read (|
                                                                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                                                  M.deref (|
                                                                                                                                                    M.read (|
                                                                                                                                                      self
                                                                                                                                                    |)
                                                                                                                                                  |),
                                                                                                                                                  "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                                                                                  "fri"
                                                                                                                                                |),
                                                                                                                                                "p3_fri::config::FriConfig",
                                                                                                                                                "log_blowup"
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |) in
                                                                                                                                    M.match_operator (|
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "*")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "alloc::vec::Vec")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Challenge;
                                                                                                                                              Ty.path
                                                                                                                                                "alloc::alloc::Global"
                                                                                                                                            ]
                                                                                                                                        ],
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.tuple
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Val;
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "slice")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Val
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ];
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Val;
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "&")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "slice")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Val
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ],
                                                                                                                                          M.get_associated_function (|
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Val;
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "&")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "slice")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Val
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                              ],
                                                                                                                                            "split_rows",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                              M.deref (|
                                                                                                                                                M.read (|
                                                                                                                                                  mat
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |);
                                                                                                                                            M.read (|
                                                                                                                                              h
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        fun
                                                                                                                                            γ =>
                                                                                                                                          ltac:(M.monadic
                                                                                                                                            (let
                                                                                                                                                  γ0_0 :=
                                                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                                                γ,
                                                                                                                                                0
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  γ0_1 :=
                                                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                                                γ,
                                                                                                                                                1
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  low_coset :=
                                                                                                                                              M.copy (|
                                                                                                                                                γ0_0
                                                                                                                                              |) in
                                                                                                                                            let~
                                                                                                                                                  inv_denoms :
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "*")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Challenge;
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                                      ]
                                                                                                                                                  ] :=
                                                                                                                                              M.alloc (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.apply
                                                                                                                                                    (Ty.path
                                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                                    []
                                                                                                                                                    [
                                                                                                                                                      Challenge;
                                                                                                                                                      Ty.path
                                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                                    ],
                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "slice")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Challenge
                                                                                                                                                      ],
                                                                                                                                                    "to_vec",
                                                                                                                                                    [],
                                                                                                                                                    []
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.Ref,
                                                                                                                                                      M.deref (|
                                                                                                                                                        M.call_closure (|
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "slice")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Challenge
                                                                                                                                                                ]
                                                                                                                                                            ],
                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                            "core::ops::index::Index",
                                                                                                                                                            Ty.apply
                                                                                                                                                              (Ty.path
                                                                                                                                                                "alloc::vec::Vec")
                                                                                                                                                              []
                                                                                                                                                              [
                                                                                                                                                                Challenge;
                                                                                                                                                                Ty.path
                                                                                                                                                                  "alloc::alloc::Global"
                                                                                                                                                              ],
                                                                                                                                                            [],
                                                                                                                                                            [
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "core::ops::range::RangeTo")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "usize"
                                                                                                                                                                ]
                                                                                                                                                            ],
                                                                                                                                                            "index",
                                                                                                                                                            [],
                                                                                                                                                            []
                                                                                                                                                          |),
                                                                                                                                                          [
                                                                                                                                                            M.borrow (|
                                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                                              M.deref (|
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "&")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "alloc::vec::Vec")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Challenge;
                                                                                                                                                                          Ty.path
                                                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                                                        ]
                                                                                                                                                                    ],
                                                                                                                                                                  M.get_associated_function (|
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "core::option::Option")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "&")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Ty.apply
                                                                                                                                                                              (Ty.path
                                                                                                                                                                                "alloc::vec::Vec")
                                                                                                                                                                              []
                                                                                                                                                                              [
                                                                                                                                                                                Challenge;
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "alloc::alloc::Global"
                                                                                                                                                                              ]
                                                                                                                                                                          ]
                                                                                                                                                                      ],
                                                                                                                                                                    "unwrap",
                                                                                                                                                                    [],
                                                                                                                                                                    []
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    M.call_closure (|
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "core::option::Option")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Challenge;
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                                                                ]
                                                                                                                                                                            ]
                                                                                                                                                                        ],
                                                                                                                                                                      M.get_associated_function (|
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "p3_util::linear_map::LinearMap")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Challenge;
                                                                                                                                                                            Ty.apply
                                                                                                                                                                              (Ty.path
                                                                                                                                                                                "alloc::vec::Vec")
                                                                                                                                                                              []
                                                                                                                                                                              [
                                                                                                                                                                                Challenge;
                                                                                                                                                                                Ty.path
                                                                                                                                                                                  "alloc::alloc::Global"
                                                                                                                                                                              ]
                                                                                                                                                                          ],
                                                                                                                                                                        "get",
                                                                                                                                                                        [],
                                                                                                                                                                        []
                                                                                                                                                                      |),
                                                                                                                                                                      [
                                                                                                                                                                        M.borrow (|
                                                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                                                          inv_denoms
                                                                                                                                                                        |);
                                                                                                                                                                        M.borrow (|
                                                                                                                                                                          Pointer.Kind.Ref,
                                                                                                                                                                          M.deref (|
                                                                                                                                                                            M.borrow (|
                                                                                                                                                                              Pointer.Kind.Ref,
                                                                                                                                                                              point
                                                                                                                                                                            |)
                                                                                                                                                                          |)
                                                                                                                                                                        |)
                                                                                                                                                                      ]
                                                                                                                                                                    |)
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |);
                                                                                                                                                            Value.StructRecord
                                                                                                                                                              "core::ops::range::RangeTo"
                                                                                                                                                              [
                                                                                                                                                                ("end_",
                                                                                                                                                                  M.read (|
                                                                                                                                                                    h
                                                                                                                                                                  |))
                                                                                                                                                              ]
                                                                                                                                                          ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              |) in
                                                                                                                                            let~
                                                                                                                                                  _ :
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "*")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.tuple
                                                                                                                                                      []
                                                                                                                                                  ] :=
                                                                                                                                              M.alloc (|
                                                                                                                                                M.call_closure (|
                                                                                                                                                  Ty.tuple
                                                                                                                                                    [],
                                                                                                                                                  M.get_function (|
                                                                                                                                                    "p3_util::reverse_slice_index_bits",
                                                                                                                                                    [],
                                                                                                                                                    [
                                                                                                                                                      Challenge
                                                                                                                                                    ]
                                                                                                                                                  |),
                                                                                                                                                  [
                                                                                                                                                    M.borrow (|
                                                                                                                                                      Pointer.Kind.MutRef,
                                                                                                                                                      M.deref (|
                                                                                                                                                        M.call_closure (|
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "&mut")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "slice")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Challenge
                                                                                                                                                                ]
                                                                                                                                                            ],
                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                            "core::ops::deref::DerefMut",
                                                                                                                                                            Ty.apply
                                                                                                                                                              (Ty.path
                                                                                                                                                                "alloc::vec::Vec")
                                                                                                                                                              []
                                                                                                                                                              [
                                                                                                                                                                Challenge;
                                                                                                                                                                Ty.path
                                                                                                                                                                  "alloc::alloc::Global"
                                                                                                                                                              ],
                                                                                                                                                            [],
                                                                                                                                                            [],
                                                                                                                                                            "deref_mut",
                                                                                                                                                            [],
                                                                                                                                                            []
                                                                                                                                                          |),
                                                                                                                                                          [
                                                                                                                                                            M.borrow (|
                                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                                              M.deref (|
                                                                                                                                                                M.borrow (|
                                                                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                                                                  inv_denoms
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  ]
                                                                                                                                                |)
                                                                                                                                              |) in
                                                                                                                                            M.alloc (|
                                                                                                                                              M.call_closure (|
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Challenge;
                                                                                                                                                    Ty.path
                                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                                  ],
                                                                                                                                                M.get_function (|
                                                                                                                                                  "p3_interpolation::interpolate_coset",
                                                                                                                                                  [],
                                                                                                                                                  [
                                                                                                                                                    Val;
                                                                                                                                                    Challenge;
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "p3_matrix::row_index_mapped::RowIndexMappedView")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "p3_matrix::bitrev::BitReversalPerm";
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Val;
                                                                                                                                                            Ty.apply
                                                                                                                                                              (Ty.path
                                                                                                                                                                "&")
                                                                                                                                                              []
                                                                                                                                                              [
                                                                                                                                                                Ty.apply
                                                                                                                                                                  (Ty.path
                                                                                                                                                                    "slice")
                                                                                                                                                                  []
                                                                                                                                                                  [
                                                                                                                                                                    Val
                                                                                                                                                                  ]
                                                                                                                                                              ]
                                                                                                                                                          ]
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    M.deref (|
                                                                                                                                                      M.borrow (|
                                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                                        M.alloc (|
                                                                                                                                                          M.call_closure (|
                                                                                                                                                            Ty.apply
                                                                                                                                                              (Ty.path
                                                                                                                                                                "p3_matrix::row_index_mapped::RowIndexMappedView")
                                                                                                                                                              []
                                                                                                                                                              [
                                                                                                                                                                Ty.path
                                                                                                                                                                  "p3_matrix::bitrev::BitReversalPerm";
                                                                                                                                                                Ty.apply
                                                                                                                                                                  (Ty.path
                                                                                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                                                                                  []
                                                                                                                                                                  [
                                                                                                                                                                    Val;
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "&")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "slice")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Val
                                                                                                                                                                          ]
                                                                                                                                                                      ]
                                                                                                                                                                  ]
                                                                                                                                                              ],
                                                                                                                                                            M.get_associated_function (|
                                                                                                                                                              Ty.path
                                                                                                                                                                "p3_matrix::bitrev::BitReversalPerm",
                                                                                                                                                              "new_view",
                                                                                                                                                              [],
                                                                                                                                                              [
                                                                                                                                                                Val;
                                                                                                                                                                Ty.apply
                                                                                                                                                                  (Ty.path
                                                                                                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                                                                                                  []
                                                                                                                                                                  [
                                                                                                                                                                    Val;
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "&")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "slice")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Val
                                                                                                                                                                          ]
                                                                                                                                                                      ]
                                                                                                                                                                  ]
                                                                                                                                                              ]
                                                                                                                                                            |),
                                                                                                                                                            [
                                                                                                                                                              M.read (|
                                                                                                                                                                low_coset
                                                                                                                                                              |)
                                                                                                                                                            ]
                                                                                                                                                          |)
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    get_constant (|
                                                                                                                                                      "p3_field::field::Field::GENERATOR",
                                                                                                                                                      Val
                                                                                                                                                    |)
                                                                                                                                                  |);
                                                                                                                                                  M.read (|
                                                                                                                                                    point
                                                                                                                                                  |);
                                                                                                                                                  Value.StructTuple
                                                                                                                                                    "core::option::Option::Some"
                                                                                                                                                    [
                                                                                                                                                      M.borrow (|
                                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                                        M.deref (|
                                                                                                                                                          M.call_closure (|
                                                                                                                                                            Ty.apply
                                                                                                                                                              (Ty.path
                                                                                                                                                                "&")
                                                                                                                                                              []
                                                                                                                                                              [
                                                                                                                                                                Ty.apply
                                                                                                                                                                  (Ty.path
                                                                                                                                                                    "slice")
                                                                                                                                                                  []
                                                                                                                                                                  [
                                                                                                                                                                    Challenge
                                                                                                                                                                  ]
                                                                                                                                                              ],
                                                                                                                                                            M.get_trait_method (|
                                                                                                                                                              "core::ops::deref::Deref",
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Challenge;
                                                                                                                                                                  Ty.path
                                                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                                                ],
                                                                                                                                                              [],
                                                                                                                                                              [],
                                                                                                                                                              "deref",
                                                                                                                                                              [],
                                                                                                                                                              []
                                                                                                                                                            |),
                                                                                                                                                            [
                                                                                                                                                              M.borrow (|
                                                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                                                M.deref (|
                                                                                                                                                                  M.borrow (|
                                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                                    inv_denoms
                                                                                                                                                                  |)
                                                                                                                                                                |)
                                                                                                                                                              |)
                                                                                                                                                            ]
                                                                                                                                                          |)
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            |)))
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)))
                                                                                                                      | _ =>
                                                                                                                        M.impossible
                                                                                                                          "wrong number of arguments"
                                                                                                                      end))
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        let~
                                                                                                              _ :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  []
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.tuple
                                                                                                                [],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ],
                                                                                                                [],
                                                                                                                [],
                                                                                                                "for_each",
                                                                                                                [],
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.tuple
                                                                                                                      [])
                                                                                                                ]
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ],
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ],
                                                                                                                    "iter",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      M.deref (|
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "slice")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          M.get_trait_method (|
                                                                                                                            "core::ops::deref::Deref",
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ],
                                                                                                                            [],
                                                                                                                            [],
                                                                                                                            "deref",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.Ref,
                                                                                                                              ys
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |);
                                                                                                                M.closure
                                                                                                                  (fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      match
                                                                                                                        γ
                                                                                                                      with
                                                                                                                      | [
                                                                                                                            α0
                                                                                                                          ] =>
                                                                                                                        ltac:(M.monadic
                                                                                                                          (M.match_operator (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "*")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.function
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      [
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "&")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Challenge
                                                                                                                                          ]
                                                                                                                                      ]
                                                                                                                                  ]
                                                                                                                                  (Ty.tuple
                                                                                                                                    [])
                                                                                                                              ],
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (let
                                                                                                                                        γ :=
                                                                                                                                    M.read (|
                                                                                                                                      γ
                                                                                                                                    |) in
                                                                                                                                  let
                                                                                                                                        y :=
                                                                                                                                    M.copy (|
                                                                                                                                      γ
                                                                                                                                    |) in
                                                                                                                                  M.call_closure (|
                                                                                                                                    Ty.tuple
                                                                                                                                      [],
                                                                                                                                    M.get_trait_method (|
                                                                                                                                      "p3_challenger::FieldChallenger",
                                                                                                                                      Challenger,
                                                                                                                                      [],
                                                                                                                                      [
                                                                                                                                        Val
                                                                                                                                      ],
                                                                                                                                      "observe_algebra_element",
                                                                                                                                      [],
                                                                                                                                      [
                                                                                                                                        Challenge
                                                                                                                                      ]
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.MutRef,
                                                                                                                                        M.deref (|
                                                                                                                                          M.read (|
                                                                                                                                            challenger
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |);
                                                                                                                                      M.read (|
                                                                                                                                        y
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)))
                                                                                                                      | _ =>
                                                                                                                        M.impossible
                                                                                                                          "wrong number of arguments"
                                                                                                                      end))
                                                                                                              ]
                                                                                                            |)
                                                                                                          |) in
                                                                                                        ys
                                                                                                      |)))
                                                                                                ]
                                                                                              |)))
                                                                                          | _ =>
                                                                                            M.impossible
                                                                                              "wrong number of arguments"
                                                                                          end))
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)))
                                                                      ]
                                                                    |)))
                                                                | _ =>
                                                                  M.impossible
                                                                    "wrong number of arguments"
                                                                end))
                                                        ]
                                                      |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          ]
                        |)
                      |) in
                    let~ alpha : Ty.apply (Ty.path "*") [] [ Challenge ] :=
                      M.alloc (|
                        M.call_closure (|
                          Challenge,
                          M.get_trait_method (|
                            "p3_challenger::FieldChallenger",
                            Challenger,
                            [],
                            [ Val ],
                            "sample_algebra_element",
                            [],
                            [ Challenge ]
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (| M.read (| challenger |) |)
                            |)
                          ]
                        |)
                      |) in
                    let~ packed_alpha_powers :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_field::field::ExtensionField"
                                  []
                                  [ Val ]
                                  Challenge
                                  "ExtensionPacking";
                                Ty.path "alloc::alloc::Global"
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::field::ExtensionField"
                                []
                                [ Val ]
                                Challenge
                                "ExtensionPacking";
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "itertools::Itertools",
                            Ty.associated_in_trait
                              "p3_field::packed::PackedFieldExtension"
                              []
                              [ Val; Challenge ]
                              (Ty.associated_in_trait
                                "p3_field::field::ExtensionField"
                                []
                                [ Val ]
                                Challenge
                                "ExtensionPacking")
                              "{{synthetic}}'1",
                            [],
                            [],
                            "collect_vec",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_in_trait
                                "p3_field::packed::PackedFieldExtension"
                                []
                                [ Val; Challenge ]
                                (Ty.associated_in_trait
                                  "p3_field::field::ExtensionField"
                                  []
                                  [ Val ]
                                  Challenge
                                  "ExtensionPacking")
                                "{{synthetic}}'1",
                              M.get_trait_method (|
                                "p3_field::packed::PackedFieldExtension",
                                Ty.associated_in_trait
                                  "p3_field::field::ExtensionField"
                                  []
                                  [ Val ]
                                  Challenge
                                  "ExtensionPacking",
                                [],
                                [ Val; Challenge ],
                                "packed_ext_powers_capped",
                                [],
                                []
                              |),
                              [ M.read (| alpha |); M.read (| global_max_width |) ]
                            |)
                          ]
                        |)
                      |) in
                    let~ alpha_powers :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ Challenge; Ty.path "alloc::alloc::Global" ],
                          M.get_trait_method (|
                            "itertools::Itertools",
                            Ty.associated_in_trait
                              "p3_field::packed::PackedFieldExtension"
                              []
                              [
                                Val;
                                Challenge;
                                Ty.apply
                                  (Ty.path "core::iter::adapters::copied::Copied")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::field::ExtensionField"
                                          []
                                          [ Val ]
                                          Challenge
                                          "ExtensionPacking"
                                      ]
                                  ]
                              ]
                              (Ty.associated_in_trait
                                "p3_field::field::ExtensionField"
                                []
                                [ Val ]
                                Challenge
                                "ExtensionPacking")
                              "{{synthetic}}",
                            [],
                            [],
                            "collect_vec",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_in_trait
                                "p3_field::packed::PackedFieldExtension"
                                []
                                [
                                  Val;
                                  Challenge;
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::copied::Copied")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::field::ExtensionField"
                                            []
                                            [ Val ]
                                            Challenge
                                            "ExtensionPacking"
                                        ]
                                    ]
                                ]
                                (Ty.associated_in_trait
                                  "p3_field::field::ExtensionField"
                                  []
                                  [ Val ]
                                  Challenge
                                  "ExtensionPacking")
                                "{{synthetic}}",
                              M.get_trait_method (|
                                "p3_field::packed::PackedFieldExtension",
                                Ty.associated_in_trait
                                  "p3_field::field::ExtensionField"
                                  []
                                  [ Val ]
                                  Challenge
                                  "ExtensionPacking",
                                [],
                                [ Val; Challenge ],
                                "to_ext_iter",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::copied::Copied")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::field::ExtensionField"
                                            []
                                            [ Val ]
                                            Challenge
                                            "ExtensionPacking"
                                        ]
                                    ]
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::copied::Copied")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::field::ExtensionField"
                                            []
                                            [ Val ]
                                            Challenge
                                            "ExtensionPacking"
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::field::ExtensionField"
                                          []
                                          [ Val ]
                                          Challenge
                                          "ExtensionPacking"
                                      ],
                                    [],
                                    [],
                                    "copied",
                                    [],
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::field::ExtensionField"
                                        []
                                        [ Val ]
                                        Challenge
                                        "ExtensionPacking"
                                    ]
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::field::ExtensionField"
                                            []
                                            [ Val ]
                                            Challenge
                                            "ExtensionPacking"
                                        ],
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::field::ExtensionField"
                                              []
                                              [ Val ]
                                              Challenge
                                              "ExtensionPacking"
                                          ],
                                        "iter",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_field::field::ExtensionField"
                                                        []
                                                        [ Val ]
                                                        Challenge
                                                        "ExtensionPacking"
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_field::field::ExtensionField"
                                                      []
                                                      [ Val ]
                                                      Challenge
                                                      "ExtensionPacking";
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [ M.borrow (| Pointer.Kind.Ref, packed_alpha_powers |)
                                              ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |) in
                    let~ num_reduced :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "array")
                              [ Value.Integer IntegerKind.Usize 32 ]
                              [ Ty.path "usize" ]
                          ] :=
                      M.alloc (|
                        repeat (|
                          Value.Integer IntegerKind.Usize 0,
                          Value.Integer IntegerKind.Usize 32
                        |)
                      |) in
                    let~ reduced_openings :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "array")
                              [ Value.Integer IntegerKind.Usize 32 ]
                              [
                                Ty.apply
                                  (Ty.path "core::option::Option")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                  ]
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "array")
                            [ Value.Integer IntegerKind.Usize 32 ]
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                ]
                            ],
                          M.get_function (|
                            "core::array::from_fn",
                            [ Value.Integer IntegerKind.Usize 32 ],
                            [
                              Ty.apply
                                (Ty.path "core::option::Option")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                ];
                              Ty.function
                                [ Ty.tuple [ Ty.path "usize" ] ]
                                (Ty.apply
                                  (Ty.path "core::option::Option")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [ Challenge; Ty.path "alloc::alloc::Global" ]
                                  ])
                            ]
                          |),
                          [
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.apply
                                          (Ty.path "*")
                                          []
                                          [
                                            Ty.function
                                              [ Ty.tuple [ Ty.path "usize" ] ]
                                              (Ty.apply
                                                (Ty.path "core::option::Option")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                ])
                                          ],
                                        M.alloc (| α0 |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (Value.StructTuple "core::option::Option::None" []))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |)
                      |) in
                    let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                      M.use
                        (M.match_operator (|
                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::zip::Zip")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Val;
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::slice::iter::Iter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::collect::IntoIterator",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::zip::Zip")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ],
                                [],
                                [],
                                "into_iter",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::zip::Zip")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                                  []
                                                  [
                                                    Val;
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "zip",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Val;
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [ Challenge; Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ],
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Val;
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.apply (Ty.path "slice") [] [ Val ] ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        "iter",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [ Val ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_matrix::dense::DenseMatrix")
                                                              []
                                                              [
                                                                Val;
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [ Val ]
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [ M.borrow (| Pointer.Kind.Ref, mats_and_points |) ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [ Challenge; Ty.path "alloc::alloc::Global" ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ],
                                        "iter",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Challenge;
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [ M.borrow (| Pointer.Kind.Ref, all_opened_values |) ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |)
                              ]
                            |)
                          |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let iter := M.copy (| γ |) in
                                M.loop (|
                                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                  ltac:(M.monadic
                                    (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                      M.match_operator (|
                                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                        M.alloc (|
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "core::option::Option")
                                              []
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_matrix::dense::DenseMatrix")
                                                                  []
                                                                  [
                                                                    Val;
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          []
                                                                          [ Val ]
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Challenge;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ]
                                              ],
                                            M.get_trait_method (|
                                              "core::iter::traits::iterator::Iterator",
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::zip::Zip")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_matrix::dense::DenseMatrix")
                                                                []
                                                                [
                                                                  Val;
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [ Val ]
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Challenge;
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ],
                                              [],
                                              [],
                                              "next",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.borrow (| Pointer.Kind.MutRef, iter |)
                                                |)
                                              |)
                                            ]
                                          |)
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let _ :=
                                                M.is_struct_tuple (|
                                                  γ,
                                                  "core::option::Option::None"
                                                |) in
                                              M.alloc (|
                                                M.never_to_any (| M.read (| M.break (||) |) |)
                                              |)));
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let γ0_0 :=
                                                M.SubPointer.get_struct_tuple_field (|
                                                  γ,
                                                  "core::option::Option::Some",
                                                  0
                                                |) in
                                              let γ1_0 :=
                                                M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                              let γ1_1 :=
                                                M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                              let γ1_0 := M.read (| γ1_0 |) in
                                              let γ3_0 :=
                                                M.SubPointer.get_tuple_field (| γ1_0, 0 |) in
                                              let γ3_1 :=
                                                M.SubPointer.get_tuple_field (| γ1_0, 1 |) in
                                              let mats := M.alloc (| γ3_0 |) in
                                              let points := M.alloc (| γ3_1 |) in
                                              let openings_for_round := M.copy (| γ1_1 |) in
                                              M.use
                                                (M.match_operator (|
                                                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::map::Map")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::zip::Zip")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ Val ]
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ];
                                                          Ty.function
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "slice")
                                                                                        []
                                                                                        [ Val ]
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                            (Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ])
                                                        ],
                                                      M.get_trait_method (|
                                                        "core::iter::traits::collect::IntoIterator",
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::map::Map")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [ Val ]
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [ Val ]
                                                                                      ]
                                                                                  ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ Val ]
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ])
                                                          ],
                                                        [],
                                                        [],
                                                        "into_iter",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.read (|
                                                          let~ iter :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ Val ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_matrix::dense::DenseMatrix")
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "slice")
                                                                              []
                                                                              [ Val ]
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::collect::IntoIterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ Val ]
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "into_iter",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [ Val ]
                                                                              ]
                                                                          ]
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      "iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [ Val ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (| mats |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |)
                                                            |) in
                                                          let~ iter :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::zip::Zip")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [ Val ]
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ Val ]
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "zip",
                                                                  [],
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                                |),
                                                                [
                                                                  M.read (| iter |);
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ],
                                                                      "iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (|
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        points
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |)
                                                            |) in
                                                          let~ iter :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::zip::Zip")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::zip::Zip")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "slice")
                                                                                        []
                                                                                        [ Val ]
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::zip::Zip")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::zip::Zip")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "zip",
                                                                  [],
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                                |),
                                                                [
                                                                  M.read (| iter |);
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ],
                                                                      "iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (|
                                                                                    openings_for_round
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |)
                                                            |) in
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::map::Map")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::zip::Zip")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::zip::Zip")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "slice")
                                                                                        []
                                                                                        [ Val ]
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ])
                                                                ],
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::zip::Zip")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                [],
                                                                [],
                                                                "map",
                                                                [],
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "slice")
                                                                                    []
                                                                                    [ Val ]
                                                                                ]
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ];
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_matrix::dense::DenseMatrix")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [ Val ]
                                                                                  ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ])
                                                                ]
                                                              |),
                                                              [
                                                                M.read (| iter |);
                                                                M.closure
                                                                  (fun γ =>
                                                                    ltac:(M.monadic
                                                                      match γ with
                                                                      | [ α0 ] =>
                                                                        ltac:(M.monadic
                                                                          (M.match_operator (|
                                                                            Ty.apply
                                                                              (Ty.path "*")
                                                                              []
                                                                              [
                                                                                Ty.function
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                                      []
                                                                                                      [
                                                                                                        Val;
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "slice")
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                                  (Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Challenge;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ])
                                                                              ],
                                                                            M.alloc (| α0 |),
                                                                            [
                                                                              fun γ =>
                                                                                ltac:(M.monadic
                                                                                  (let γ0_0 :=
                                                                                    M.SubPointer.get_tuple_field (|
                                                                                      γ,
                                                                                      0
                                                                                    |) in
                                                                                  let γ0_1 :=
                                                                                    M.SubPointer.get_tuple_field (|
                                                                                      γ,
                                                                                      1
                                                                                    |) in
                                                                                  let γ1_0 :=
                                                                                    M.SubPointer.get_tuple_field (|
                                                                                      γ0_0,
                                                                                      0
                                                                                    |) in
                                                                                  let γ1_1 :=
                                                                                    M.SubPointer.get_tuple_field (|
                                                                                      γ0_0,
                                                                                      1
                                                                                    |) in
                                                                                  let a :=
                                                                                    M.copy (|
                                                                                      γ1_0
                                                                                    |) in
                                                                                  let b :=
                                                                                    M.copy (|
                                                                                      γ1_1
                                                                                    |) in
                                                                                  let b :=
                                                                                    M.copy (|
                                                                                      γ0_1
                                                                                    |) in
                                                                                  Value.Tuple
                                                                                    [
                                                                                      M.read (|
                                                                                        a
                                                                                      |);
                                                                                      M.read (|
                                                                                        b
                                                                                      |);
                                                                                      M.read (| b |)
                                                                                    ]))
                                                                            ]
                                                                          |)))
                                                                      | _ =>
                                                                        M.impossible
                                                                          "wrong number of arguments"
                                                                      end))
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let iter := M.copy (| γ |) in
                                                        M.loop (|
                                                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                          ltac:(M.monadic
                                                            (let~ _ :
                                                                Ty.apply
                                                                  (Ty.path "*")
                                                                  []
                                                                  [ Ty.tuple [] ] :=
                                                              M.match_operator (|
                                                                Ty.apply
                                                                  (Ty.path "*")
                                                                  []
                                                                  [ Ty.tuple [] ],
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [ Val ]
                                                                                      ]
                                                                                  ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::iter::traits::iterator::Iterator",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::map::Map")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::iter::adapters::zip::Zip")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::iter::adapters::zip::Zip")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_matrix::dense::DenseMatrix")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "slice")
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ];
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::slice::iter::Iter")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ];
                                                                          Ty.function
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ]
                                                                                                    ]
                                                                                                ]
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            (Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "&")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "slice")
                                                                                              []
                                                                                              [ Val
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ])
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "next",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.MutRef,
                                                                        M.deref (|
                                                                          M.borrow (|
                                                                            Pointer.Kind.MutRef,
                                                                            iter
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let _ :=
                                                                        M.is_struct_tuple (|
                                                                          γ,
                                                                          "core::option::Option::None"
                                                                        |) in
                                                                      M.alloc (|
                                                                        M.never_to_any (|
                                                                          M.read (| M.break (||) |)
                                                                        |)
                                                                      |)));
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let γ0_0 :=
                                                                        M.SubPointer.get_struct_tuple_field (|
                                                                          γ,
                                                                          "core::option::Option::Some",
                                                                          0
                                                                        |) in
                                                                      let γ1_0 :=
                                                                        M.SubPointer.get_tuple_field (|
                                                                          γ0_0,
                                                                          0
                                                                        |) in
                                                                      let γ1_1 :=
                                                                        M.SubPointer.get_tuple_field (|
                                                                          γ0_0,
                                                                          1
                                                                        |) in
                                                                      let γ1_2 :=
                                                                        M.SubPointer.get_tuple_field (|
                                                                          γ0_0,
                                                                          2
                                                                        |) in
                                                                      let mat :=
                                                                        M.copy (| γ1_0 |) in
                                                                      let points_for_mat :=
                                                                        M.copy (| γ1_1 |) in
                                                                      let openings_for_mat :=
                                                                        M.copy (| γ1_2 |) in
                                                                      let~ _guard :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing::span::EnteredSpan"
                                                                            ] :=
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            Ty.path
                                                                              "tracing::span::EnteredSpan",
                                                                            M.get_associated_function (|
                                                                              Ty.path
                                                                                "tracing::span::Span",
                                                                              "entered",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (|
                                                                                let~ interest :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::subscriber::Interest"
                                                                                      ] :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::subscriber::Interest",
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "tracing_core::subscriber::Interest",
                                                                                        "never",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing::span::Span"
                                                                                    ],
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              LogicalOp.and (|
                                                                                                LogicalOp.and (|
                                                                                                  LogicalOp.and (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "bool",
                                                                                                      M.get_trait_method (|
                                                                                                        "core::cmp::PartialOrd",
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Level",
                                                                                                        [],
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::LevelFilter"
                                                                                                        ],
                                                                                                        "le",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          get_associated_constant (|
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::Level",
                                                                                                            "INFO",
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::Level"
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          get_constant (|
                                                                                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |),
                                                                                                    ltac:(M.monadic
                                                                                                      (M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "bool",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::cmp::PartialOrd",
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::Level",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                          ],
                                                                                                          "le",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            get_associated_constant (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Level",
                                                                                                              "INFO",
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Level"
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::LevelFilter",
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                                                  "current",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)))
                                                                                                  |),
                                                                                                  ltac:(M.monadic
                                                                                                    (M.read (|
                                                                                                      let~
                                                                                                            _ :
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "*")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                []
                                                                                                            ] :=
                                                                                                        M.alloc (|
                                                                                                          M.write (|
                                                                                                            interest,
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::subscriber::Interest",
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                "interest",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "p3_fri::two_adic_pcs::open::__CALLSITE",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                          ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |) in
                                                                                                      M.alloc (|
                                                                                                        UnOp.not (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.path
                                                                                                              "bool",
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::subscriber::Interest",
                                                                                                              "is_never",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                interest
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)))
                                                                                                |),
                                                                                                ltac:(M.monadic
                                                                                                  (M.call_closure (|
                                                                                                    Ty.path
                                                                                                      "bool",
                                                                                                    M.get_function (|
                                                                                                      "tracing::__macro_support::__is_enabled",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.deref (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::Metadata"
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "tracing_core::callsite::Callsite",
                                                                                                              Ty.path
                                                                                                                "tracing_core::callsite::DefaultCallsite",
                                                                                                              [],
                                                                                                              [],
                                                                                                              "metadata",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    get_constant (|
                                                                                                                      "p3_fri::two_adic_pcs::open::__CALLSITE",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::callsite::DefaultCallsite"
                                                                                                                        ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        interest
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)))
                                                                                              |)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        let~ meta :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                  ]
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "tracing_core::callsite::Callsite",
                                                                                                Ty.path
                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                [],
                                                                                                [],
                                                                                                "metadata",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      get_constant (|
                                                                                                        "p3_fri::two_adic_pcs::open::__CALLSITE",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                          ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.path
                                                                                              "tracing::span::Span",
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "tracing::span::Span",
                                                                                              "new",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.read (|
                                                                                                    meta
                                                                                                  |)
                                                                                                |)
                                                                                              |);
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    let~
                                                                                                          iter :
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "*")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "tracing_core::field::Iter"
                                                                                                          ] :=
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::Iter",
                                                                                                          M.get_associated_function (|
                                                                                                            Ty.path
                                                                                                              "tracing_core::field::FieldSet",
                                                                                                            "iter",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "tracing_core::field::FieldSet"
                                                                                                                    ],
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::metadata::Metadata",
                                                                                                                    "fields",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      M.deref (|
                                                                                                                        M.read (|
                                                                                                                          meta
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |) in
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "tracing_core::field::ValueSet",
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::FieldSet",
                                                                                                          "value_set",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "array")
                                                                                                              [
                                                                                                                Value.Integer
                                                                                                                  IntegerKind.Usize
                                                                                                                  1
                                                                                                              ]
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::field::Field"
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::option::Option")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.dyn
                                                                                                                              [
                                                                                                                                ("tracing_core::field::Value::Trait",
                                                                                                                                  [])
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::FieldSet"
                                                                                                                  ],
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::Metadata",
                                                                                                                  "fields",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        meta
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    [
                                                                                                                      Value.Tuple
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.alloc (|
                                                                                                                              M.call_closure (|
                                                                                                                                Ty.path
                                                                                                                                  "tracing_core::field::Field",
                                                                                                                                M.get_associated_function (|
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "core::option::Option")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::field::Field"
                                                                                                                                    ],
                                                                                                                                  "expect",
                                                                                                                                  [],
                                                                                                                                  []
                                                                                                                                |),
                                                                                                                                [
                                                                                                                                  M.call_closure (|
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "core::option::Option")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Ty.path
                                                                                                                                          "tracing_core::field::Field"
                                                                                                                                      ],
                                                                                                                                    M.get_trait_method (|
                                                                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                                                                      Ty.path
                                                                                                                                        "tracing_core::field::Iter",
                                                                                                                                      [],
                                                                                                                                      [],
                                                                                                                                      "next",
                                                                                                                                      [],
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    [
                                                                                                                                      M.borrow (|
                                                                                                                                        Pointer.Kind.MutRef,
                                                                                                                                        M.deref (|
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.MutRef,
                                                                                                                                            iter
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    ]
                                                                                                                                  |);
                                                                                                                                  M.borrow (|
                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                    M.deref (|
                                                                                                                                      mk_str (|
                                                                                                                                        "FieldSet corrupted (this is a bug)"
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                ]
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |);
                                                                                                                          Value.StructTuple
                                                                                                                            "core::option::Option::Some"
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                M.use
                                                                                                                                  (M.alloc (|
                                                                                                                                    (* Unsize *)
                                                                                                                                    M.pointer_coercion
                                                                                                                                      (M.borrow (|
                                                                                                                                        Pointer.Kind.Ref,
                                                                                                                                        M.deref (|
                                                                                                                                          M.borrow (|
                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                            M.alloc (|
                                                                                                                                              M.call_closure (|
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "tracing_core::field::DisplayValue")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "&")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "p3_matrix::Dimensions"
                                                                                                                                                      ]
                                                                                                                                                  ],
                                                                                                                                                M.get_function (|
                                                                                                                                                  "tracing_core::field::display",
                                                                                                                                                  [],
                                                                                                                                                  [
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "&")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.path
                                                                                                                                                          "p3_matrix::Dimensions"
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  M.borrow (|
                                                                                                                                                    Pointer.Kind.Ref,
                                                                                                                                                    M.alloc (|
                                                                                                                                                      M.call_closure (|
                                                                                                                                                        Ty.path
                                                                                                                                                          "p3_matrix::Dimensions",
                                                                                                                                                        M.get_trait_method (|
                                                                                                                                                          "p3_matrix::Matrix",
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "p3_matrix::dense::DenseMatrix")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Val;
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "&")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "slice")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Val
                                                                                                                                                                    ]
                                                                                                                                                                ]
                                                                                                                                                            ],
                                                                                                                                                          [],
                                                                                                                                                          [
                                                                                                                                                            Val
                                                                                                                                                          ],
                                                                                                                                                          "dimensions",
                                                                                                                                                          [],
                                                                                                                                                          []
                                                                                                                                                        |),
                                                                                                                                                        [
                                                                                                                                                          M.borrow (|
                                                                                                                                                            Pointer.Kind.Ref,
                                                                                                                                                            M.deref (|
                                                                                                                                                              M.read (|
                                                                                                                                                                mat
                                                                                                                                                              |)
                                                                                                                                                            |)
                                                                                                                                                          |)
                                                                                                                                                        ]
                                                                                                                                                      |)
                                                                                                                                                    |)
                                                                                                                                                  |)
                                                                                                                                                ]
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          |)
                                                                                                                                        |)
                                                                                                                                      |))
                                                                                                                                  |))
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let~ span :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "tracing::span::Span"
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "tracing::span::Span",
                                                                                              M.get_function (|
                                                                                                "tracing::__macro_support::__disabled_span",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::Metadata"
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "tracing_core::callsite::Callsite",
                                                                                                        Ty.path
                                                                                                          "tracing_core::callsite::DefaultCallsite",
                                                                                                        [],
                                                                                                        [],
                                                                                                        "metadata",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              get_constant (|
                                                                                                                "p3_fri::two_adic_pcs::open::__CALLSITE",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                                                                  ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        let~ _ :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |) in
                                                                                        span))
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |) in
                                                                      let~ log_height :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.path "usize" ] :=
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            Ty.path "usize",
                                                                            M.get_function (|
                                                                              "p3_util::log2_strict_usize",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.call_closure (|
                                                                                Ty.path "usize",
                                                                                M.get_trait_method (|
                                                                                  "p3_matrix::Matrix",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "slice")
                                                                                            []
                                                                                            [ Val ]
                                                                                        ]
                                                                                    ],
                                                                                  [],
                                                                                  [ Val ],
                                                                                  "height",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        mat
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |) in
                                                                      let~
                                                                            reduced_opening_for_log_height :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&mut")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ] :=
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&mut")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ],
                                                                              "get_or_insert_with",
                                                                              [],
                                                                              [
                                                                                Ty.function
                                                                                  [ Ty.tuple [] ]
                                                                                  (Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ])
                                                                              ]
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.MutRef,
                                                                                M.SubPointer.get_array_field (|
                                                                                  reduced_openings,
                                                                                  M.read (|
                                                                                    log_height
                                                                                  |)
                                                                                |)
                                                                              |);
                                                                              M.closure
                                                                                (fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    match γ with
                                                                                    | [ α0 ] =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    []
                                                                                                ]
                                                                                                (Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ])
                                                                                            ],
                                                                                          M.alloc (|
                                                                                            α0
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ],
                                                                                                  M.get_function (|
                                                                                                    "alloc::vec::from_elem",
                                                                                                    [],
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                  |),
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      get_constant (|
                                                                                                        "p3_field::field::PrimeCharacteristicRing::ZERO",
                                                                                                        Challenge
                                                                                                      |)
                                                                                                    |);
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "usize",
                                                                                                      M.get_trait_method (|
                                                                                                        "p3_matrix::Matrix",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                                          []
                                                                                                          [
                                                                                                            Val;
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                        [],
                                                                                                        [
                                                                                                          Val
                                                                                                        ],
                                                                                                        "height",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              mat
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                    | _ =>
                                                                                      M.impossible
                                                                                        "wrong number of arguments"
                                                                                    end))
                                                                            ]
                                                                          |)
                                                                        |) in
                                                                      let~ _ :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ] :=
                                                                        M.match_operator (|
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ],
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |),
                                                                          [
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let γ :=
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      Value.Bool
                                                                                        true
                                                                                    |)) in
                                                                                let _ :=
                                                                                  is_constant_or_break_match (|
                                                                                    M.read (| γ |),
                                                                                    Value.Bool true
                                                                                  |) in
                                                                                let~ _ :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [ Ty.tuple []
                                                                                      ] :=
                                                                                  M.match_operator (|
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [ Ty.tuple []
                                                                                      ],
                                                                                    M.alloc (|
                                                                                      Value.Tuple
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "usize",
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ],
                                                                                                  "len",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.read (|
                                                                                                        reduced_opening_for_log_height
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |);
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                Ty.path
                                                                                                  "usize",
                                                                                                M.get_trait_method (|
                                                                                                  "p3_matrix::Matrix",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                                    []
                                                                                                    [
                                                                                                      Val;
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "slice")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  [],
                                                                                                  [
                                                                                                    Val
                                                                                                  ],
                                                                                                  "height",
                                                                                                  [],
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.deref (|
                                                                                                      M.read (|
                                                                                                        mat
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ,
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                γ0_1 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ,
                                                                                              1
                                                                                            |) in
                                                                                          let
                                                                                                left_val :=
                                                                                            M.copy (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          let
                                                                                                right_val :=
                                                                                            M.copy (|
                                                                                              γ0_1
                                                                                            |) in
                                                                                          M.match_operator (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ],
                                                                                            M.alloc (|
                                                                                              Value.Tuple
                                                                                                []
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ :=
                                                                                                    M.use
                                                                                                      (M.alloc (|
                                                                                                        UnOp.not (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.path
                                                                                                              "bool",
                                                                                                            BinOp.eq,
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    left_val
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    right_val
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)) in
                                                                                                  let
                                                                                                        _ :=
                                                                                                    is_constant_or_break_match (|
                                                                                                      M.read (|
                                                                                                        γ
                                                                                                      |),
                                                                                                      Value.Bool
                                                                                                        true
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        let~
                                                                                                              kind :
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "core::panicking::AssertKind"
                                                                                                              ] :=
                                                                                                          M.alloc (|
                                                                                                            Value.StructTuple
                                                                                                              "core::panicking::AssertKind::Eq"
                                                                                                              []
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.path
                                                                                                              "never",
                                                                                                            M.get_function (|
                                                                                                              "core::panicking::assert_failed",
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "usize";
                                                                                                                Ty.path
                                                                                                                  "usize"
                                                                                                              ]
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                kind
                                                                                                              |);
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        left_val
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |);
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        right_val
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |);
                                                                                                              Value.StructTuple
                                                                                                                "core::option::Option::None"
                                                                                                                []
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)));
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |)))
                                                                                            ]
                                                                                          |)))
                                                                                    ]
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Value.Tuple []
                                                                                |)));
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (M.alloc (|
                                                                                  Value.Tuple []
                                                                                |)))
                                                                          ]
                                                                        |) in
                                                                      let~ mat_compressed :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ] :=
                                                                        M.alloc (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            M.get_associated_function (|
                                                                              Ty.path
                                                                                "tracing::span::Span",
                                                                              "in_scope",
                                                                              [],
                                                                              [
                                                                                Ty.function
                                                                                  [ Ty.tuple [] ]
                                                                                  (Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]);
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                let~ interest :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::subscriber::Interest"
                                                                                      ] :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::subscriber::Interest",
                                                                                      M.get_associated_function (|
                                                                                        Ty.path
                                                                                          "tracing_core::subscriber::Interest",
                                                                                        "never",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      []
                                                                                    |)
                                                                                  |) in
                                                                                M.match_operator (|
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing::span::Span"
                                                                                    ],
                                                                                  M.alloc (|
                                                                                    Value.Tuple []
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ :=
                                                                                          M.use
                                                                                            (M.alloc (|
                                                                                              LogicalOp.and (|
                                                                                                LogicalOp.and (|
                                                                                                  LogicalOp.and (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "bool",
                                                                                                      M.get_trait_method (|
                                                                                                        "core::cmp::PartialOrd",
                                                                                                        Ty.path
                                                                                                          "tracing_core::metadata::Level",
                                                                                                        [],
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::LevelFilter"
                                                                                                        ],
                                                                                                        "le",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          get_associated_constant (|
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::Level",
                                                                                                            "INFO",
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::Level"
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          get_constant (|
                                                                                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |),
                                                                                                    ltac:(M.monadic
                                                                                                      (M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "bool",
                                                                                                        M.get_trait_method (|
                                                                                                          "core::cmp::PartialOrd",
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::Level",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "tracing_core::metadata::LevelFilter"
                                                                                                          ],
                                                                                                          "le",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            get_associated_constant (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Level",
                                                                                                              "INFO",
                                                                                                              Ty.path
                                                                                                                "tracing_core::metadata::Level"
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::LevelFilter",
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::LevelFilter",
                                                                                                                  "current",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                []
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)))
                                                                                                  |),
                                                                                                  ltac:(M.monadic
                                                                                                    (M.read (|
                                                                                                      let~
                                                                                                            _ :
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "*")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                []
                                                                                                            ] :=
                                                                                                        M.alloc (|
                                                                                                          M.write (|
                                                                                                            interest,
                                                                                                            M.call_closure (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::subscriber::Interest",
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.path
                                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                                "interest",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "p3_fri::two_adic_pcs::open::__CALLSITE'1",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                                          ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |) in
                                                                                                      M.alloc (|
                                                                                                        UnOp.not (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.path
                                                                                                              "bool",
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.path
                                                                                                                "tracing_core::subscriber::Interest",
                                                                                                              "is_never",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                interest
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)))
                                                                                                |),
                                                                                                ltac:(M.monadic
                                                                                                  (M.call_closure (|
                                                                                                    Ty.path
                                                                                                      "bool",
                                                                                                    M.get_function (|
                                                                                                      "tracing::__macro_support::__is_enabled",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.deref (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "tracing_core::metadata::Metadata"
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "tracing_core::callsite::Callsite",
                                                                                                              Ty.path
                                                                                                                "tracing_core::callsite::DefaultCallsite",
                                                                                                              [],
                                                                                                              [],
                                                                                                              "metadata",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    get_constant (|
                                                                                                                      "p3_fri::two_adic_pcs::open::__CALLSITE'1",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "tracing_core::callsite::DefaultCallsite"
                                                                                                                        ]
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        interest
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)))
                                                                                              |)
                                                                                            |)) in
                                                                                        let _ :=
                                                                                          is_constant_or_break_match (|
                                                                                            M.read (|
                                                                                              γ
                                                                                            |),
                                                                                            Value.Bool
                                                                                              true
                                                                                          |) in
                                                                                        let~ meta :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "&")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "tracing_core::metadata::Metadata"
                                                                                                  ]
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "tracing_core::metadata::Metadata"
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "tracing_core::callsite::Callsite",
                                                                                                Ty.path
                                                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                                                [],
                                                                                                [],
                                                                                                "metadata",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      get_constant (|
                                                                                                        "p3_fri::two_adic_pcs::open::__CALLSITE'1",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                                                          ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.path
                                                                                              "tracing::span::Span",
                                                                                            M.get_associated_function (|
                                                                                              Ty.path
                                                                                                "tracing::span::Span",
                                                                                              "new",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.read (|
                                                                                                    meta
                                                                                                  |)
                                                                                                |)
                                                                                              |);
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "tracing_core::field::ValueSet",
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.path
                                                                                                            "tracing_core::field::FieldSet",
                                                                                                          "value_set",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "array")
                                                                                                              [
                                                                                                                Value.Integer
                                                                                                                  IntegerKind.Usize
                                                                                                                  0
                                                                                                              ]
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "tracing_core::field::Field"
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::option::Option")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.dyn
                                                                                                                              [
                                                                                                                                ("tracing_core::field::Value::Trait",
                                                                                                                                  [])
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::field::FieldSet"
                                                                                                                  ],
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.path
                                                                                                                    "tracing_core::metadata::Metadata",
                                                                                                                  "fields",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        meta
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.borrow (|
                                                                                                            Pointer.Kind.Ref,
                                                                                                            M.deref (|
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.alloc (|
                                                                                                                  Value.Array
                                                                                                                    []
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let~ span :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "tracing::span::Span"
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "tracing::span::Span",
                                                                                              M.get_function (|
                                                                                                "tracing::__macro_support::__disabled_span",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "tracing_core::metadata::Metadata"
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "tracing_core::callsite::Callsite",
                                                                                                        Ty.path
                                                                                                          "tracing_core::callsite::DefaultCallsite",
                                                                                                        [],
                                                                                                        [],
                                                                                                        "metadata",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              get_constant (|
                                                                                                                "p3_fri::two_adic_pcs::open::__CALLSITE'1",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                                                                  ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |) in
                                                                                        let~ _ :
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "*")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ] :=
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |) in
                                                                                        span))
                                                                                  ]
                                                                                |)
                                                                              |);
                                                                              M.closure
                                                                                (fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    match γ with
                                                                                    | [ α0 ] =>
                                                                                      ltac:(M.monadic
                                                                                        (M.match_operator (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.function
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    []
                                                                                                ]
                                                                                                (Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ])
                                                                                            ],
                                                                                          M.alloc (|
                                                                                            α0
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ],
                                                                                                  M.get_trait_method (|
                                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                                    Ty.associated_unknown,
                                                                                                    [],
                                                                                                    [],
                                                                                                    "collect",
                                                                                                    [],
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ]
                                                                                                  |),
                                                                                                  [
                                                                                                    M.call_closure (|
                                                                                                      Ty.associated_unknown,
                                                                                                      M.get_trait_method (|
                                                                                                        "p3_matrix::Matrix",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                                          []
                                                                                                          [
                                                                                                            Val;
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                        [],
                                                                                                        [
                                                                                                          Val
                                                                                                        ],
                                                                                                        "rowwise_packed_dot_product",
                                                                                                        [],
                                                                                                        [
                                                                                                          Challenge
                                                                                                        ]
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.read (|
                                                                                                              mat
                                                                                                            |)
                                                                                                          |)
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.call_closure (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "slice")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.associated_in_trait
                                                                                                                        "p3_field::field::ExtensionField"
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ]
                                                                                                                        Challenge
                                                                                                                        "ExtensionPacking"
                                                                                                                    ]
                                                                                                                ],
                                                                                                              M.get_trait_method (|
                                                                                                                "core::ops::deref::Deref",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_field::field::ExtensionField"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                      Challenge
                                                                                                                      "ExtensionPacking";
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ],
                                                                                                                [],
                                                                                                                [],
                                                                                                                "deref",
                                                                                                                [],
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.Ref,
                                                                                                                  M.deref (|
                                                                                                                    M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      packed_alpha_powers
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                    | _ =>
                                                                                      M.impossible
                                                                                        "wrong number of arguments"
                                                                                    end))
                                                                            ]
                                                                          |)
                                                                        |) in
                                                                      M.use
                                                                        (M.match_operator (|
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ],
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::iter::adapters::zip::Zip")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [ Challenge ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Challenge;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::collect::IntoIterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::iter::adapters::zip::Zip")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "into_iter",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::iter::adapters::zip::Zip")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Challenge;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      []
                                                                                      [ Challenge ],
                                                                                    [],
                                                                                    [],
                                                                                    "zip",
                                                                                    [],
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [ Challenge
                                                                                        ],
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ],
                                                                                        "iter",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "&")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "slice")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ],
                                                                                                [],
                                                                                                [],
                                                                                                "deref",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.Ref,
                                                                                                  M.deref (|
                                                                                                    M.read (|
                                                                                                      points_for_mat
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.read (|
                                                                                      openings_for_mat
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |),
                                                                          [
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let iter :=
                                                                                  M.copy (| γ |) in
                                                                                M.loop (|
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [ Ty.tuple [] ],
                                                                                  ltac:(M.monadic
                                                                                    (let~ _ :
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              []
                                                                                          ] :=
                                                                                      M.match_operator (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              []
                                                                                          ],
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::option::Option")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge;
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "core::iter::traits::iterator::Iterator",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::iter::adapters::zip::Zip")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ]
                                                                                                ],
                                                                                              [],
                                                                                              [],
                                                                                              "next",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.MutRef,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.MutRef,
                                                                                                    iter
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    _ :=
                                                                                                M.is_struct_tuple (|
                                                                                                  γ,
                                                                                                  "core::option::Option::None"
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                M.never_to_any (|
                                                                                                  M.read (|
                                                                                                    M.break (||)
                                                                                                  |)
                                                                                                |)
                                                                                              |)));
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::option::Option::Some",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    γ1_0 :=
                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                  γ0_0,
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    γ1_1 :=
                                                                                                M.SubPointer.get_tuple_field (|
                                                                                                  γ0_0,
                                                                                                  1
                                                                                                |) in
                                                                                              let
                                                                                                    γ1_0 :=
                                                                                                M.read (|
                                                                                                  γ1_0
                                                                                                |) in
                                                                                              let
                                                                                                    point :=
                                                                                                M.copy (|
                                                                                                  γ1_0
                                                                                                |) in
                                                                                              let
                                                                                                    openings :=
                                                                                                M.copy (|
                                                                                                  γ1_1
                                                                                                |) in
                                                                                              let~
                                                                                                    alpha_pow_offset :
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "*")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ] :=
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    Challenge,
                                                                                                    M.get_trait_method (|
                                                                                                      "p3_field::field::PrimeCharacteristicRing",
                                                                                                      Challenge,
                                                                                                      [],
                                                                                                      [],
                                                                                                      "exp_u64",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        alpha
                                                                                                      |);
                                                                                                      M.cast
                                                                                                        (Ty.path
                                                                                                          "u64")
                                                                                                        (M.read (|
                                                                                                          M.SubPointer.get_array_field (|
                                                                                                            num_reduced,
                                                                                                            M.read (|
                                                                                                              log_height
                                                                                                            |)
                                                                                                          |)
                                                                                                        |))
                                                                                                    ]
                                                                                                  |)
                                                                                                |) in
                                                                                              let~
                                                                                                    reduced_openings :
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "*")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ] :=
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    Challenge,
                                                                                                    M.get_function (|
                                                                                                      "p3_field::helpers::dot_product",
                                                                                                      [],
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::iter::adapters::copied::Copied")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::iter::adapters::copied::Copied")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::iter::adapters::copied::Copied")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.get_trait_method (|
                                                                                                          "core::iter::traits::iterator::Iterator",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::slice::iter::Iter")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge
                                                                                                            ],
                                                                                                          [],
                                                                                                          [],
                                                                                                          "copied",
                                                                                                          [],
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ],
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ],
                                                                                                              "iter",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::deref::Deref",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ],
                                                                                                                      [],
                                                                                                                      [],
                                                                                                                      "deref",
                                                                                                                      [],
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        alpha_powers
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::iter::adapters::copied::Copied")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.get_trait_method (|
                                                                                                          "core::iter::traits::iterator::Iterator",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::slice::iter::Iter")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge
                                                                                                            ],
                                                                                                          [],
                                                                                                          [],
                                                                                                          "copied",
                                                                                                          [],
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ],
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ],
                                                                                                              "iter",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::deref::Deref",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ],
                                                                                                                      [],
                                                                                                                      [],
                                                                                                                      "deref",
                                                                                                                      [],
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.deref (|
                                                                                                                          M.read (|
                                                                                                                            openings
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |) in
                                                                                              let~
                                                                                                    _ :
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "*")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        []
                                                                                                    ] :=
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    Ty.tuple
                                                                                                      [],
                                                                                                    M.get_trait_method (|
                                                                                                      "core::iter::traits::iterator::Iterator",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::iter::adapters::zip::Zip")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::iter::adapters::zip::Zip")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::IterMut")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::slice::iter::Iter")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge
                                                                                                            ]
                                                                                                        ],
                                                                                                      [],
                                                                                                      [],
                                                                                                      "for_each",
                                                                                                      [],
                                                                                                      [
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&mut")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge
                                                                                                                          ]
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                          (Ty.tuple
                                                                                                            [])
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::iter::adapters::zip::Zip")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::iter::adapters::zip::Zip")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::IterMut")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.get_trait_method (|
                                                                                                          "core::iter::traits::iterator::Iterator",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::iter::adapters::zip::Zip")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::IterMut")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ]
                                                                                                            ],
                                                                                                          [],
                                                                                                          [],
                                                                                                          "zip",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::iter::adapters::zip::Zip")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::IterMut")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "core::iter::traits::iterator::Iterator",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge
                                                                                                                ],
                                                                                                              [],
                                                                                                              [],
                                                                                                              "zip",
                                                                                                              [],
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::IterMut")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "p3_maybe_rayon::serial::IntoParallelRefIterator",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "par_iter",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    mat_compressed
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |);
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::IterMut")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "p3_maybe_rayon::serial::IntoParallelRefMutIterator",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  [],
                                                                                                                  "par_iter_mut",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.MutRef,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        reduced_opening_for_log_height
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |);
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::slice::iter::Iter")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "p3_maybe_rayon::serial::IntoParallelRefIterator",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              [],
                                                                                                              [],
                                                                                                              "par_iter",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    M.get_associated_function (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::option::Option")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                      "unwrap",
                                                                                                                      [],
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "core::option::Option")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "&")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ]
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_util::linear_map::LinearMap")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          "get",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            inv_denoms
                                                                                                                          |);
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                point
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              ltac:(M.monadic
                                                                                                                (M.match_operator (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "*")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.function
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "&")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Challenge
                                                                                                                                        ];
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "&mut")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Challenge
                                                                                                                                        ]
                                                                                                                                    ];
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "&")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge
                                                                                                                                    ]
                                                                                                                                ]
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                        (Ty.tuple
                                                                                                                          [])
                                                                                                                    ],
                                                                                                                  M.alloc (|
                                                                                                                    α0
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        (let
                                                                                                                              γ0_0 :=
                                                                                                                          M.SubPointer.get_tuple_field (|
                                                                                                                            γ,
                                                                                                                            0
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ0_1 :=
                                                                                                                          M.SubPointer.get_tuple_field (|
                                                                                                                            γ,
                                                                                                                            1
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ1_0 :=
                                                                                                                          M.SubPointer.get_tuple_field (|
                                                                                                                            γ0_0,
                                                                                                                            0
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ1_1 :=
                                                                                                                          M.SubPointer.get_tuple_field (|
                                                                                                                            γ0_0,
                                                                                                                            1
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ1_0 :=
                                                                                                                          M.read (|
                                                                                                                            γ1_0
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              reduced_row :=
                                                                                                                          M.copy (|
                                                                                                                            γ1_0
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              ro :=
                                                                                                                          M.copy (|
                                                                                                                            γ1_1
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              γ0_1 :=
                                                                                                                          M.read (|
                                                                                                                            γ0_1
                                                                                                                          |) in
                                                                                                                        let
                                                                                                                              inv_denom :=
                                                                                                                          M.copy (|
                                                                                                                            γ0_1
                                                                                                                          |) in
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.tuple
                                                                                                                            [],
                                                                                                                          M.get_trait_method (|
                                                                                                                            "core::ops::arith::AddAssign",
                                                                                                                            Challenge,
                                                                                                                            [],
                                                                                                                            [
                                                                                                                              Challenge
                                                                                                                            ],
                                                                                                                            "add_assign",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                              M.deref (|
                                                                                                                                M.read (|
                                                                                                                                  ro
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |);
                                                                                                                            M.call_closure (|
                                                                                                                              Challenge,
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::ops::arith::Mul",
                                                                                                                                Challenge,
                                                                                                                                [],
                                                                                                                                [
                                                                                                                                  Challenge
                                                                                                                                ],
                                                                                                                                "mul",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  Challenge,
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::ops::arith::Mul",
                                                                                                                                    Challenge,
                                                                                                                                    [],
                                                                                                                                    [
                                                                                                                                      Challenge
                                                                                                                                    ],
                                                                                                                                    "mul",
                                                                                                                                    [],
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    M.read (|
                                                                                                                                      alpha_pow_offset
                                                                                                                                    |);
                                                                                                                                    M.call_closure (|
                                                                                                                                      Challenge,
                                                                                                                                      M.get_trait_method (|
                                                                                                                                        "core::ops::arith::Sub",
                                                                                                                                        Challenge,
                                                                                                                                        [],
                                                                                                                                        [
                                                                                                                                          Challenge
                                                                                                                                        ],
                                                                                                                                        "sub",
                                                                                                                                        [],
                                                                                                                                        []
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        M.read (|
                                                                                                                                          reduced_openings
                                                                                                                                        |);
                                                                                                                                        M.read (|
                                                                                                                                          reduced_row
                                                                                                                                        |)
                                                                                                                                      ]
                                                                                                                                    |)
                                                                                                                                  ]
                                                                                                                                |);
                                                                                                                                M.read (|
                                                                                                                                  inv_denom
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)))
                                                                                                                  ]
                                                                                                                |)))
                                                                                                            | _ =>
                                                                                                              M.impossible
                                                                                                                "wrong number of arguments"
                                                                                                            end))
                                                                                                    ]
                                                                                                  |)
                                                                                                |) in
                                                                                              let~
                                                                                                    _ :
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "*")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        []
                                                                                                    ] :=
                                                                                                M.alloc (|
                                                                                                  let
                                                                                                        β :=
                                                                                                    M.SubPointer.get_array_field (|
                                                                                                      num_reduced,
                                                                                                      M.read (|
                                                                                                        log_height
                                                                                                      |)
                                                                                                    |) in
                                                                                                  M.write (|
                                                                                                    β,
                                                                                                    M.call_closure (|
                                                                                                      Ty.path
                                                                                                        "usize",
                                                                                                      BinOp.Wrap.add,
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          β
                                                                                                        |);
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "usize",
                                                                                                          M.get_trait_method (|
                                                                                                            "p3_matrix::Matrix",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                              []
                                                                                                              [
                                                                                                                Val;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "slice")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [
                                                                                                              Val
                                                                                                            ],
                                                                                                            "width",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  mat
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                Value.Tuple
                                                                                                  []
                                                                                              |)))
                                                                                        ]
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |)))
                                                                                |)))
                                                                          ]
                                                                        |))))
                                                                ]
                                                              |) in
                                                            M.alloc (| Value.Tuple [] |)))
                                                        |)))
                                                  ]
                                                |))))
                                        ]
                                      |) in
                                    M.alloc (| Value.Tuple [] |)))
                                |)))
                          ]
                        |)) in
                    let~ fri_input :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ Challenge; Ty.path "alloc::alloc::Global" ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ Challenge; Ty.path "alloc::alloc::Global" ];
                              Ty.path "alloc::alloc::Global"
                            ],
                          M.get_trait_method (|
                            "itertools::Itertools",
                            Ty.apply
                              (Ty.path "core::iter::adapters::flatten::Flatten")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::rev::Rev")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::array::iter::IntoIter")
                                      [ Value.Integer IntegerKind.Usize 32 ]
                                      [
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                  ]
                              ],
                            [],
                            [],
                            "collect_vec",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::flatten::Flatten")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::rev::Rev")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::array::iter::IntoIter")
                                        [ Value.Integer IntegerKind.Usize 32 ]
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::rev::Rev")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::array::iter::IntoIter")
                                      [ Value.Integer IntegerKind.Usize 32 ]
                                      [
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ]
                                  ],
                                [],
                                [],
                                "flatten",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::rev::Rev")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::array::iter::IntoIter")
                                        [ Value.Integer IntegerKind.Usize 32 ]
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::array::iter::IntoIter")
                                      [ Value.Integer IntegerKind.Usize 32 ]
                                      [
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [ Challenge; Ty.path "alloc::alloc::Global" ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "rev",
                                    [],
                                    []
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::array::iter::IntoIter")
                                        [ Value.Integer IntegerKind.Usize 32 ]
                                        [
                                          Ty.apply
                                            (Ty.path "core::option::Option")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ Challenge; Ty.path "alloc::alloc::Global" ]
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::iter::traits::collect::IntoIterator",
                                        Ty.apply
                                          (Ty.path "array")
                                          [ Value.Integer IntegerKind.Usize 32 ]
                                          [
                                            Ty.apply
                                              (Ty.path "core::option::Option")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ Challenge; Ty.path "alloc::alloc::Global" ]
                                              ]
                                          ],
                                        [],
                                        [],
                                        "into_iter",
                                        [],
                                        []
                                      |),
                                      [ M.read (| reduced_openings |) ]
                                    |)
                                  ]
                                |)
                              ]
                            |)
                          ]
                        |)
                      |) in
                    let~ g :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                      []
                                      [ Val; InputMmcs ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.associated_in_trait
                                  "p3_commit::mmcs::Mmcs"
                                  []
                                  [ Val ]
                                  InputMmcs
                                  "Error"
                              ]
                          ] :=
                      M.alloc (|
                        Value.StructTuple
                          "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig"
                          [ Value.StructTuple "core::marker::PhantomData" [] ]
                      |) in
                    let~ fri_proof :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "p3_fri::proof::FriProof")
                              []
                              [
                                Challenge;
                                FriMmcs;
                                Val;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                      []
                                      [ Val; InputMmcs ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "p3_fri::proof::FriProof")
                            []
                            [
                              Challenge;
                              FriMmcs;
                              Val;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                    []
                                    [ Val; InputMmcs ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          M.get_function (|
                            "p3_fri::prover::prove",
                            [],
                            [
                              Ty.apply
                                (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                        []
                                        [ Val; InputMmcs ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Val ]
                                    InputMmcs
                                    "Error"
                                ];
                              Val;
                              Challenge;
                              FriMmcs;
                              Challenger;
                              Ty.function
                                [ Ty.tuple [ Ty.path "usize" ] ]
                                (Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                      []
                                      [ Val; InputMmcs ];
                                    Ty.path "alloc::alloc::Global"
                                  ])
                            ]
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (| M.borrow (| Pointer.Kind.Ref, g |) |)
                            |);
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                    "fri"
                                  |)
                                |)
                              |)
                            |);
                            M.read (| fri_input |);
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (| M.read (| challenger |) |)
                            |);
                            M.closure
                              (fun γ =>
                                ltac:(M.monadic
                                  match γ with
                                  | [ α0 ] =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.apply
                                          (Ty.path "*")
                                          []
                                          [
                                            Ty.function
                                              [ Ty.tuple [ Ty.path "usize" ] ]
                                              (Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                                    []
                                                    [ Val; InputMmcs ];
                                                  Ty.path "alloc::alloc::Global"
                                                ])
                                          ],
                                        M.alloc (| α0 |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let index := M.copy (| γ |) in
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                                      []
                                                      [ Val; InputMmcs ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::mmcs::Mmcs"
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    InputMmcs
                                                                    "ProverData"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ];
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_commit::mmcs::Mmcs"
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            InputMmcs
                                                                            "ProverData"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Challenge;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.apply
                                                          (Ty.path
                                                            "p3_fri::two_adic_pcs::BatchOpening")
                                                          []
                                                          [ Val; InputMmcs ])
                                                    ],
                                                  [],
                                                  [],
                                                  "collect",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_fri::two_adic_pcs::BatchOpening")
                                                          []
                                                          [ Val; InputMmcs ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::map::Map")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::mmcs::Mmcs"
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      InputMmcs
                                                                      "ProverData"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::mmcs::Mmcs"
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              InputMmcs
                                                                              "ProverData"
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path
                                                              "p3_fri::two_adic_pcs::BatchOpening")
                                                            []
                                                            [ Val; InputMmcs ])
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_commit::mmcs::Mmcs"
                                                                    []
                                                                    [
                                                                      Val;
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_matrix::dense::DenseMatrix")
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    InputMmcs
                                                                    "ProverData"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ],
                                                      [],
                                                      [],
                                                      "map",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_fri::two_adic_pcs::BatchOpening")
                                                          []
                                                          [ Val; InputMmcs ];
                                                        Ty.function
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.associated_in_trait
                                                                              "p3_commit::mmcs::Mmcs"
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_matrix::dense::DenseMatrix")
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                              InputMmcs
                                                                              "ProverData"
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Challenge;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                          (Ty.apply
                                                            (Ty.path
                                                              "p3_fri::two_adic_pcs::BatchOpening")
                                                            []
                                                            [ Val; InputMmcs ])
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.associated_in_trait
                                                                      "p3_commit::mmcs::Mmcs"
                                                                      []
                                                                      [
                                                                        Val;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_matrix::dense::DenseMatrix")
                                                                          []
                                                                          [
                                                                            Val;
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Val;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      InputMmcs
                                                                      "ProverData"
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path "slice")
                                                            []
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_commit::mmcs::Mmcs"
                                                                        []
                                                                        [
                                                                          Val;
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_matrix::dense::DenseMatrix")
                                                                            []
                                                                            [
                                                                              Val;
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ]
                                                                        ]
                                                                        InputMmcs
                                                                        "ProverData"
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Challenge;
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ],
                                                          "iter",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "slice")
                                                                      []
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                  []
                                                                                  [
                                                                                    Val;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                                  InputMmcs
                                                                                  "ProverData"
                                                                              ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::ops::deref::Deref",
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.associated_in_trait
                                                                                "p3_commit::mmcs::Mmcs"
                                                                                []
                                                                                [
                                                                                  Val;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_matrix::dense::DenseMatrix")
                                                                                    []
                                                                                    [
                                                                                      Val;
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                                InputMmcs
                                                                                "ProverData"
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "deref",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    rounds
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |);
                                                      M.closure
                                                        (fun γ =>
                                                          ltac:(M.monadic
                                                            match γ with
                                                            | [ α0 ] =>
                                                              ltac:(M.monadic
                                                                (M.match_operator (|
                                                                  Ty.apply
                                                                    (Ty.path "*")
                                                                    []
                                                                    [
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_matrix::dense::DenseMatrix")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Val;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            InputMmcs
                                                                                            "ProverData"
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Challenge;
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ]
                                                                        (Ty.apply
                                                                          (Ty.path
                                                                            "p3_fri::two_adic_pcs::BatchOpening")
                                                                          []
                                                                          [ Val; InputMmcs ])
                                                                    ],
                                                                  M.alloc (| α0 |),
                                                                  [
                                                                    fun γ =>
                                                                      ltac:(M.monadic
                                                                        (let γ := M.read (| γ |) in
                                                                        let γ1_0 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ,
                                                                            0
                                                                          |) in
                                                                        let γ1_1 :=
                                                                          M.SubPointer.get_tuple_field (|
                                                                            γ,
                                                                            1
                                                                          |) in
                                                                        let data :=
                                                                          M.alloc (| γ1_0 |) in
                                                                        M.read (|
                                                                          let~ log_max_height :
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.path "usize"
                                                                                ] :=
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                Ty.path "usize",
                                                                                M.get_function (|
                                                                                  "p3_util::log2_strict_usize",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    Ty.path "usize",
                                                                                    M.get_trait_method (|
                                                                                      "p3_commit::mmcs::Mmcs",
                                                                                      InputMmcs,
                                                                                      [],
                                                                                      [ Val ],
                                                                                      "get_max_height",
                                                                                      [],
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_matrix::dense::DenseMatrix")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Val;
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ]
                                                                                      ]
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                          M.deref (|
                                                                                            M.read (|
                                                                                              self
                                                                                            |)
                                                                                          |),
                                                                                          "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                          "mmcs"
                                                                                        |)
                                                                                      |);
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            M.deref (|
                                                                                              M.read (|
                                                                                                data
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |) in
                                                                          let~ bits_reduced :
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.path "usize"
                                                                                ] :=
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                Ty.path "usize",
                                                                                BinOp.Wrap.sub,
                                                                                [
                                                                                  M.read (|
                                                                                    log_global_max_height
                                                                                  |);
                                                                                  M.read (|
                                                                                    log_max_height
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |) in
                                                                          let~ reduced_index :
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.path "usize"
                                                                                ] :=
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                Ty.path "usize",
                                                                                BinOp.Wrap.shr,
                                                                                [
                                                                                  M.read (|
                                                                                    index
                                                                                  |);
                                                                                  M.read (|
                                                                                    bits_reduced
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |) in
                                                                          M.match_operator (|
                                                                            Ty.apply
                                                                              (Ty.path "*")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_fri::two_adic_pcs::BatchOpening")
                                                                                  []
                                                                                  [ Val; InputMmcs ]
                                                                              ],
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ];
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ];
                                                                                    Ty.associated_in_trait
                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                      []
                                                                                      [ Val ]
                                                                                      InputMmcs
                                                                                      "Proof"
                                                                                  ],
                                                                                M.get_trait_method (|
                                                                                  "p3_commit::mmcs::Mmcs",
                                                                                  InputMmcs,
                                                                                  [],
                                                                                  [ Val ],
                                                                                  "open_batch",
                                                                                  [],
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_matrix::dense::DenseMatrix")
                                                                                      []
                                                                                      [
                                                                                        Val;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Val;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ]
                                                                                  ]
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          self
                                                                                        |)
                                                                                      |),
                                                                                      "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                      "mmcs"
                                                                                    |)
                                                                                  |);
                                                                                  M.read (|
                                                                                    reduced_index
                                                                                  |);
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.deref (|
                                                                                          M.read (|
                                                                                            data
                                                                                          |)
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |),
                                                                            [
                                                                              fun γ =>
                                                                                ltac:(M.monadic
                                                                                  (let γ0_0 :=
                                                                                    M.SubPointer.get_tuple_field (|
                                                                                      γ,
                                                                                      0
                                                                                    |) in
                                                                                  let γ0_1 :=
                                                                                    M.SubPointer.get_tuple_field (|
                                                                                      γ,
                                                                                      1
                                                                                    |) in
                                                                                  let
                                                                                        opened_values :=
                                                                                    M.copy (|
                                                                                      γ0_0
                                                                                    |) in
                                                                                  let
                                                                                        opening_proof :=
                                                                                    M.copy (|
                                                                                      γ0_1
                                                                                    |) in
                                                                                  M.alloc (|
                                                                                    Value.StructRecord
                                                                                      "p3_fri::two_adic_pcs::BatchOpening"
                                                                                      [
                                                                                        ("opened_values",
                                                                                          M.read (|
                                                                                            opened_values
                                                                                          |));
                                                                                        ("opening_proof",
                                                                                          M.read (|
                                                                                            opening_proof
                                                                                          |))
                                                                                      ]
                                                                                  |)))
                                                                            ]
                                                                          |)
                                                                        |)))
                                                                  ]
                                                                |)))
                                                            | _ =>
                                                              M.impossible
                                                                "wrong number of arguments"
                                                            end))
                                                    ]
                                                  |)
                                                ]
                                              |)))
                                        ]
                                      |)))
                                  | _ => M.impossible "wrong number of arguments"
                                  end))
                          ]
                        |)
                      |) in
                    M.alloc (|
                      Value.Tuple [ M.read (| all_opened_values |); M.read (| fri_proof |) ]
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn verify(
            &self,
            // For each round:
            rounds: Vec<(
                Self::Commitment,
                // for each matrix:
                Vec<(
                    // its domain,
                    Self::Domain,
                    // for each point:
                    Vec<(
                        // the point,
                        Challenge,
                        // values at the point
                        Vec<Challenge>,
                    )>,
                )>,
            )>,
            proof: &Self::Proof,
            challenger: &mut Challenger,
        ) -> Result<(), Self::Error> {
            // Write evaluations to challenger
            for (_, round) in &rounds {
                for (_, mat) in round {
                    for (_, point) in mat {
                        point
                            .iter()
                            .for_each(|&opening| challenger.observe_algebra_element(opening));
                    }
                }
            }
    
            // Batch combination challenge
            let alpha: Challenge = challenger.sample_algebra_element();
    
            let log_global_max_height =
                proof.commit_phase_commits.len() + self.fri.log_blowup + self.fri.log_final_poly_len;
    
            let g: TwoAdicFriGenericConfigForMmcs<Val, InputMmcs> =
                TwoAdicFriGenericConfig(PhantomData);
    
            verifier::verify(&g, &self.fri, proof, challenger, |index, input_proof| {
                // TODO: separate this out into functions
    
                // log_height -> (alpha_pow, reduced_opening)
                let mut reduced_openings = BTreeMap::<usize, (Challenge, Challenge)>::new();
    
                for (batch_opening, (batch_commit, mats)) in
                    zip_eq(input_proof, &rounds, FriError::InvalidProofShape)?
                {
                    let batch_heights = mats
                        .iter()
                        .map(|(domain, _)| domain.size() << self.fri.log_blowup)
                        .collect_vec();
                    let batch_dims = batch_heights
                        .iter()
                        // TODO: MMCS doesn't really need width; we put 0 for now.
                        .map(|&height| Dimensions { width: 0, height })
                        .collect_vec();
    
                    if let Some(batch_max_height) = batch_heights.iter().max() {
                        let log_batch_max_height = log2_strict_usize( *batch_max_height);
                        let bits_reduced = log_global_max_height - log_batch_max_height;
                        let reduced_index = index >> bits_reduced;
    
                        self.mmcs.verify_batch(
                            batch_commit,
                            &batch_dims,
                            reduced_index,
                            &batch_opening.opened_values,
                            &batch_opening.opening_proof,
                        )
                    } else {
                        // Empty batch?
                        self.mmcs.verify_batch(
                            batch_commit,
                            &[],
                            0,
                            &batch_opening.opened_values,
                            &batch_opening.opening_proof,
                        )
                    }
                    .map_err(FriError::InputError)?;
    
                    for (mat_opening, (mat_domain, mat_points_and_values)) in zip_eq(
                        &batch_opening.opened_values,
                        mats,
                        FriError::InvalidProofShape,
                    )? {
                        let log_height = log2_strict_usize(mat_domain.size()) + self.fri.log_blowup;
    
                        let bits_reduced = log_global_max_height - log_height;
                        let rev_reduced_index = reverse_bits_len(index >> bits_reduced, log_height);
    
                        // todo: this can be nicer with domain methods?
    
                        let x = Val::GENERATOR
                            * Val::two_adic_generator(log_height).exp_u64(rev_reduced_index as u64);
    
                        let (alpha_pow, ro) = reduced_openings
                            .entry(log_height)
                            .or_insert((Challenge::ONE, Challenge::ZERO));
    
                        for (z, ps_at_z) in mat_points_and_values {
                            for (&p_at_x, &p_at_z) in
                                zip_eq(mat_opening, ps_at_z, FriError::InvalidProofShape)?
                            {
                                let quotient = (-p_at_z + p_at_x) / (-*z + x);
                                *ro += *alpha_pow * quotient;
                                *alpha_pow *= alpha;
                            }
                        }
                    }
                }
    
                // `reduced_openings` would have a log_height = log_blowup entry only if there was a
                // trace matrix of height 1. In this case the reduced opening can be skipped as it will
                // not be checked against any commit phase commit.
                if let Some((_alpha_pow, ro)) = reduced_openings.remove(&self.fri.log_blowup) {
                    assert!(ro.is_zero());
                }
    
                // Return reduced openings descending by log_height.
                Ok(reduced_openings
                    .into_iter()
                    .rev()
                    .map(|(log_height, (_alpha_pow, ro))| (log_height, ro))
                    .collect())
            })?;
    
            Ok(())
        }
    *)
    Definition verify
        (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self Val Dft InputMmcs FriMmcs Challenge Challenger in
      match ε, τ, α with
      | [], [], [ self; rounds; proof; challenger ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let rounds := M.alloc (| rounds |) in
          let proof := M.alloc (| proof |) in
          let challenger := M.alloc (| challenger |) in
          M.catch_return
            (Ty.apply
              (Ty.path "core::result::Result")
              []
              [
                Ty.tuple [];
                Ty.associated_in_trait
                  "p3_commit::pcs::Pcs"
                  []
                  [ Challenge; Challenger ]
                  (Ty.apply
                    (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriPcs")
                    []
                    [ Val; Dft; InputMmcs; FriMmcs ])
                  "Error"
              ]) (|
            ltac:(M.monadic
              (M.read (|
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.use
                    (M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::slice::iter::Iter")
                            []
                            [
                              Ty.tuple
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Val ]
                                    InputMmcs
                                    "Commitment";
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "p3_field::coset::TwoAdicMultiplicativeCoset")
                                            []
                                            [ Val ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Challenge;
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ Challenge; Ty.path "alloc::alloc::Global" ]
                                                ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.tuple
                                      [
                                        Ty.associated_in_trait
                                          "p3_commit::mmcs::Mmcs"
                                          []
                                          [ Val ]
                                          InputMmcs
                                          "Commitment";
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path
                                                    "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                  []
                                                  [ Val ];
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Challenge;
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Challenge;
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, rounds |) ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let iter := M.copy (| γ |) in
                            M.loop (|
                              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                              ltac:(M.monadic
                                (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.tuple
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_commit::mmcs::Mmcs"
                                                      []
                                                      [ Val ]
                                                      InputMmcs
                                                      "Commitment";
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                              []
                                                              [ Val ];
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Challenge;
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Challenge;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        M.get_trait_method (|
                                          "core::iter::traits::iterator::Iterator",
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_commit::mmcs::Mmcs"
                                                    []
                                                    [ Val ]
                                                    InputMmcs
                                                    "Commitment";
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                            []
                                                            [ Val ];
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Challenge;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ],
                                          [],
                                          [],
                                          "next",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.MutRef,
                                            M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                          |)
                                        ]
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let _ :=
                                            M.is_struct_tuple (|
                                              γ,
                                              "core::option::Option::None"
                                            |) in
                                          M.alloc (|
                                            M.never_to_any (| M.read (| M.break (||) |) |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 :=
                                            M.SubPointer.get_struct_tuple_field (|
                                              γ,
                                              "core::option::Option::Some",
                                              0
                                            |) in
                                          let γ0_0 := M.read (| γ0_0 |) in
                                          let γ2_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                          let γ2_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                          let round := M.alloc (| γ2_1 |) in
                                          M.use
                                            (M.match_operator (|
                                              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::Iter")
                                                    []
                                                    [
                                                      Ty.tuple
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                            []
                                                            [ Val ];
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Challenge;
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Challenge;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                    ],
                                                  M.get_trait_method (|
                                                    "core::iter::traits::collect::IntoIterator",
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                  []
                                                                  [ Val ];
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Challenge;
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Challenge;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ],
                                                    [],
                                                    [],
                                                    "into_iter",
                                                    [],
                                                    []
                                                  |),
                                                  [ M.read (| round |) ]
                                                |)
                                              |),
                                              [
                                                fun γ =>
                                                  ltac:(M.monadic
                                                    (let iter := M.copy (| γ |) in
                                                    M.loop (|
                                                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                      ltac:(M.monadic
                                                        (let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.match_operator (|
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ],
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "core::option::Option")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                              []
                                                                              [ Val ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "alloc::vec::Vec")
                                                                                      []
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.path
                                                                                          "alloc::alloc::Global"
                                                                                      ]
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                            []
                                                                            [ Val ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "next",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.deref (|
                                                                      M.borrow (|
                                                                        Pointer.Kind.MutRef,
                                                                        iter
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |),
                                                            [
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let _ :=
                                                                    M.is_struct_tuple (|
                                                                      γ,
                                                                      "core::option::Option::None"
                                                                    |) in
                                                                  M.alloc (|
                                                                    M.never_to_any (|
                                                                      M.read (| M.break (||) |)
                                                                    |)
                                                                  |)));
                                                              fun γ =>
                                                                ltac:(M.monadic
                                                                  (let γ0_0 :=
                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                      γ,
                                                                      "core::option::Option::Some",
                                                                      0
                                                                    |) in
                                                                  let γ0_0 := M.read (| γ0_0 |) in
                                                                  let γ2_0 :=
                                                                    M.SubPointer.get_tuple_field (|
                                                                      γ0_0,
                                                                      0
                                                                    |) in
                                                                  let γ2_1 :=
                                                                    M.SubPointer.get_tuple_field (|
                                                                      γ0_0,
                                                                      1
                                                                    |) in
                                                                  let mat := M.alloc (| γ2_1 |) in
                                                                  M.use
                                                                    (M.match_operator (|
                                                                      Ty.apply
                                                                        (Ty.path "*")
                                                                        []
                                                                        [ Ty.tuple [] ],
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Challenge;
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Challenge;
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::collect::IntoIterator",
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Challenge;
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Challenge;
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ],
                                                                            [],
                                                                            [],
                                                                            "into_iter",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [ M.read (| mat |) ]
                                                                        |)
                                                                      |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let iter :=
                                                                              M.copy (| γ |) in
                                                                            M.loop (|
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.tuple [] ],
                                                                              ltac:(M.monadic
                                                                                (let~ _ :
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [ Ty.tuple []
                                                                                      ] :=
                                                                                  M.match_operator (|
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [ Ty.tuple []
                                                                                      ],
                                                                                    M.alloc (|
                                                                                      M.call_closure (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "&")
                                                                                              []
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ],
                                                                                        M.get_trait_method (|
                                                                                          "core::iter::traits::iterator::Iterator",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ],
                                                                                          [],
                                                                                          [],
                                                                                          "next",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.MutRef,
                                                                                            M.deref (|
                                                                                              M.borrow (|
                                                                                                Pointer.Kind.MutRef,
                                                                                                iter
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let _ :=
                                                                                            M.is_struct_tuple (|
                                                                                              γ,
                                                                                              "core::option::Option::None"
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            M.never_to_any (|
                                                                                              M.read (|
                                                                                                M.break (||)
                                                                                              |)
                                                                                            |)
                                                                                          |)));
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                              γ,
                                                                                              "core::option::Option::Some",
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                γ0_0 :=
                                                                                            M.read (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          let
                                                                                                γ2_0 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ0_0,
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                γ2_1 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ0_0,
                                                                                              1
                                                                                            |) in
                                                                                          let
                                                                                                point :=
                                                                                            M.alloc (|
                                                                                              γ2_1
                                                                                            |) in
                                                                                          let~ _ :
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "*")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    []
                                                                                                ] :=
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                Ty.tuple
                                                                                                  [],
                                                                                                M.get_trait_method (|
                                                                                                  "core::iter::traits::iterator::Iterator",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ],
                                                                                                  [],
                                                                                                  [],
                                                                                                  "for_each",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.function
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Challenge
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                      (Ty.tuple
                                                                                                        [])
                                                                                                  ]
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::slice::iter::Iter")
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ],
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "slice")
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge
                                                                                                        ],
                                                                                                      "iter",
                                                                                                      [],
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.borrow (|
                                                                                                        Pointer.Kind.Ref,
                                                                                                        M.deref (|
                                                                                                          M.call_closure (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "&")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "slice")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                              ],
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::deref::Deref",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ],
                                                                                                              [],
                                                                                                              [],
                                                                                                              "deref",
                                                                                                              [],
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.borrow (|
                                                                                                                Pointer.Kind.Ref,
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    point
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    ]
                                                                                                  |);
                                                                                                  M.closure
                                                                                                    (fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        match
                                                                                                          γ
                                                                                                        with
                                                                                                        | [
                                                                                                              α0
                                                                                                            ] =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.match_operator (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "*")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.function
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "&")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                    (Ty.tuple
                                                                                                                      [])
                                                                                                                ],
                                                                                                              M.alloc (|
                                                                                                                α0
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          γ :=
                                                                                                                      M.read (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    let
                                                                                                                          opening :=
                                                                                                                      M.copy (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.tuple
                                                                                                                        [],
                                                                                                                      M.get_trait_method (|
                                                                                                                        "p3_challenger::FieldChallenger",
                                                                                                                        Challenger,
                                                                                                                        [],
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ],
                                                                                                                        "observe_algebra_element",
                                                                                                                        [],
                                                                                                                        [
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              challenger
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          opening
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)))
                                                                                                              ]
                                                                                                            |)))
                                                                                                        | _ =>
                                                                                                          M.impossible
                                                                                                            "wrong number of arguments"
                                                                                                        end))
                                                                                                ]
                                                                                              |)
                                                                                            |) in
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |)))
                                                                                    ]
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Value.Tuple []
                                                                                |)))
                                                                            |)))
                                                                      ]
                                                                    |))))
                                                            ]
                                                          |) in
                                                        M.alloc (| Value.Tuple [] |)))
                                                    |)))
                                              ]
                                            |))))
                                    ]
                                  |) in
                                M.alloc (| Value.Tuple [] |)))
                            |)))
                      ]
                    |)) in
                let~ alpha : Ty.apply (Ty.path "*") [] [ Challenge ] :=
                  M.alloc (|
                    M.call_closure (|
                      Challenge,
                      M.get_trait_method (|
                        "p3_challenger::FieldChallenger",
                        Challenger,
                        [],
                        [ Val ],
                        "sample_algebra_element",
                        [],
                        [ Challenge ]
                      |),
                      [ M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| challenger |) |) |) ]
                    |)
                  |) in
                let~ log_global_max_height : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      BinOp.Wrap.add,
                      [
                        M.call_closure (|
                          Ty.path "usize",
                          BinOp.Wrap.add,
                          [
                            M.call_closure (|
                              Ty.path "usize",
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Challenge ]
                                      FriMmcs
                                      "Commitment";
                                    Ty.path "alloc::alloc::Global"
                                  ],
                                "len",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| proof |) |),
                                    "p3_fri::proof::FriProof",
                                    "commit_phase_commits"
                                  |)
                                |)
                              ]
                            |);
                            M.read (|
                              M.SubPointer.get_struct_record_field (|
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| self |) |),
                                  "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                  "fri"
                                |),
                                "p3_fri::config::FriConfig",
                                "log_blowup"
                              |)
                            |)
                          ]
                        |);
                        M.read (|
                          M.SubPointer.get_struct_record_field (|
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                              "fri"
                            |),
                            "p3_fri::config::FriConfig",
                            "log_final_poly_len"
                          |)
                        |)
                      ]
                    |)
                  |) in
                let~ g :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                  []
                                  [ Val; InputMmcs ];
                                Ty.path "alloc::alloc::Global"
                              ];
                            Ty.associated_in_trait
                              "p3_commit::mmcs::Mmcs"
                              []
                              [ Val ]
                              InputMmcs
                              "Error"
                          ]
                      ] :=
                  M.alloc (|
                    Value.StructTuple
                      "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig"
                      [ Value.StructTuple "core::marker::PhantomData" [] ]
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::ops::control_flow::ControlFlow")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.path "core::convert::Infallible";
                                Ty.apply
                                  (Ty.path "p3_fri::verifier::FriError")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Challenge ]
                                      FriMmcs
                                      "Error";
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Val ]
                                      InputMmcs
                                      "Error"
                                  ]
                              ];
                            Ty.tuple []
                          ],
                        M.get_trait_method (|
                          "core::ops::try_trait::Try",
                          Ty.apply
                            (Ty.path "core::result::Result")
                            []
                            [
                              Ty.tuple [];
                              Ty.apply
                                (Ty.path "p3_fri::verifier::FriError")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Challenge ]
                                    FriMmcs
                                    "Error";
                                  Ty.associated_in_trait
                                    "p3_commit::mmcs::Mmcs"
                                    []
                                    [ Val ]
                                    InputMmcs
                                    "Error"
                                ]
                            ],
                          [],
                          [],
                          "branch",
                          [],
                          []
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [];
                                Ty.apply
                                  (Ty.path "p3_fri::verifier::FriError")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Challenge ]
                                      FriMmcs
                                      "Error";
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Val ]
                                      InputMmcs
                                      "Error"
                                  ]
                              ],
                            M.get_function (|
                              "p3_fri::verifier::verify",
                              [],
                              [
                                Ty.apply
                                  (Ty.path "p3_fri::two_adic_pcs::TwoAdicFriGenericConfig")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                          []
                                          [ Val; InputMmcs ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.associated_in_trait
                                      "p3_commit::mmcs::Mmcs"
                                      []
                                      [ Val ]
                                      InputMmcs
                                      "Error"
                                  ];
                                Val;
                                Challenge;
                                FriMmcs;
                                Challenger;
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.path "usize";
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_fri::two_adic_pcs::BatchOpening")
                                                  []
                                                  [ Val; InputMmcs ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ]
                                  (Ty.apply
                                    (Ty.path "core::result::Result")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.tuple [ Ty.path "usize"; Challenge ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.apply
                                        (Ty.path "p3_fri::verifier::FriError")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_commit::mmcs::Mmcs"
                                            []
                                            [ Challenge ]
                                            FriMmcs
                                            "Error";
                                          Ty.associated_in_trait
                                            "p3_commit::mmcs::Mmcs"
                                            []
                                            [ Val ]
                                            InputMmcs
                                            "Error"
                                        ]
                                    ])
                              ]
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.borrow (| Pointer.Kind.Ref, g |) |)
                              |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.SubPointer.get_struct_record_field (|
                                      M.deref (| M.read (| self |) |),
                                      "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                      "fri"
                                    |)
                                  |)
                                |)
                              |);
                              M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| proof |) |) |);
                              M.borrow (|
                                Pointer.Kind.MutRef,
                                M.deref (| M.read (| challenger |) |)
                              |);
                              M.closure
                                (fun γ =>
                                  ltac:(M.monadic
                                    match γ with
                                    | [ α0; α1 ] =>
                                      ltac:(M.monadic
                                        (M.match_operator (|
                                          Ty.apply
                                            (Ty.path "*")
                                            []
                                            [
                                              Ty.function
                                                [
                                                  Ty.tuple
                                                    [
                                                      Ty.path "usize";
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_fri::two_adic_pcs::BatchOpening")
                                                                []
                                                                [ Val; InputMmcs ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                                (Ty.apply
                                                  (Ty.path "core::result::Result")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.tuple [ Ty.path "usize"; Challenge ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "p3_fri::verifier::FriError")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_commit::mmcs::Mmcs"
                                                          []
                                                          [ Challenge ]
                                                          FriMmcs
                                                          "Error";
                                                        Ty.associated_in_trait
                                                          "p3_commit::mmcs::Mmcs"
                                                          []
                                                          [ Val ]
                                                          InputMmcs
                                                          "Error"
                                                      ]
                                                  ])
                                            ],
                                          M.alloc (| α0 |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let index := M.copy (| γ |) in
                                                M.match_operator (|
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.path "usize";
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_fri::two_adic_pcs::BatchOpening")
                                                                        []
                                                                        [ Val; InputMmcs ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.tuple
                                                                  [ Ty.path "usize"; Challenge ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "p3_fri::verifier::FriError")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_commit::mmcs::Mmcs"
                                                                  []
                                                                  [ Challenge ]
                                                                  FriMmcs
                                                                  "Error";
                                                                Ty.associated_in_trait
                                                                  "p3_commit::mmcs::Mmcs"
                                                                  []
                                                                  [ Val ]
                                                                  InputMmcs
                                                                  "Error"
                                                              ]
                                                          ])
                                                    ],
                                                  M.alloc (| α1 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let input_proof := M.copy (| γ |) in
                                                        M.read (|
                                                          let~ reduced_openings :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "alloc::collections::btree::map::BTreeMap")
                                                                    []
                                                                    [
                                                                      Ty.path "usize";
                                                                      Ty.tuple
                                                                        [ Challenge; Challenge ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "alloc::collections::btree::map::BTreeMap")
                                                                  []
                                                                  [
                                                                    Ty.path "usize";
                                                                    Ty.tuple
                                                                      [ Challenge; Challenge ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ],
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "alloc::collections::btree::map::BTreeMap")
                                                                    []
                                                                    [
                                                                      Ty.path "usize";
                                                                      Ty.tuple
                                                                        [ Challenge; Challenge ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  "new",
                                                                  [],
                                                                  []
                                                                |),
                                                                []
                                                              |)
                                                            |) in
                                                          let~ _ :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [ Ty.tuple [] ] :=
                                                            M.use
                                                              (M.match_operator (|
                                                                Ty.apply
                                                                  (Ty.path "*")
                                                                  []
                                                                  [ Ty.tuple [] ],
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_util::zip_eq::ZipEq")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_fri::two_adic_pcs::BatchOpening")
                                                                              []
                                                                              [ Val; InputMmcs ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.associated_in_trait
                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                  []
                                                                                  [ Val ]
                                                                                  InputMmcs
                                                                                  "Commitment";
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::vec::Vec")
                                                                                  []
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                          []
                                                                                          [ Val ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "alloc::vec::Vec")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Challenge;
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Challenge;
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ];
                                                                                            Ty.path
                                                                                              "alloc::alloc::Global"
                                                                                          ]
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::iter::traits::collect::IntoIterator",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_util::zip_eq::ZipEq")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_fri::two_adic_pcs::BatchOpening")
                                                                                []
                                                                                [ Val; InputMmcs ]
                                                                            ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                    []
                                                                                    [ Val ]
                                                                                    InputMmcs
                                                                                    "Commitment";
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                            []
                                                                                            [ Val ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Challenge;
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge;
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "into_iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.read (|
                                                                        M.match_operator (|
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_fri::two_adic_pcs::BatchOpening")
                                                                                        []
                                                                                        [
                                                                                          Val;
                                                                                          InputMmcs
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::slice::iter::Iter")
                                                                                    []
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Commitment";
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Challenge;
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ],
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::ops::control_flow::ControlFlow")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "core::convert::Infallible";
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_fri::verifier::FriError")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ]
                                                                                            FriMmcs
                                                                                            "Error";
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Error"
                                                                                        ]
                                                                                    ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_fri::two_adic_pcs::BatchOpening")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              InputMmcs
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Commitment";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::ops::try_trait::Try",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_util::zip_eq::ZipEq")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_fri::two_adic_pcs::BatchOpening")
                                                                                              []
                                                                                              [
                                                                                                Val;
                                                                                                InputMmcs
                                                                                              ]
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Val
                                                                                                  ]
                                                                                                  InputMmcs
                                                                                                  "Commitment";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ];
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_fri::verifier::FriError")
                                                                                      []
                                                                                      [
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                          []
                                                                                          [
                                                                                            Challenge
                                                                                          ]
                                                                                          FriMmcs
                                                                                          "Error";
                                                                                        Ty.associated_in_trait
                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                          []
                                                                                          [ Val ]
                                                                                          InputMmcs
                                                                                          "Error"
                                                                                      ]
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "branch",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::result::Result")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_util::zip_eq::ZipEq")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_fri::two_adic_pcs::BatchOpening")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  InputMmcs
                                                                                                ]
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::slice::iter::Iter")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Commitment";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_fri::verifier::FriError")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ]
                                                                                            FriMmcs
                                                                                            "Error";
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Error"
                                                                                        ]
                                                                                    ],
                                                                                  M.get_function (|
                                                                                    "p3_util::zip_eq::zip_eq",
                                                                                    [],
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_fri::two_adic_pcs::BatchOpening")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  InputMmcs
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "p3_fri::two_adic_pcs::BatchOpening")
                                                                                            []
                                                                                            [
                                                                                              Val;
                                                                                              InputMmcs
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Commitment";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ];
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::slice::iter::Iter")
                                                                                        []
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.associated_in_trait
                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                []
                                                                                                [
                                                                                                  Val
                                                                                                ]
                                                                                                InputMmcs
                                                                                                "Commitment";
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ];
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            [
                                                                                                              Challenge;
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ]
                                                                                            ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_fri::verifier::FriError")
                                                                                        []
                                                                                        [
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [
                                                                                              Challenge
                                                                                            ]
                                                                                            FriMmcs
                                                                                            "Error";
                                                                                          Ty.associated_in_trait
                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                            []
                                                                                            [ Val ]
                                                                                            InputMmcs
                                                                                            "Error"
                                                                                        ]
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      input_proof
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      rounds
                                                                                    |);
                                                                                    Value.StructTuple
                                                                                      "p3_fri::verifier::FriError::InvalidProofShape"
                                                                                      []
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |),
                                                                          [
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let γ0_0 :=
                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                    γ,
                                                                                    "core::ops::control_flow::ControlFlow::Break",
                                                                                    0
                                                                                  |) in
                                                                                let residual :=
                                                                                  M.copy (|
                                                                                    γ0_0
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  M.never_to_any (|
                                                                                    M.read (|
                                                                                      M.return_ (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::result::Result")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "alloc::vec::Vec")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "usize";
                                                                                                      Challenge
                                                                                                    ];
                                                                                                  Ty.path
                                                                                                    "alloc::alloc::Global"
                                                                                                ];
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_fri::verifier::FriError")
                                                                                                []
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Challenge
                                                                                                    ]
                                                                                                    FriMmcs
                                                                                                    "Error";
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Error"
                                                                                                ]
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::try_trait::FromResidual",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::result::Result")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "usize";
                                                                                                        Challenge
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "p3_fri::verifier::FriError")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Challenge
                                                                                                      ]
                                                                                                      FriMmcs
                                                                                                      "Error";
                                                                                                    Ty.associated_in_trait
                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                      []
                                                                                                      [
                                                                                                        Val
                                                                                                      ]
                                                                                                      InputMmcs
                                                                                                      "Error"
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::result::Result")
                                                                                                []
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "core::convert::Infallible";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_fri::verifier::FriError")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge
                                                                                                        ]
                                                                                                        FriMmcs
                                                                                                        "Error";
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ]
                                                                                                        InputMmcs
                                                                                                        "Error"
                                                                                                    ]
                                                                                                ]
                                                                                            ],
                                                                                            "from_residual",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.read (|
                                                                                              residual
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  |)
                                                                                |)));
                                                                            fun γ =>
                                                                              ltac:(M.monadic
                                                                                (let γ0_0 :=
                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                    γ,
                                                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                                                    0
                                                                                  |) in
                                                                                let val :=
                                                                                  M.copy (|
                                                                                    γ0_0
                                                                                  |) in
                                                                                val))
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let iter := M.copy (| γ |) in
                                                                      M.loop (|
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [ Ty.tuple [] ],
                                                                        ltac:(M.monadic
                                                                          (let~ _ :
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.tuple [] ] :=
                                                                            M.match_operator (|
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [ Ty.tuple [] ],
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_fri::two_adic_pcs::BatchOpening")
                                                                                                []
                                                                                                [
                                                                                                  Val;
                                                                                                  InputMmcs
                                                                                                ]
                                                                                            ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.associated_in_trait
                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                    []
                                                                                                    [
                                                                                                      Val
                                                                                                    ]
                                                                                                    InputMmcs
                                                                                                    "Commitment";
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "alloc::vec::Vec")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "alloc::alloc::Global"
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_util::zip_eq::ZipEq")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_fri::two_adic_pcs::BatchOpening")
                                                                                              []
                                                                                              [
                                                                                                Val;
                                                                                                InputMmcs
                                                                                              ]
                                                                                          ];
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.associated_in_trait
                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                  []
                                                                                                  [
                                                                                                    Val
                                                                                                  ]
                                                                                                  InputMmcs
                                                                                                  "Commitment";
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "alloc::vec::Vec")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "alloc::alloc::Global"
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                      ],
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let _ :=
                                                                                      M.is_struct_tuple (|
                                                                                        γ,
                                                                                        "core::option::Option::None"
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      M.never_to_any (|
                                                                                        M.read (|
                                                                                          M.break (||)
                                                                                        |)
                                                                                      |)
                                                                                    |)));
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::option::Option::Some",
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        0
                                                                                      |) in
                                                                                    let γ1_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        1
                                                                                      |) in
                                                                                    let
                                                                                          batch_opening :=
                                                                                      M.copy (|
                                                                                        γ1_0
                                                                                      |) in
                                                                                    let γ1_1 :=
                                                                                      M.read (|
                                                                                        γ1_1
                                                                                      |) in
                                                                                    let γ3_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ1_1,
                                                                                        0
                                                                                      |) in
                                                                                    let γ3_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ1_1,
                                                                                        1
                                                                                      |) in
                                                                                    let
                                                                                          batch_commit :=
                                                                                      M.alloc (|
                                                                                        γ3_0
                                                                                      |) in
                                                                                    let mats :=
                                                                                      M.alloc (|
                                                                                        γ3_1
                                                                                      |) in
                                                                                    let~
                                                                                          batch_heights :
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "usize";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ] :=
                                                                                      M.alloc (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "itertools::Itertools",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::iter::adapters::map::Map")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.function
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ];
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                                  (Ty.path
                                                                                                    "usize")
                                                                                              ],
                                                                                            [],
                                                                                            [],
                                                                                            "collect_vec",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::iter::adapters::map::Map")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                    (Ty.path
                                                                                                      "usize")
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ],
                                                                                                [],
                                                                                                [],
                                                                                                "map",
                                                                                                [],
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize";
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                    (Ty.path
                                                                                                      "usize")
                                                                                                ]
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                              []
                                                                                                              [
                                                                                                                Val
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ]
                                                                                                          ]
                                                                                                      ],
                                                                                                    "iter",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ],
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ];
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "alloc::vec::Vec")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Ty.path
                                                                                                                                  "alloc::alloc::Global"
                                                                                                                              ]
                                                                                                                          ];
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            [],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.deref (|
                                                                                                                M.read (|
                                                                                                                  mats
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |);
                                                                                                M.closure
                                                                                                  (fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      match
                                                                                                        γ
                                                                                                      with
                                                                                                      | [
                                                                                                            α0
                                                                                                          ] =>
                                                                                                        ltac:(M.monadic
                                                                                                          (M.match_operator (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.function
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.tuple
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Val
                                                                                                                                  ];
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "alloc::vec::Vec")
                                                                                                                                          []
                                                                                                                                          [
                                                                                                                                            Challenge;
                                                                                                                                            Ty.path
                                                                                                                                              "alloc::alloc::Global"
                                                                                                                                          ]
                                                                                                                                      ];
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ]
                                                                                                                              ]
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                  (Ty.path
                                                                                                                    "usize")
                                                                                                              ],
                                                                                                            M.alloc (|
                                                                                                              α0
                                                                                                            |),
                                                                                                            [
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (let
                                                                                                                        γ :=
                                                                                                                    M.read (|
                                                                                                                      γ
                                                                                                                    |) in
                                                                                                                  let
                                                                                                                        γ1_0 :=
                                                                                                                    M.SubPointer.get_tuple_field (|
                                                                                                                      γ,
                                                                                                                      0
                                                                                                                    |) in
                                                                                                                  let
                                                                                                                        γ1_1 :=
                                                                                                                    M.SubPointer.get_tuple_field (|
                                                                                                                      γ,
                                                                                                                      1
                                                                                                                    |) in
                                                                                                                  let
                                                                                                                        domain :=
                                                                                                                    M.alloc (|
                                                                                                                      γ1_0
                                                                                                                    |) in
                                                                                                                  M.call_closure (|
                                                                                                                    Ty.path
                                                                                                                      "usize",
                                                                                                                    BinOp.Wrap.shl,
                                                                                                                    [
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.path
                                                                                                                          "usize",
                                                                                                                        M.get_associated_function (|
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ],
                                                                                                                          "size",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.read (|
                                                                                                                                domain
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |);
                                                                                                                      M.read (|
                                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                                            M.deref (|
                                                                                                                              M.read (|
                                                                                                                                self
                                                                                                                              |)
                                                                                                                            |),
                                                                                                                            "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                                                            "fri"
                                                                                                                          |),
                                                                                                                          "p3_fri::config::FriConfig",
                                                                                                                          "log_blowup"
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)))
                                                                                                            ]
                                                                                                          |)))
                                                                                                      | _ =>
                                                                                                        M.impossible
                                                                                                          "wrong number of arguments"
                                                                                                      end))
                                                                                              ]
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |) in
                                                                                    let~
                                                                                          batch_dims :
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              []
                                                                                              [
                                                                                                Ty.path
                                                                                                  "p3_matrix::Dimensions";
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ]
                                                                                          ] :=
                                                                                      M.alloc (|
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "alloc::vec::Vec")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "p3_matrix::Dimensions";
                                                                                              Ty.path
                                                                                                "alloc::alloc::Global"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "itertools::Itertools",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::iter::adapters::map::Map")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ];
                                                                                                Ty.function
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                                  (Ty.path
                                                                                                    "p3_matrix::Dimensions")
                                                                                              ],
                                                                                            [],
                                                                                            [],
                                                                                            "collect_vec",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::iter::adapters::map::Map")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "usize"
                                                                                                    ];
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "usize"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                    (Ty.path
                                                                                                      "p3_matrix::Dimensions")
                                                                                                ],
                                                                                              M.get_trait_method (|
                                                                                                "core::iter::traits::iterator::Iterator",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize"
                                                                                                  ],
                                                                                                [],
                                                                                                [],
                                                                                                "map",
                                                                                                [],
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "p3_matrix::Dimensions";
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "usize"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                    (Ty.path
                                                                                                      "p3_matrix::Dimensions")
                                                                                                ]
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "usize"
                                                                                                    ],
                                                                                                  M.get_associated_function (|
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "slice")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "usize"
                                                                                                      ],
                                                                                                    "iter",
                                                                                                    [],
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.deref (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "slice")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "usize"
                                                                                                                ]
                                                                                                            ],
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "usize";
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            [],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              batch_heights
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |);
                                                                                                M.closure
                                                                                                  (fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      match
                                                                                                        γ
                                                                                                      with
                                                                                                      | [
                                                                                                            α0
                                                                                                          ] =>
                                                                                                        ltac:(M.monadic
                                                                                                          (M.match_operator (|
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "*")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.function
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "usize"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                  (Ty.path
                                                                                                                    "p3_matrix::Dimensions")
                                                                                                              ],
                                                                                                            M.alloc (|
                                                                                                              α0
                                                                                                            |),
                                                                                                            [
                                                                                                              fun
                                                                                                                  γ =>
                                                                                                                ltac:(M.monadic
                                                                                                                  (let
                                                                                                                        γ :=
                                                                                                                    M.read (|
                                                                                                                      γ
                                                                                                                    |) in
                                                                                                                  let
                                                                                                                        height :=
                                                                                                                    M.copy (|
                                                                                                                      γ
                                                                                                                    |) in
                                                                                                                  Value.StructRecord
                                                                                                                    "p3_matrix::Dimensions"
                                                                                                                    [
                                                                                                                      ("width",
                                                                                                                        Value.Integer
                                                                                                                          IntegerKind.Usize
                                                                                                                          0);
                                                                                                                      ("height",
                                                                                                                        M.read (|
                                                                                                                          height
                                                                                                                        |))
                                                                                                                    ]))
                                                                                                            ]
                                                                                                          |)))
                                                                                                      | _ =>
                                                                                                        M.impossible
                                                                                                          "wrong number of arguments"
                                                                                                      end))
                                                                                              ]
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |) in
                                                                                    let~ _ :
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              []
                                                                                          ] :=
                                                                                      M.match_operator (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              []
                                                                                          ],
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::ops::control_flow::ControlFlow")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::result::Result")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "core::convert::Infallible";
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_fri::verifier::FriError")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                          FriMmcs
                                                                                                          "Error";
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ]
                                                                                                          InputMmcs
                                                                                                          "Error"
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.tuple
                                                                                                  []
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "core::ops::try_trait::Try",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "core::result::Result")
                                                                                                []
                                                                                                [
                                                                                                  Ty.tuple
                                                                                                    [];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "p3_fri::verifier::FriError")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Challenge
                                                                                                        ]
                                                                                                        FriMmcs
                                                                                                        "Error";
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ]
                                                                                                        InputMmcs
                                                                                                        "Error"
                                                                                                    ]
                                                                                                ],
                                                                                              [],
                                                                                              [],
                                                                                              "branch",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::result::Result")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_fri::verifier::FriError")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                          FriMmcs
                                                                                                          "Error";
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ]
                                                                                                          InputMmcs
                                                                                                          "Error"
                                                                                                      ]
                                                                                                  ],
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [];
                                                                                                      Ty.associated_in_trait
                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                        []
                                                                                                        [
                                                                                                          Val
                                                                                                        ]
                                                                                                        InputMmcs
                                                                                                        "Error"
                                                                                                    ],
                                                                                                  "map_err",
                                                                                                  [],
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "p3_fri::verifier::FriError")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Challenge
                                                                                                          ]
                                                                                                          FriMmcs
                                                                                                          "Error";
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ]
                                                                                                          InputMmcs
                                                                                                          "Error"
                                                                                                      ];
                                                                                                    Ty.function
                                                                                                      [
                                                                                                        Ty.associated_in_trait
                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ]
                                                                                                          InputMmcs
                                                                                                          "Error"
                                                                                                      ]
                                                                                                      (Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_fri::verifier::FriError")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Challenge
                                                                                                            ]
                                                                                                            FriMmcs
                                                                                                            "Error";
                                                                                                          Ty.associated_in_trait
                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ]
                                                                                                            InputMmcs
                                                                                                            "Error"
                                                                                                        ])
                                                                                                  ]
                                                                                                |),
                                                                                                [
                                                                                                  M.read (|
                                                                                                    M.match_operator (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "*")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [];
                                                                                                              Ty.associated_in_trait
                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                []
                                                                                                                [
                                                                                                                  Val
                                                                                                                ]
                                                                                                                InputMmcs
                                                                                                                "Error"
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.alloc (|
                                                                                                        Value.Tuple
                                                                                                          []
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  γ :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::option::Option")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "usize"
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::slice::iter::Iter")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize"
                                                                                                                      ],
                                                                                                                    [],
                                                                                                                    [],
                                                                                                                    "max",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::slice::iter::Iter")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "usize"
                                                                                                                        ],
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "slice")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "usize"
                                                                                                                          ],
                                                                                                                        "iter",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.deref (|
                                                                                                                            M.call_closure (|
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "slice")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.path
                                                                                                                                        "usize"
                                                                                                                                    ]
                                                                                                                                ],
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::ops::deref::Deref",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.path
                                                                                                                                      "usize";
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ],
                                                                                                                                [],
                                                                                                                                [],
                                                                                                                                "deref",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.borrow (|
                                                                                                                                  Pointer.Kind.Ref,
                                                                                                                                  batch_heights
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            let
                                                                                                                  γ0_0 :=
                                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                                γ,
                                                                                                                "core::option::Option::Some",
                                                                                                                0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  batch_max_height :=
                                                                                                              M.copy (|
                                                                                                                γ0_0
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  log_batch_max_height :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize"
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  M.get_function (|
                                                                                                                    "p3_util::log2_strict_usize",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      M.deref (|
                                                                                                                        M.read (|
                                                                                                                          batch_max_height
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  bits_reduced :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize"
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  BinOp.Wrap.sub,
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      log_global_max_height
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      log_batch_max_height
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  reduced_index :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize"
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  BinOp.Wrap.shr,
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      index
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      bits_reduced
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [];
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                      InputMmcs
                                                                                                                      "Error"
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "p3_commit::mmcs::Mmcs",
                                                                                                                  InputMmcs,
                                                                                                                  [],
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ],
                                                                                                                  "verify_batch",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.deref (|
                                                                                                                        M.read (|
                                                                                                                          self
                                                                                                                        |)
                                                                                                                      |),
                                                                                                                      "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                                                      "mmcs"
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        batch_commit
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "p3_matrix::Dimensions"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::deref::Deref",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "p3_matrix::Dimensions";
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ],
                                                                                                                          [],
                                                                                                                          [],
                                                                                                                          "deref",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                batch_dims
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.read (|
                                                                                                                    reduced_index
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Val;
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ]
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::deref::Deref",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ],
                                                                                                                          [],
                                                                                                                          [],
                                                                                                                          "deref",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                                  M.deref (|
                                                                                                                                    M.read (|
                                                                                                                                      batch_opening
                                                                                                                                    |)
                                                                                                                                  |),
                                                                                                                                  "p3_fri::two_adic_pcs::BatchOpening",
                                                                                                                                  "opened_values"
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              batch_opening
                                                                                                                            |)
                                                                                                                          |),
                                                                                                                          "p3_fri::two_adic_pcs::BatchOpening",
                                                                                                                          "opening_proof"
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)));
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [];
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                      InputMmcs
                                                                                                                      "Error"
                                                                                                                  ],
                                                                                                                M.get_trait_method (|
                                                                                                                  "p3_commit::mmcs::Mmcs",
                                                                                                                  InputMmcs,
                                                                                                                  [],
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ],
                                                                                                                  "verify_batch",
                                                                                                                  [],
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.deref (|
                                                                                                                        M.read (|
                                                                                                                          self
                                                                                                                        |)
                                                                                                                      |),
                                                                                                                      "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                                                      "mmcs"
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.read (|
                                                                                                                        batch_commit
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  (* Unsize *)
                                                                                                                  M.pointer_coercion
                                                                                                                    (M.borrow (|
                                                                                                                      Pointer.Kind.Ref,
                                                                                                                      M.deref (|
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.alloc (|
                                                                                                                            Value.Array
                                                                                                                              []
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |));
                                                                                                                  Value.Integer
                                                                                                                    IntegerKind.Usize
                                                                                                                    0;
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.call_closure (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "&")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "slice")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Val;
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ]
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::deref::Deref",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ],
                                                                                                                          [],
                                                                                                                          [],
                                                                                                                          "deref",
                                                                                                                          [],
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.borrow (|
                                                                                                                            Pointer.Kind.Ref,
                                                                                                                            M.deref (|
                                                                                                                              M.borrow (|
                                                                                                                                Pointer.Kind.Ref,
                                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                                  M.deref (|
                                                                                                                                    M.read (|
                                                                                                                                      batch_opening
                                                                                                                                    |)
                                                                                                                                  |),
                                                                                                                                  "p3_fri::two_adic_pcs::BatchOpening",
                                                                                                                                  "opened_values"
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.borrow (|
                                                                                                                    Pointer.Kind.Ref,
                                                                                                                    M.deref (|
                                                                                                                      M.borrow (|
                                                                                                                        Pointer.Kind.Ref,
                                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              batch_opening
                                                                                                                            |)
                                                                                                                          |),
                                                                                                                          "p3_fri::two_adic_pcs::BatchOpening",
                                                                                                                          "opening_proof"
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |)
                                                                                                  |);
                                                                                                  M.constructor_as_closure
                                                                                                    "p3_fri::verifier::FriError::InputError'1"
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Break",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    residual :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                M.never_to_any (|
                                                                                                  M.read (|
                                                                                                    M.return_ (|
                                                                                                      M.call_closure (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::result::Result")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::vec::Vec")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.tuple
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize";
                                                                                                                    Challenge
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_fri::verifier::FriError")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                                  FriMmcs
                                                                                                                  "Error";
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ]
                                                                                                                  InputMmcs
                                                                                                                  "Error"
                                                                                                              ]
                                                                                                          ],
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::try_trait::FromResidual",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "usize";
                                                                                                                      Challenge
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_fri::verifier::FriError")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ]
                                                                                                                    FriMmcs
                                                                                                                    "Error";
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ]
                                                                                                                    InputMmcs
                                                                                                                    "Error"
                                                                                                                ]
                                                                                                            ],
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.path
                                                                                                                  "core::convert::Infallible";
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_fri::verifier::FriError")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Challenge
                                                                                                                      ]
                                                                                                                      FriMmcs
                                                                                                                      "Error";
                                                                                                                    Ty.associated_in_trait
                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val
                                                                                                                      ]
                                                                                                                      InputMmcs
                                                                                                                      "Error"
                                                                                                                  ]
                                                                                                              ]
                                                                                                          ],
                                                                                                          "from_residual",
                                                                                                          [],
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            residual
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)));
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    γ0_0 :=
                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                  γ,
                                                                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                                                                  0
                                                                                                |) in
                                                                                              let
                                                                                                    val :=
                                                                                                M.copy (|
                                                                                                  γ0_0
                                                                                                |) in
                                                                                              val))
                                                                                        ]
                                                                                      |) in
                                                                                    M.use
                                                                                      (M.match_operator (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "*")
                                                                                          []
                                                                                          [
                                                                                            Ty.tuple
                                                                                              []
                                                                                          ],
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "p3_util::zip_eq::ZipEq")
                                                                                              []
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::vec::Vec")
                                                                                                      []
                                                                                                      [
                                                                                                        Val;
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::slice::iter::Iter")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                          []
                                                                                                          [
                                                                                                            Val
                                                                                                          ];
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "alloc::vec::Vec")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              [
                                                                                                                Challenge;
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge;
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "alloc::alloc::Global"
                                                                                                          ]
                                                                                                      ]
                                                                                                  ]
                                                                                              ],
                                                                                            M.get_trait_method (|
                                                                                              "core::iter::traits::collect::IntoIterator",
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                                []
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::vec::Vec")
                                                                                                        []
                                                                                                        [
                                                                                                          Val;
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ]
                                                                                                    ];
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::slice::iter::Iter")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                            []
                                                                                                            [
                                                                                                              Val
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::vec::Vec")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Challenge;
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ]
                                                                                                        ]
                                                                                                    ]
                                                                                                ],
                                                                                              [],
                                                                                              [],
                                                                                              "into_iter",
                                                                                              [],
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.read (|
                                                                                                M.match_operator (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "*")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "p3_util::zip_eq::ZipEq")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::slice::iter::Iter")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "alloc::vec::Vec")
                                                                                                                []
                                                                                                                [
                                                                                                                  Val;
                                                                                                                  Ty.path
                                                                                                                    "alloc::alloc::Global"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::slice::iter::Iter")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::ops::control_flow::ControlFlow")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "core::convert::Infallible";
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_fri::verifier::FriError")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ]
                                                                                                                    FriMmcs
                                                                                                                    "Error";
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ]
                                                                                                                    InputMmcs
                                                                                                                    "Error"
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "p3_util::zip_eq::ZipEq")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::try_trait::Try",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::result::Result")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_util::zip_eq::ZipEq")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.tuple
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ];
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_fri::verifier::FriError")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Challenge
                                                                                                                  ]
                                                                                                                  FriMmcs
                                                                                                                  "Error";
                                                                                                                Ty.associated_in_trait
                                                                                                                  "p3_commit::mmcs::Mmcs"
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ]
                                                                                                                  InputMmcs
                                                                                                                  "Error"
                                                                                                              ]
                                                                                                          ],
                                                                                                        [],
                                                                                                        [],
                                                                                                        "branch",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::slice::iter::Iter")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_fri::verifier::FriError")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ]
                                                                                                                    FriMmcs
                                                                                                                    "Error";
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ]
                                                                                                                    InputMmcs
                                                                                                                    "Error"
                                                                                                                ]
                                                                                                            ],
                                                                                                          M.get_function (|
                                                                                                            "p3_util::zip_eq::zip_eq",
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val;
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "&")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::vec::Vec")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::slice::iter::Iter")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.path
                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_fri::verifier::FriError")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Challenge
                                                                                                                    ]
                                                                                                                    FriMmcs
                                                                                                                    "Error";
                                                                                                                  Ty.associated_in_trait
                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ]
                                                                                                                    InputMmcs
                                                                                                                    "Error"
                                                                                                                ]
                                                                                                            ]
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                                M.deref (|
                                                                                                                  M.read (|
                                                                                                                    batch_opening
                                                                                                                  |)
                                                                                                                |),
                                                                                                                "p3_fri::two_adic_pcs::BatchOpening",
                                                                                                                "opened_values"
                                                                                                              |)
                                                                                                            |);
                                                                                                            M.read (|
                                                                                                              mats
                                                                                                            |);
                                                                                                            Value.StructTuple
                                                                                                              "p3_fri::verifier::FriError::InvalidProofShape"
                                                                                                              []
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ0_0 :=
                                                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                                                            γ,
                                                                                                            "core::ops::control_flow::ControlFlow::Break",
                                                                                                            0
                                                                                                          |) in
                                                                                                        let
                                                                                                              residual :=
                                                                                                          M.copy (|
                                                                                                            γ0_0
                                                                                                          |) in
                                                                                                        M.alloc (|
                                                                                                          M.never_to_any (|
                                                                                                            M.read (|
                                                                                                              M.return_ (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::result::Result")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "usize";
                                                                                                                              Challenge
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ];
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "p3_fri::verifier::FriError")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Challenge
                                                                                                                            ]
                                                                                                                            FriMmcs
                                                                                                                            "Error";
                                                                                                                          Ty.associated_in_trait
                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ]
                                                                                                                            InputMmcs
                                                                                                                            "Error"
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::ops::try_trait::FromResidual",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::result::Result")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.tuple
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "usize";
                                                                                                                                Challenge
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_fri::verifier::FriError")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.associated_in_trait
                                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Challenge
                                                                                                                              ]
                                                                                                                              FriMmcs
                                                                                                                              "Error";
                                                                                                                            Ty.associated_in_trait
                                                                                                                              "p3_commit::mmcs::Mmcs"
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ]
                                                                                                                              InputMmcs
                                                                                                                              "Error"
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    [],
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::result::Result")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "core::convert::Infallible";
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_fri::verifier::FriError")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Challenge
                                                                                                                                ]
                                                                                                                                FriMmcs
                                                                                                                                "Error";
                                                                                                                              Ty.associated_in_trait
                                                                                                                                "p3_commit::mmcs::Mmcs"
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Val
                                                                                                                                ]
                                                                                                                                InputMmcs
                                                                                                                                "Error"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                    "from_residual",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      residual
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)));
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              γ0_0 :=
                                                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                                                            γ,
                                                                                                            "core::ops::control_flow::ControlFlow::Continue",
                                                                                                            0
                                                                                                          |) in
                                                                                                        let
                                                                                                              val :=
                                                                                                          M.copy (|
                                                                                                            γ0_0
                                                                                                          |) in
                                                                                                        val))
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |),
                                                                                        [
                                                                                          fun γ =>
                                                                                            ltac:(M.monadic
                                                                                              (let
                                                                                                    iter :=
                                                                                                M.copy (|
                                                                                                  γ
                                                                                                |) in
                                                                                              M.loop (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "*")
                                                                                                  []
                                                                                                  [
                                                                                                    Ty.tuple
                                                                                                      []
                                                                                                  ],
                                                                                                ltac:(M.monadic
                                                                                                  (let~
                                                                                                        _ :
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "*")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            []
                                                                                                        ] :=
                                                                                                    M.match_operator (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "*")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.tuple
                                                                                                            []
                                                                                                        ],
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::option::Option")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.tuple
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::vec::Vec")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Val;
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ]
                                                                                                                    ];
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Val
                                                                                                                            ];
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "alloc::vec::Vec")
                                                                                                                            []
                                                                                                                            [
                                                                                                                              Ty.tuple
                                                                                                                                [
                                                                                                                                  Challenge;
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Challenge;
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "alloc::alloc::Global"
                                                                                                                            ]
                                                                                                                        ]
                                                                                                                    ]
                                                                                                                ]
                                                                                                            ],
                                                                                                          M.get_trait_method (|
                                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_util::zip_eq::ZipEq")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::vec::Vec")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Val;
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::slice::iter::Iter")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Val
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::vec::Vec")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.tuple
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [],
                                                                                                            "next",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.MutRef,
                                                                                                              M.deref (|
                                                                                                                M.borrow (|
                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                  iter
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |),
                                                                                                      [
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  _ :=
                                                                                                              M.is_struct_tuple (|
                                                                                                                γ,
                                                                                                                "core::option::Option::None"
                                                                                                              |) in
                                                                                                            M.alloc (|
                                                                                                              M.never_to_any (|
                                                                                                                M.read (|
                                                                                                                  M.break (||)
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)));
                                                                                                        fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            (let
                                                                                                                  γ0_0 :=
                                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                                γ,
                                                                                                                "core::option::Option::Some",
                                                                                                                0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  γ1_0 :=
                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                γ0_0,
                                                                                                                0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  γ1_1 :=
                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                γ0_0,
                                                                                                                1
                                                                                                              |) in
                                                                                                            let
                                                                                                                  mat_opening :=
                                                                                                              M.copy (|
                                                                                                                γ1_0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  γ1_1 :=
                                                                                                              M.read (|
                                                                                                                γ1_1
                                                                                                              |) in
                                                                                                            let
                                                                                                                  γ3_0 :=
                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                γ1_1,
                                                                                                                0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  γ3_1 :=
                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                γ1_1,
                                                                                                                1
                                                                                                              |) in
                                                                                                            let
                                                                                                                  mat_domain :=
                                                                                                              M.alloc (|
                                                                                                                γ3_0
                                                                                                              |) in
                                                                                                            let
                                                                                                                  mat_points_and_values :=
                                                                                                              M.alloc (|
                                                                                                                γ3_1
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  log_height :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize"
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  BinOp.Wrap.add,
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "usize",
                                                                                                                      M.get_function (|
                                                                                                                        "p3_util::log2_strict_usize",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          Ty.path
                                                                                                                            "usize",
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "p3_field::coset::TwoAdicMultiplicativeCoset")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Val
                                                                                                                              ],
                                                                                                                            "size",
                                                                                                                            [],
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.borrow (|
                                                                                                                              Pointer.Kind.Ref,
                                                                                                                              M.deref (|
                                                                                                                                M.read (|
                                                                                                                                  mat_domain
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                                          M.deref (|
                                                                                                                            M.read (|
                                                                                                                              self
                                                                                                                            |)
                                                                                                                          |),
                                                                                                                          "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                                                          "fri"
                                                                                                                        |),
                                                                                                                        "p3_fri::config::FriConfig",
                                                                                                                        "log_blowup"
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  bits_reduced :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize"
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  BinOp.Wrap.sub,
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      log_global_max_height
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      log_height
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  rev_reduced_index :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "usize"
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.path
                                                                                                                    "usize",
                                                                                                                  M.get_function (|
                                                                                                                    "p3_util::reverse_bits_len",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.path
                                                                                                                        "usize",
                                                                                                                      BinOp.Wrap.shr,
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          index
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          bits_reduced
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      log_height
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            let~
                                                                                                                  x :
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "*")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Val
                                                                                                                  ] :=
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Val,
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::ops::arith::Mul",
                                                                                                                    Val,
                                                                                                                    [],
                                                                                                                    [
                                                                                                                      Val
                                                                                                                    ],
                                                                                                                    "mul",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      get_constant (|
                                                                                                                        "p3_field::field::Field::GENERATOR",
                                                                                                                        Val
                                                                                                                      |)
                                                                                                                    |);
                                                                                                                    M.call_closure (|
                                                                                                                      Val,
                                                                                                                      M.get_trait_method (|
                                                                                                                        "p3_field::field::PrimeCharacteristicRing",
                                                                                                                        Val,
                                                                                                                        [],
                                                                                                                        [],
                                                                                                                        "exp_u64",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.Ref,
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              Val,
                                                                                                                              M.get_trait_method (|
                                                                                                                                "p3_field::field::TwoAdicField",
                                                                                                                                Val,
                                                                                                                                [],
                                                                                                                                [],
                                                                                                                                "two_adic_generator",
                                                                                                                                [],
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.read (|
                                                                                                                                  log_height
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        |);
                                                                                                                        M.cast
                                                                                                                          (Ty.path
                                                                                                                            "u64")
                                                                                                                          (M.read (|
                                                                                                                            rev_reduced_index
                                                                                                                          |))
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |) in
                                                                                                            M.match_operator (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "*")
                                                                                                                []
                                                                                                                [
                                                                                                                  Ty.tuple
                                                                                                                    []
                                                                                                                ],
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&mut")
                                                                                                                    []
                                                                                                                    [
                                                                                                                      Ty.tuple
                                                                                                                        [
                                                                                                                          Challenge;
                                                                                                                          Challenge
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::collections::btree::map::entry::Entry")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "usize";
                                                                                                                        Ty.tuple
                                                                                                                          [
                                                                                                                            Challenge;
                                                                                                                            Challenge
                                                                                                                          ];
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ],
                                                                                                                    "or_insert",
                                                                                                                    [],
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::collections::btree::map::entry::Entry")
                                                                                                                        []
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "usize";
                                                                                                                          Ty.tuple
                                                                                                                            [
                                                                                                                              Challenge;
                                                                                                                              Challenge
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ],
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::collections::btree::map::BTreeMap")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "usize";
                                                                                                                            Ty.tuple
                                                                                                                              [
                                                                                                                                Challenge;
                                                                                                                                Challenge
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        "entry",
                                                                                                                        [],
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.borrow (|
                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                          reduced_openings
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          log_height
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |);
                                                                                                                    Value.Tuple
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          get_constant (|
                                                                                                                            "p3_field::field::PrimeCharacteristicRing::ONE",
                                                                                                                            Challenge
                                                                                                                          |)
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          get_constant (|
                                                                                                                            "p3_field::field::PrimeCharacteristicRing::ZERO",
                                                                                                                            Challenge
                                                                                                                          |)
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |),
                                                                                                              [
                                                                                                                fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    (let
                                                                                                                          γ :=
                                                                                                                      M.read (|
                                                                                                                        γ
                                                                                                                      |) in
                                                                                                                    let
                                                                                                                          γ1_0 :=
                                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                                        γ,
                                                                                                                        0
                                                                                                                      |) in
                                                                                                                    let
                                                                                                                          γ1_1 :=
                                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                                        γ,
                                                                                                                        1
                                                                                                                      |) in
                                                                                                                    let
                                                                                                                          alpha_pow :=
                                                                                                                      M.alloc (|
                                                                                                                        γ1_0
                                                                                                                      |) in
                                                                                                                    let
                                                                                                                          ro :=
                                                                                                                      M.alloc (|
                                                                                                                        γ1_1
                                                                                                                      |) in
                                                                                                                    M.use
                                                                                                                      (M.match_operator (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "*")
                                                                                                                          []
                                                                                                                          [
                                                                                                                            Ty.tuple
                                                                                                                              []
                                                                                                                          ],
                                                                                                                        M.alloc (|
                                                                                                                          M.call_closure (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::slice::iter::Iter")
                                                                                                                              []
                                                                                                                              [
                                                                                                                                Ty.tuple
                                                                                                                                  [
                                                                                                                                    Challenge;
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                      []
                                                                                                                                      [
                                                                                                                                        Challenge;
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ]
                                                                                                                                  ]
                                                                                                                              ],
                                                                                                                            M.get_trait_method (|
                                                                                                                              "core::iter::traits::collect::IntoIterator",
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "&")
                                                                                                                                []
                                                                                                                                [
                                                                                                                                  Ty.apply
                                                                                                                                    (Ty.path
                                                                                                                                      "alloc::vec::Vec")
                                                                                                                                    []
                                                                                                                                    [
                                                                                                                                      Ty.tuple
                                                                                                                                        [
                                                                                                                                          Challenge;
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "alloc::vec::Vec")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Challenge;
                                                                                                                                              Ty.path
                                                                                                                                                "alloc::alloc::Global"
                                                                                                                                            ]
                                                                                                                                        ];
                                                                                                                                      Ty.path
                                                                                                                                        "alloc::alloc::Global"
                                                                                                                                    ]
                                                                                                                                ],
                                                                                                                              [],
                                                                                                                              [],
                                                                                                                              "into_iter",
                                                                                                                              [],
                                                                                                                              []
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              M.read (|
                                                                                                                                mat_points_and_values
                                                                                                                              |)
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (let
                                                                                                                                    iter :=
                                                                                                                                M.copy (|
                                                                                                                                  γ
                                                                                                                                |) in
                                                                                                                              M.loop (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "*")
                                                                                                                                  []
                                                                                                                                  [
                                                                                                                                    Ty.tuple
                                                                                                                                      []
                                                                                                                                  ],
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (let~
                                                                                                                                        _ :
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "*")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Ty.tuple
                                                                                                                                            []
                                                                                                                                        ] :=
                                                                                                                                    M.match_operator (|
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "*")
                                                                                                                                        []
                                                                                                                                        [
                                                                                                                                          Ty.tuple
                                                                                                                                            []
                                                                                                                                        ],
                                                                                                                                      M.alloc (|
                                                                                                                                        M.call_closure (|
                                                                                                                                          Ty.apply
                                                                                                                                            (Ty.path
                                                                                                                                              "core::option::Option")
                                                                                                                                            []
                                                                                                                                            [
                                                                                                                                              Ty.apply
                                                                                                                                                (Ty.path
                                                                                                                                                  "&")
                                                                                                                                                []
                                                                                                                                                [
                                                                                                                                                  Ty.tuple
                                                                                                                                                    [
                                                                                                                                                      Challenge;
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "alloc::vec::Vec")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Challenge;
                                                                                                                                                          Ty.path
                                                                                                                                                            "alloc::alloc::Global"
                                                                                                                                                        ]
                                                                                                                                                    ]
                                                                                                                                                ]
                                                                                                                                            ],
                                                                                                                                          M.get_trait_method (|
                                                                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "core::slice::iter::Iter")
                                                                                                                                              []
                                                                                                                                              [
                                                                                                                                                Ty.tuple
                                                                                                                                                  [
                                                                                                                                                    Challenge;
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "alloc::vec::Vec")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Challenge;
                                                                                                                                                        Ty.path
                                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                                      ]
                                                                                                                                                  ]
                                                                                                                                              ],
                                                                                                                                            [],
                                                                                                                                            [],
                                                                                                                                            "next",
                                                                                                                                            [],
                                                                                                                                            []
                                                                                                                                          |),
                                                                                                                                          [
                                                                                                                                            M.borrow (|
                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                              M.deref (|
                                                                                                                                                M.borrow (|
                                                                                                                                                  Pointer.Kind.MutRef,
                                                                                                                                                  iter
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)
                                                                                                                                          ]
                                                                                                                                        |)
                                                                                                                                      |),
                                                                                                                                      [
                                                                                                                                        fun
                                                                                                                                            γ =>
                                                                                                                                          ltac:(M.monadic
                                                                                                                                            (let
                                                                                                                                                  _ :=
                                                                                                                                              M.is_struct_tuple (|
                                                                                                                                                γ,
                                                                                                                                                "core::option::Option::None"
                                                                                                                                              |) in
                                                                                                                                            M.alloc (|
                                                                                                                                              M.never_to_any (|
                                                                                                                                                M.read (|
                                                                                                                                                  M.break (||)
                                                                                                                                                |)
                                                                                                                                              |)
                                                                                                                                            |)));
                                                                                                                                        fun
                                                                                                                                            γ =>
                                                                                                                                          ltac:(M.monadic
                                                                                                                                            (let
                                                                                                                                                  γ0_0 :=
                                                                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                γ,
                                                                                                                                                "core::option::Option::Some",
                                                                                                                                                0
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  γ0_0 :=
                                                                                                                                              M.read (|
                                                                                                                                                γ0_0
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  γ2_0 :=
                                                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                                                γ0_0,
                                                                                                                                                0
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  γ2_1 :=
                                                                                                                                              M.SubPointer.get_tuple_field (|
                                                                                                                                                γ0_0,
                                                                                                                                                1
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  z :=
                                                                                                                                              M.alloc (|
                                                                                                                                                γ2_0
                                                                                                                                              |) in
                                                                                                                                            let
                                                                                                                                                  ps_at_z :=
                                                                                                                                              M.alloc (|
                                                                                                                                                γ2_1
                                                                                                                                              |) in
                                                                                                                                            M.use
                                                                                                                                              (M.match_operator (|
                                                                                                                                                Ty.apply
                                                                                                                                                  (Ty.path
                                                                                                                                                    "*")
                                                                                                                                                  []
                                                                                                                                                  [
                                                                                                                                                    Ty.tuple
                                                                                                                                                      []
                                                                                                                                                  ],
                                                                                                                                                M.alloc (|
                                                                                                                                                  M.call_closure (|
                                                                                                                                                    Ty.apply
                                                                                                                                                      (Ty.path
                                                                                                                                                        "p3_util::zip_eq::ZipEq")
                                                                                                                                                      []
                                                                                                                                                      [
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "core::slice::iter::Iter")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Val
                                                                                                                                                          ];
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "core::slice::iter::Iter")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Challenge
                                                                                                                                                          ]
                                                                                                                                                      ],
                                                                                                                                                    M.get_trait_method (|
                                                                                                                                                      "core::iter::traits::collect::IntoIterator",
                                                                                                                                                      Ty.apply
                                                                                                                                                        (Ty.path
                                                                                                                                                          "p3_util::zip_eq::ZipEq")
                                                                                                                                                        []
                                                                                                                                                        [
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "core::slice::iter::Iter")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Val
                                                                                                                                                            ];
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "core::slice::iter::Iter")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Challenge
                                                                                                                                                            ]
                                                                                                                                                        ],
                                                                                                                                                      [],
                                                                                                                                                      [],
                                                                                                                                                      "into_iter",
                                                                                                                                                      [],
                                                                                                                                                      []
                                                                                                                                                    |),
                                                                                                                                                    [
                                                                                                                                                      M.read (|
                                                                                                                                                        M.match_operator (|
                                                                                                                                                          Ty.apply
                                                                                                                                                            (Ty.path
                                                                                                                                                              "*")
                                                                                                                                                            []
                                                                                                                                                            [
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "p3_util::zip_eq::ZipEq")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "core::slice::iter::Iter")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Val
                                                                                                                                                                    ];
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "core::slice::iter::Iter")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Challenge
                                                                                                                                                                    ]
                                                                                                                                                                ]
                                                                                                                                                            ],
                                                                                                                                                          M.alloc (|
                                                                                                                                                            M.call_closure (|
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "core::ops::control_flow::ControlFlow")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "core::result::Result")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.path
                                                                                                                                                                        "core::convert::Infallible";
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "p3_fri::verifier::FriError")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.associated_in_trait
                                                                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ]
                                                                                                                                                                            FriMmcs
                                                                                                                                                                            "Error";
                                                                                                                                                                          Ty.associated_in_trait
                                                                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val
                                                                                                                                                                            ]
                                                                                                                                                                            InputMmcs
                                                                                                                                                                            "Error"
                                                                                                                                                                        ]
                                                                                                                                                                    ];
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "p3_util::zip_eq::ZipEq")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "core::slice::iter::Iter")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Val
                                                                                                                                                                        ];
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "core::slice::iter::Iter")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Challenge
                                                                                                                                                                        ]
                                                                                                                                                                    ]
                                                                                                                                                                ],
                                                                                                                                                              M.get_trait_method (|
                                                                                                                                                                "core::ops::try_trait::Try",
                                                                                                                                                                Ty.apply
                                                                                                                                                                  (Ty.path
                                                                                                                                                                    "core::result::Result")
                                                                                                                                                                  []
                                                                                                                                                                  [
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "p3_util::zip_eq::ZipEq")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "core::slice::iter::Iter")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Val
                                                                                                                                                                          ];
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "core::slice::iter::Iter")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Challenge
                                                                                                                                                                          ]
                                                                                                                                                                      ];
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "p3_fri::verifier::FriError")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.associated_in_trait
                                                                                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Challenge
                                                                                                                                                                          ]
                                                                                                                                                                          FriMmcs
                                                                                                                                                                          "Error";
                                                                                                                                                                        Ty.associated_in_trait
                                                                                                                                                                          "p3_commit::mmcs::Mmcs"
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Val
                                                                                                                                                                          ]
                                                                                                                                                                          InputMmcs
                                                                                                                                                                          "Error"
                                                                                                                                                                      ]
                                                                                                                                                                  ],
                                                                                                                                                                [],
                                                                                                                                                                [],
                                                                                                                                                                "branch",
                                                                                                                                                                [],
                                                                                                                                                                []
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "core::result::Result")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "p3_util::zip_eq::ZipEq")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "core::slice::iter::Iter")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val
                                                                                                                                                                            ];
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "core::slice::iter::Iter")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ]
                                                                                                                                                                        ];
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "p3_fri::verifier::FriError")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.associated_in_trait
                                                                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ]
                                                                                                                                                                            FriMmcs
                                                                                                                                                                            "Error";
                                                                                                                                                                          Ty.associated_in_trait
                                                                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val
                                                                                                                                                                            ]
                                                                                                                                                                            InputMmcs
                                                                                                                                                                            "Error"
                                                                                                                                                                        ]
                                                                                                                                                                    ],
                                                                                                                                                                  M.get_function (|
                                                                                                                                                                    "p3_util::zip_eq::zip_eq",
                                                                                                                                                                    [],
                                                                                                                                                                    [
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "&")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "alloc::vec::Vec")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val;
                                                                                                                                                                              Ty.path
                                                                                                                                                                                "alloc::alloc::Global"
                                                                                                                                                                            ]
                                                                                                                                                                        ];
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "core::slice::iter::Iter")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Val
                                                                                                                                                                        ];
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "&")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "alloc::vec::Vec")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge;
                                                                                                                                                                              Ty.path
                                                                                                                                                                                "alloc::alloc::Global"
                                                                                                                                                                            ]
                                                                                                                                                                        ];
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "core::slice::iter::Iter")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Challenge
                                                                                                                                                                        ];
                                                                                                                                                                      Ty.apply
                                                                                                                                                                        (Ty.path
                                                                                                                                                                          "p3_fri::verifier::FriError")
                                                                                                                                                                        []
                                                                                                                                                                        [
                                                                                                                                                                          Ty.associated_in_trait
                                                                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ]
                                                                                                                                                                            FriMmcs
                                                                                                                                                                            "Error";
                                                                                                                                                                          Ty.associated_in_trait
                                                                                                                                                                            "p3_commit::mmcs::Mmcs"
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val
                                                                                                                                                                            ]
                                                                                                                                                                            InputMmcs
                                                                                                                                                                            "Error"
                                                                                                                                                                        ]
                                                                                                                                                                    ]
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    M.read (|
                                                                                                                                                                      mat_opening
                                                                                                                                                                    |);
                                                                                                                                                                    M.read (|
                                                                                                                                                                      ps_at_z
                                                                                                                                                                    |);
                                                                                                                                                                    Value.StructTuple
                                                                                                                                                                      "p3_fri::verifier::FriError::InvalidProofShape"
                                                                                                                                                                      []
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              ]
                                                                                                                                                            |)
                                                                                                                                                          |),
                                                                                                                                                          [
                                                                                                                                                            fun
                                                                                                                                                                γ =>
                                                                                                                                                              ltac:(M.monadic
                                                                                                                                                                (let
                                                                                                                                                                      γ0_0 :=
                                                                                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                    γ,
                                                                                                                                                                    "core::ops::control_flow::ControlFlow::Break",
                                                                                                                                                                    0
                                                                                                                                                                  |) in
                                                                                                                                                                let
                                                                                                                                                                      residual :=
                                                                                                                                                                  M.copy (|
                                                                                                                                                                    γ0_0
                                                                                                                                                                  |) in
                                                                                                                                                                M.alloc (|
                                                                                                                                                                  M.never_to_any (|
                                                                                                                                                                    M.read (|
                                                                                                                                                                      M.return_ (|
                                                                                                                                                                        M.call_closure (|
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "core::result::Result")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "alloc::vec::Vec")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.tuple
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.path
                                                                                                                                                                                        "usize";
                                                                                                                                                                                      Challenge
                                                                                                                                                                                    ];
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "alloc::alloc::Global"
                                                                                                                                                                                ];
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "p3_fri::verifier::FriError")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.associated_in_trait
                                                                                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                                                                                    []
                                                                                                                                                                                    [
                                                                                                                                                                                      Challenge
                                                                                                                                                                                    ]
                                                                                                                                                                                    FriMmcs
                                                                                                                                                                                    "Error";
                                                                                                                                                                                  Ty.associated_in_trait
                                                                                                                                                                                    "p3_commit::mmcs::Mmcs"
                                                                                                                                                                                    []
                                                                                                                                                                                    [
                                                                                                                                                                                      Val
                                                                                                                                                                                    ]
                                                                                                                                                                                    InputMmcs
                                                                                                                                                                                    "Error"
                                                                                                                                                                                ]
                                                                                                                                                                            ],
                                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                                            "core::ops::try_trait::FromResidual",
                                                                                                                                                                            Ty.apply
                                                                                                                                                                              (Ty.path
                                                                                                                                                                                "core::result::Result")
                                                                                                                                                                              []
                                                                                                                                                                              [
                                                                                                                                                                                Ty.apply
                                                                                                                                                                                  (Ty.path
                                                                                                                                                                                    "alloc::vec::Vec")
                                                                                                                                                                                  []
                                                                                                                                                                                  [
                                                                                                                                                                                    Ty.tuple
                                                                                                                                                                                      [
                                                                                                                                                                                        Ty.path
                                                                                                                                                                                          "usize";
                                                                                                                                                                                        Challenge
                                                                                                                                                                                      ];
                                                                                                                                                                                    Ty.path
                                                                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                                                                  ];
                                                                                                                                                                                Ty.apply
                                                                                                                                                                                  (Ty.path
                                                                                                                                                                                    "p3_fri::verifier::FriError")
                                                                                                                                                                                  []
                                                                                                                                                                                  [
                                                                                                                                                                                    Ty.associated_in_trait
                                                                                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                                                                                      []
                                                                                                                                                                                      [
                                                                                                                                                                                        Challenge
                                                                                                                                                                                      ]
                                                                                                                                                                                      FriMmcs
                                                                                                                                                                                      "Error";
                                                                                                                                                                                    Ty.associated_in_trait
                                                                                                                                                                                      "p3_commit::mmcs::Mmcs"
                                                                                                                                                                                      []
                                                                                                                                                                                      [
                                                                                                                                                                                        Val
                                                                                                                                                                                      ]
                                                                                                                                                                                      InputMmcs
                                                                                                                                                                                      "Error"
                                                                                                                                                                                  ]
                                                                                                                                                                              ],
                                                                                                                                                                            [],
                                                                                                                                                                            [
                                                                                                                                                                              Ty.apply
                                                                                                                                                                                (Ty.path
                                                                                                                                                                                  "core::result::Result")
                                                                                                                                                                                []
                                                                                                                                                                                [
                                                                                                                                                                                  Ty.path
                                                                                                                                                                                    "core::convert::Infallible";
                                                                                                                                                                                  Ty.apply
                                                                                                                                                                                    (Ty.path
                                                                                                                                                                                      "p3_fri::verifier::FriError")
                                                                                                                                                                                    []
                                                                                                                                                                                    [
                                                                                                                                                                                      Ty.associated_in_trait
                                                                                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                                                                                        []
                                                                                                                                                                                        [
                                                                                                                                                                                          Challenge
                                                                                                                                                                                        ]
                                                                                                                                                                                        FriMmcs
                                                                                                                                                                                        "Error";
                                                                                                                                                                                      Ty.associated_in_trait
                                                                                                                                                                                        "p3_commit::mmcs::Mmcs"
                                                                                                                                                                                        []
                                                                                                                                                                                        [
                                                                                                                                                                                          Val
                                                                                                                                                                                        ]
                                                                                                                                                                                        InputMmcs
                                                                                                                                                                                        "Error"
                                                                                                                                                                                    ]
                                                                                                                                                                                ]
                                                                                                                                                                            ],
                                                                                                                                                                            "from_residual",
                                                                                                                                                                            [],
                                                                                                                                                                            []
                                                                                                                                                                          |),
                                                                                                                                                                          [
                                                                                                                                                                            M.read (|
                                                                                                                                                                              residual
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)
                                                                                                                                                                  |)
                                                                                                                                                                |)));
                                                                                                                                                            fun
                                                                                                                                                                γ =>
                                                                                                                                                              ltac:(M.monadic
                                                                                                                                                                (let
                                                                                                                                                                      γ0_0 :=
                                                                                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                    γ,
                                                                                                                                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                                                                                                                                    0
                                                                                                                                                                  |) in
                                                                                                                                                                let
                                                                                                                                                                      val :=
                                                                                                                                                                  M.copy (|
                                                                                                                                                                    γ0_0
                                                                                                                                                                  |) in
                                                                                                                                                                val))
                                                                                                                                                          ]
                                                                                                                                                        |)
                                                                                                                                                      |)
                                                                                                                                                    ]
                                                                                                                                                  |)
                                                                                                                                                |),
                                                                                                                                                [
                                                                                                                                                  fun
                                                                                                                                                      γ =>
                                                                                                                                                    ltac:(M.monadic
                                                                                                                                                      (let
                                                                                                                                                            iter :=
                                                                                                                                                        M.copy (|
                                                                                                                                                          γ
                                                                                                                                                        |) in
                                                                                                                                                      M.loop (|
                                                                                                                                                        Ty.apply
                                                                                                                                                          (Ty.path
                                                                                                                                                            "*")
                                                                                                                                                          []
                                                                                                                                                          [
                                                                                                                                                            Ty.tuple
                                                                                                                                                              []
                                                                                                                                                          ],
                                                                                                                                                        ltac:(M.monadic
                                                                                                                                                          (let~
                                                                                                                                                                _ :
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "*")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.tuple
                                                                                                                                                                    []
                                                                                                                                                                ] :=
                                                                                                                                                            M.match_operator (|
                                                                                                                                                              Ty.apply
                                                                                                                                                                (Ty.path
                                                                                                                                                                  "*")
                                                                                                                                                                []
                                                                                                                                                                [
                                                                                                                                                                  Ty.tuple
                                                                                                                                                                    []
                                                                                                                                                                ],
                                                                                                                                                              M.alloc (|
                                                                                                                                                                M.call_closure (|
                                                                                                                                                                  Ty.apply
                                                                                                                                                                    (Ty.path
                                                                                                                                                                      "core::option::Option")
                                                                                                                                                                    []
                                                                                                                                                                    [
                                                                                                                                                                      Ty.tuple
                                                                                                                                                                        [
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Val
                                                                                                                                                                            ];
                                                                                                                                                                          Ty.apply
                                                                                                                                                                            (Ty.path
                                                                                                                                                                              "&")
                                                                                                                                                                            []
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ]
                                                                                                                                                                        ]
                                                                                                                                                                    ],
                                                                                                                                                                  M.get_trait_method (|
                                                                                                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                                                                                                    Ty.apply
                                                                                                                                                                      (Ty.path
                                                                                                                                                                        "p3_util::zip_eq::ZipEq")
                                                                                                                                                                      []
                                                                                                                                                                      [
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "core::slice::iter::Iter")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Val
                                                                                                                                                                          ];
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "core::slice::iter::Iter")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Challenge
                                                                                                                                                                          ]
                                                                                                                                                                      ],
                                                                                                                                                                    [],
                                                                                                                                                                    [],
                                                                                                                                                                    "next",
                                                                                                                                                                    [],
                                                                                                                                                                    []
                                                                                                                                                                  |),
                                                                                                                                                                  [
                                                                                                                                                                    M.borrow (|
                                                                                                                                                                      Pointer.Kind.MutRef,
                                                                                                                                                                      M.deref (|
                                                                                                                                                                        M.borrow (|
                                                                                                                                                                          Pointer.Kind.MutRef,
                                                                                                                                                                          iter
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)
                                                                                                                                                                  ]
                                                                                                                                                                |)
                                                                                                                                                              |),
                                                                                                                                                              [
                                                                                                                                                                fun
                                                                                                                                                                    γ =>
                                                                                                                                                                  ltac:(M.monadic
                                                                                                                                                                    (let
                                                                                                                                                                          _ :=
                                                                                                                                                                      M.is_struct_tuple (|
                                                                                                                                                                        γ,
                                                                                                                                                                        "core::option::Option::None"
                                                                                                                                                                      |) in
                                                                                                                                                                    M.alloc (|
                                                                                                                                                                      M.never_to_any (|
                                                                                                                                                                        M.read (|
                                                                                                                                                                          M.break (||)
                                                                                                                                                                        |)
                                                                                                                                                                      |)
                                                                                                                                                                    |)));
                                                                                                                                                                fun
                                                                                                                                                                    γ =>
                                                                                                                                                                  ltac:(M.monadic
                                                                                                                                                                    (let
                                                                                                                                                                          γ0_0 :=
                                                                                                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                                                                                                        γ,
                                                                                                                                                                        "core::option::Option::Some",
                                                                                                                                                                        0
                                                                                                                                                                      |) in
                                                                                                                                                                    let
                                                                                                                                                                          γ1_0 :=
                                                                                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                                                                                        γ0_0,
                                                                                                                                                                        0
                                                                                                                                                                      |) in
                                                                                                                                                                    let
                                                                                                                                                                          γ1_1 :=
                                                                                                                                                                      M.SubPointer.get_tuple_field (|
                                                                                                                                                                        γ0_0,
                                                                                                                                                                        1
                                                                                                                                                                      |) in
                                                                                                                                                                    let
                                                                                                                                                                          γ1_0 :=
                                                                                                                                                                      M.read (|
                                                                                                                                                                        γ1_0
                                                                                                                                                                      |) in
                                                                                                                                                                    let
                                                                                                                                                                          p_at_x :=
                                                                                                                                                                      M.copy (|
                                                                                                                                                                        γ1_0
                                                                                                                                                                      |) in
                                                                                                                                                                    let
                                                                                                                                                                          γ1_1 :=
                                                                                                                                                                      M.read (|
                                                                                                                                                                        γ1_1
                                                                                                                                                                      |) in
                                                                                                                                                                    let
                                                                                                                                                                          p_at_z :=
                                                                                                                                                                      M.copy (|
                                                                                                                                                                        γ1_1
                                                                                                                                                                      |) in
                                                                                                                                                                    let~
                                                                                                                                                                          quotient :
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "*")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Challenge
                                                                                                                                                                          ] :=
                                                                                                                                                                      M.alloc (|
                                                                                                                                                                        M.call_closure (|
                                                                                                                                                                          Challenge,
                                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                                            "core::ops::arith::Div",
                                                                                                                                                                            Challenge,
                                                                                                                                                                            [],
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ],
                                                                                                                                                                            "div",
                                                                                                                                                                            [],
                                                                                                                                                                            []
                                                                                                                                                                          |),
                                                                                                                                                                          [
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              Challenge,
                                                                                                                                                                              M.get_trait_method (|
                                                                                                                                                                                "core::ops::arith::Add",
                                                                                                                                                                                Challenge,
                                                                                                                                                                                [],
                                                                                                                                                                                [
                                                                                                                                                                                  Val
                                                                                                                                                                                ],
                                                                                                                                                                                "add",
                                                                                                                                                                                [],
                                                                                                                                                                                []
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                M.call_closure (|
                                                                                                                                                                                  Challenge,
                                                                                                                                                                                  M.get_trait_method (|
                                                                                                                                                                                    "core::ops::arith::Neg",
                                                                                                                                                                                    Challenge,
                                                                                                                                                                                    [],
                                                                                                                                                                                    [],
                                                                                                                                                                                    "neg",
                                                                                                                                                                                    [],
                                                                                                                                                                                    []
                                                                                                                                                                                  |),
                                                                                                                                                                                  [
                                                                                                                                                                                    M.read (|
                                                                                                                                                                                      p_at_z
                                                                                                                                                                                    |)
                                                                                                                                                                                  ]
                                                                                                                                                                                |);
                                                                                                                                                                                M.read (|
                                                                                                                                                                                  p_at_x
                                                                                                                                                                                |)
                                                                                                                                                                              ]
                                                                                                                                                                            |);
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              Challenge,
                                                                                                                                                                              M.get_trait_method (|
                                                                                                                                                                                "core::ops::arith::Add",
                                                                                                                                                                                Challenge,
                                                                                                                                                                                [],
                                                                                                                                                                                [
                                                                                                                                                                                  Val
                                                                                                                                                                                ],
                                                                                                                                                                                "add",
                                                                                                                                                                                [],
                                                                                                                                                                                []
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                M.call_closure (|
                                                                                                                                                                                  Challenge,
                                                                                                                                                                                  M.get_trait_method (|
                                                                                                                                                                                    "core::ops::arith::Neg",
                                                                                                                                                                                    Challenge,
                                                                                                                                                                                    [],
                                                                                                                                                                                    [],
                                                                                                                                                                                    "neg",
                                                                                                                                                                                    [],
                                                                                                                                                                                    []
                                                                                                                                                                                  |),
                                                                                                                                                                                  [
                                                                                                                                                                                    M.read (|
                                                                                                                                                                                      M.deref (|
                                                                                                                                                                                        M.read (|
                                                                                                                                                                                          z
                                                                                                                                                                                        |)
                                                                                                                                                                                      |)
                                                                                                                                                                                    |)
                                                                                                                                                                                  ]
                                                                                                                                                                                |);
                                                                                                                                                                                M.read (|
                                                                                                                                                                                  x
                                                                                                                                                                                |)
                                                                                                                                                                              ]
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                        |)
                                                                                                                                                                      |) in
                                                                                                                                                                    let~
                                                                                                                                                                          _ :
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "*")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Ty.tuple
                                                                                                                                                                              []
                                                                                                                                                                          ] :=
                                                                                                                                                                      M.alloc (|
                                                                                                                                                                        M.call_closure (|
                                                                                                                                                                          Ty.tuple
                                                                                                                                                                            [],
                                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                                            "core::ops::arith::AddAssign",
                                                                                                                                                                            Challenge,
                                                                                                                                                                            [],
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ],
                                                                                                                                                                            "add_assign",
                                                                                                                                                                            [],
                                                                                                                                                                            []
                                                                                                                                                                          |),
                                                                                                                                                                          [
                                                                                                                                                                            M.borrow (|
                                                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                                                              M.deref (|
                                                                                                                                                                                M.read (|
                                                                                                                                                                                  ro
                                                                                                                                                                                |)
                                                                                                                                                                              |)
                                                                                                                                                                            |);
                                                                                                                                                                            M.call_closure (|
                                                                                                                                                                              Challenge,
                                                                                                                                                                              M.get_trait_method (|
                                                                                                                                                                                "core::ops::arith::Mul",
                                                                                                                                                                                Challenge,
                                                                                                                                                                                [],
                                                                                                                                                                                [
                                                                                                                                                                                  Challenge
                                                                                                                                                                                ],
                                                                                                                                                                                "mul",
                                                                                                                                                                                [],
                                                                                                                                                                                []
                                                                                                                                                                              |),
                                                                                                                                                                              [
                                                                                                                                                                                M.read (|
                                                                                                                                                                                  M.deref (|
                                                                                                                                                                                    M.read (|
                                                                                                                                                                                      alpha_pow
                                                                                                                                                                                    |)
                                                                                                                                                                                  |)
                                                                                                                                                                                |);
                                                                                                                                                                                M.read (|
                                                                                                                                                                                  quotient
                                                                                                                                                                                |)
                                                                                                                                                                              ]
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                        |)
                                                                                                                                                                      |) in
                                                                                                                                                                    let~
                                                                                                                                                                          _ :
                                                                                                                                                                        Ty.apply
                                                                                                                                                                          (Ty.path
                                                                                                                                                                            "*")
                                                                                                                                                                          []
                                                                                                                                                                          [
                                                                                                                                                                            Ty.tuple
                                                                                                                                                                              []
                                                                                                                                                                          ] :=
                                                                                                                                                                      M.alloc (|
                                                                                                                                                                        M.call_closure (|
                                                                                                                                                                          Ty.tuple
                                                                                                                                                                            [],
                                                                                                                                                                          M.get_trait_method (|
                                                                                                                                                                            "core::ops::arith::MulAssign",
                                                                                                                                                                            Challenge,
                                                                                                                                                                            [],
                                                                                                                                                                            [
                                                                                                                                                                              Challenge
                                                                                                                                                                            ],
                                                                                                                                                                            "mul_assign",
                                                                                                                                                                            [],
                                                                                                                                                                            []
                                                                                                                                                                          |),
                                                                                                                                                                          [
                                                                                                                                                                            M.borrow (|
                                                                                                                                                                              Pointer.Kind.MutRef,
                                                                                                                                                                              M.deref (|
                                                                                                                                                                                M.read (|
                                                                                                                                                                                  alpha_pow
                                                                                                                                                                                |)
                                                                                                                                                                              |)
                                                                                                                                                                            |);
                                                                                                                                                                            M.read (|
                                                                                                                                                                              alpha
                                                                                                                                                                            |)
                                                                                                                                                                          ]
                                                                                                                                                                        |)
                                                                                                                                                                      |) in
                                                                                                                                                                    M.alloc (|
                                                                                                                                                                      Value.Tuple
                                                                                                                                                                        []
                                                                                                                                                                    |)))
                                                                                                                                                              ]
                                                                                                                                                            |) in
                                                                                                                                                          M.alloc (|
                                                                                                                                                            Value.Tuple
                                                                                                                                                              []
                                                                                                                                                          |)))
                                                                                                                                                      |)))
                                                                                                                                                ]
                                                                                                                                              |))))
                                                                                                                                      ]
                                                                                                                                    |) in
                                                                                                                                  M.alloc (|
                                                                                                                                    Value.Tuple
                                                                                                                                      []
                                                                                                                                  |)))
                                                                                                                              |)))
                                                                                                                        ]
                                                                                                                      |))))
                                                                                                              ]
                                                                                                            |)))
                                                                                                      ]
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    Value.Tuple
                                                                                                      []
                                                                                                  |)))
                                                                                              |)))
                                                                                        ]
                                                                                      |))))
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |)))
                                                                      |)))
                                                                ]
                                                              |)) in
                                                          let~ _ :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [ Ty.tuple [] ] :=
                                                            M.match_operator (|
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [ Ty.tuple [] ],
                                                              M.alloc (| Value.Tuple [] |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ :=
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::option::Option")
                                                                            []
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Challenge;
                                                                                  Challenge
                                                                                ]
                                                                            ],
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::collections::btree::map::BTreeMap")
                                                                              []
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Challenge
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            "remove",
                                                                            [],
                                                                            [ Ty.path "usize" ]
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.MutRef,
                                                                              reduced_openings
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.deref (|
                                                                                        M.read (|
                                                                                          self
                                                                                        |)
                                                                                      |),
                                                                                      "p3_fri::two_adic_pcs::TwoAdicFriPcs",
                                                                                      "fri"
                                                                                    |),
                                                                                    "p3_fri::config::FriConfig",
                                                                                    "log_blowup"
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |) in
                                                                    let γ0_0 :=
                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                        γ,
                                                                        "core::option::Option::Some",
                                                                        0
                                                                      |) in
                                                                    let γ1_0 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ0_0,
                                                                        0
                                                                      |) in
                                                                    let γ1_1 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ0_0,
                                                                        1
                                                                      |) in
                                                                    let _alpha_pow :=
                                                                      M.copy (| γ1_0 |) in
                                                                    let ro := M.copy (| γ1_1 |) in
                                                                    let~ _ :
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [ Ty.tuple [] ] :=
                                                                      M.match_operator (|
                                                                        Ty.apply
                                                                          (Ty.path "*")
                                                                          []
                                                                          [ Ty.tuple [] ],
                                                                        M.alloc (|
                                                                          Value.Tuple []
                                                                        |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let γ :=
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    UnOp.not (|
                                                                                      M.call_closure (|
                                                                                        Ty.path
                                                                                          "bool",
                                                                                        M.get_trait_method (|
                                                                                          "p3_field::field::Field",
                                                                                          Challenge,
                                                                                          [],
                                                                                          [],
                                                                                          "is_zero",
                                                                                          [],
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            ro
                                                                                          |)
                                                                                        ]
                                                                                      |)
                                                                                    |)
                                                                                  |)) in
                                                                              let _ :=
                                                                                is_constant_or_break_match (|
                                                                                  M.read (| γ |),
                                                                                  Value.Bool true
                                                                                |) in
                                                                              M.alloc (|
                                                                                M.never_to_any (|
                                                                                  M.call_closure (|
                                                                                    Ty.path "never",
                                                                                    M.get_function (|
                                                                                      "core::panicking::panic",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      mk_str (|
                                                                                        "assertion failed: ro.is_zero()"
                                                                                      |)
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |)));
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (M.alloc (|
                                                                                Value.Tuple []
                                                                              |)))
                                                                        ]
                                                                      |) in
                                                                    M.alloc (| Value.Tuple [] |)));
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (M.alloc (| Value.Tuple [] |)))
                                                              ]
                                                            |) in
                                                          M.alloc (|
                                                            Value.StructTuple
                                                              "core::result::Result::Ok"
                                                              [
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.tuple
                                                                        [ Ty.path "usize"; Challenge
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::map::Map")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::iter::adapters::rev::Rev")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::collections::btree::map::IntoIter")
                                                                              []
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Challenge
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ];
                                                                        Ty.function
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Challenge;
                                                                                        Challenge
                                                                                      ]
                                                                                  ]
                                                                              ]
                                                                          ]
                                                                          (Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Challenge
                                                                            ])
                                                                      ],
                                                                    [],
                                                                    [],
                                                                    "collect",
                                                                    [],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Challenge
                                                                            ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ]
                                                                    ]
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::map::Map")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::iter::adapters::rev::Rev")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::collections::btree::map::IntoIter")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Challenge;
                                                                                      Challenge
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ];
                                                                          Ty.function
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Challenge;
                                                                                          Challenge
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            (Ty.tuple
                                                                              [
                                                                                Ty.path "usize";
                                                                                Challenge
                                                                              ])
                                                                        ],
                                                                      M.get_trait_method (|
                                                                        "core::iter::traits::iterator::Iterator",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::iter::adapters::rev::Rev")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::collections::btree::map::IntoIter")
                                                                              []
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Challenge
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ]
                                                                          ],
                                                                        [],
                                                                        [],
                                                                        "map",
                                                                        [],
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.path "usize";
                                                                              Challenge
                                                                            ];
                                                                          Ty.function
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize";
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Challenge;
                                                                                          Challenge
                                                                                        ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            (Ty.tuple
                                                                              [
                                                                                Ty.path "usize";
                                                                                Challenge
                                                                              ])
                                                                        ]
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::iter::adapters::rev::Rev")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::collections::btree::map::IntoIter")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Challenge;
                                                                                      Challenge
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ],
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::collections::btree::map::IntoIter")
                                                                              []
                                                                              [
                                                                                Ty.path "usize";
                                                                                Ty.tuple
                                                                                  [
                                                                                    Challenge;
                                                                                    Challenge
                                                                                  ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            [],
                                                                            [],
                                                                            "rev",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::collections::btree::map::IntoIter")
                                                                                []
                                                                                [
                                                                                  Ty.path "usize";
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Challenge;
                                                                                      Challenge
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::collect::IntoIterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "alloc::collections::btree::map::BTreeMap")
                                                                                  []
                                                                                  [
                                                                                    Ty.path "usize";
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Challenge;
                                                                                        Challenge
                                                                                      ];
                                                                                    Ty.path
                                                                                      "alloc::alloc::Global"
                                                                                  ],
                                                                                [],
                                                                                [],
                                                                                "into_iter",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (|
                                                                                  reduced_openings
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.closure
                                                                          (fun γ =>
                                                                            ltac:(M.monadic
                                                                              match γ with
                                                                              | [ α0 ] =>
                                                                                ltac:(M.monadic
                                                                                  (M.match_operator (|
                                                                                    Ty.apply
                                                                                      (Ty.path "*")
                                                                                      []
                                                                                      [
                                                                                        Ty.function
                                                                                          [
                                                                                            Ty.tuple
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.path
                                                                                                      "usize";
                                                                                                    Ty.tuple
                                                                                                      [
                                                                                                        Challenge;
                                                                                                        Challenge
                                                                                                      ]
                                                                                                  ]
                                                                                              ]
                                                                                          ]
                                                                                          (Ty.tuple
                                                                                            [
                                                                                              Ty.path
                                                                                                "usize";
                                                                                              Challenge
                                                                                            ])
                                                                                      ],
                                                                                    M.alloc (|
                                                                                      α0
                                                                                    |),
                                                                                    [
                                                                                      fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          (let
                                                                                                γ0_0 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ,
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                γ0_1 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ,
                                                                                              1
                                                                                            |) in
                                                                                          let
                                                                                                log_height :=
                                                                                            M.copy (|
                                                                                              γ0_0
                                                                                            |) in
                                                                                          let
                                                                                                γ1_0 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ0_1,
                                                                                              0
                                                                                            |) in
                                                                                          let
                                                                                                γ1_1 :=
                                                                                            M.SubPointer.get_tuple_field (|
                                                                                              γ0_1,
                                                                                              1
                                                                                            |) in
                                                                                          let
                                                                                                _alpha_pow :=
                                                                                            M.copy (|
                                                                                              γ1_0
                                                                                            |) in
                                                                                          let ro :=
                                                                                            M.copy (|
                                                                                              γ1_1
                                                                                            |) in
                                                                                          Value.Tuple
                                                                                            [
                                                                                              M.read (|
                                                                                                log_height
                                                                                              |);
                                                                                              M.read (|
                                                                                                ro
                                                                                              |)
                                                                                            ]))
                                                                                    ]
                                                                                  |)))
                                                                              | _ =>
                                                                                M.impossible
                                                                                  "wrong number of arguments"
                                                                              end))
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                          |)
                                                        |)))
                                                  ]
                                                |)))
                                          ]
                                        |)))
                                    | _ => M.impossible "wrong number of arguments"
                                    end))
                            ]
                          |)
                        ]
                      |)
                    |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ0_0 :=
                            M.SubPointer.get_struct_tuple_field (|
                              γ,
                              "core::ops::control_flow::ControlFlow::Break",
                              0
                            |) in
                          let residual := M.copy (| γ0_0 |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                M.return_ (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "core::result::Result")
                                      []
                                      [
                                        Ty.tuple [];
                                        Ty.apply
                                          (Ty.path "p3_fri::verifier::FriError")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_commit::mmcs::Mmcs"
                                              []
                                              [ Challenge ]
                                              FriMmcs
                                              "Error";
                                            Ty.associated_in_trait
                                              "p3_commit::mmcs::Mmcs"
                                              []
                                              [ Val ]
                                              InputMmcs
                                              "Error"
                                          ]
                                      ],
                                    M.get_trait_method (|
                                      "core::ops::try_trait::FromResidual",
                                      Ty.apply
                                        (Ty.path "core::result::Result")
                                        []
                                        [
                                          Ty.tuple [];
                                          Ty.apply
                                            (Ty.path "p3_fri::verifier::FriError")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [ Challenge ]
                                                FriMmcs
                                                "Error";
                                              Ty.associated_in_trait
                                                "p3_commit::mmcs::Mmcs"
                                                []
                                                [ Val ]
                                                InputMmcs
                                                "Error"
                                            ]
                                        ],
                                      [],
                                      [
                                        Ty.apply
                                          (Ty.path "core::result::Result")
                                          []
                                          [
                                            Ty.path "core::convert::Infallible";
                                            Ty.apply
                                              (Ty.path "p3_fri::verifier::FriError")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_commit::mmcs::Mmcs"
                                                  []
                                                  [ Challenge ]
                                                  FriMmcs
                                                  "Error";
                                                Ty.associated_in_trait
                                                  "p3_commit::mmcs::Mmcs"
                                                  []
                                                  [ Val ]
                                                  InputMmcs
                                                  "Error"
                                              ]
                                          ]
                                      ],
                                      "from_residual",
                                      [],
                                      []
                                    |),
                                    [ M.read (| residual |) ]
                                  |)
                                |)
                              |)
                            |)
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let γ0_0 :=
                            M.SubPointer.get_struct_tuple_field (|
                              γ,
                              "core::ops::control_flow::ControlFlow::Continue",
                              0
                            |) in
                          let val := M.copy (| γ0_0 |) in
                          val))
                    ]
                  |) in
                M.alloc (| Value.StructTuple "core::result::Result::Ok" [ Value.Tuple [] ] |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (Val Dft InputMmcs FriMmcs Challenge Challenger : Ty.t),
      M.IsTraitInstance
        "p3_commit::pcs::Pcs"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) [ Challenge; Challenger ]
        (Self Val Dft InputMmcs FriMmcs Challenge Challenger)
        (* Instance *)
        [
          ("Domain", InstanceField.Ty (_Domain Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("Commitment",
            InstanceField.Ty (_Commitment Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("ProverData",
            InstanceField.Ty (_ProverData Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("EvaluationsOnDomain",
            InstanceField.Ty (_EvaluationsOnDomain Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("Proof", InstanceField.Ty (_Proof Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("Error", InstanceField.Ty (_Error Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("natural_domain_for_degree",
            InstanceField.Method
              (natural_domain_for_degree Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("commit", InstanceField.Method (commit Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("get_evaluations_on_domain",
            InstanceField.Method
              (get_evaluations_on_domain Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("open", InstanceField.Method (open Val Dft InputMmcs FriMmcs Challenge Challenger));
          ("verify", InstanceField.Method (verify Val Dft InputMmcs FriMmcs Challenge Challenger))
        ].
  End Impl_p3_commit_pcs_Pcs_where_p3_field_field_TwoAdicField_Val_where_p3_dft_traits_TwoAdicSubgroupDft_Dft_Val_where_p3_commit_mmcs_Mmcs_InputMmcs_Val_where_p3_commit_mmcs_Mmcs_FriMmcs_Challenge_where_p3_field_field_TwoAdicField_Challenge_where_p3_field_field_ExtensionField_Challenge_Val_where_p3_challenger_FieldChallenger_Challenger_Val_where_p3_challenger_CanObserve_Challenger_associated_in_trait_p3_commit_mmcs_Mmcs__Challenge_FriMmcs_Commitment_where_p3_challenger_grinding_challenger_GrindingChallenger_Challenger_Challenge_Challenger_for_p3_fri_two_adic_pcs_TwoAdicFriPcs_Val_Dft_InputMmcs_FriMmcs.
  
  (* #[instrument(skip_all)] *)
  Definition compute_inverse_denominators
      (ε : list Value.t)
      (τ : list Ty.t)
      (α : list Value.t)
      : M :=
    match ε, τ, α with
    | [], [ F; EF; M_ ], [ mats_and_points; coset_shift ] =>
      ltac:(M.monadic
        (let mats_and_points := M.alloc (| mats_and_points |) in
        let coset_shift := M.alloc (| coset_shift |) in
        M.catch_return
          (Ty.apply
            (Ty.path "p3_util::linear_map::LinearMap")
            []
            [ EF; Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ]
            ]) (|
          ltac:(M.monadic
            (M.read (|
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] := M.alloc (| Value.Tuple [] |) in
              let __tracing_attr_span := M.copy (| Value.DeclaredButUndefined |) in
              let __tracing_attr_guard := M.copy (| Value.DeclaredButUndefined |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              LogicalOp.or (|
                                LogicalOp.and (|
                                  M.call_closure (|
                                    Ty.path "bool",
                                    M.get_trait_method (|
                                      "core::cmp::PartialOrd",
                                      Ty.path "tracing_core::metadata::Level",
                                      [],
                                      [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                      "le",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        get_associated_constant (|
                                          Ty.path "tracing_core::metadata::Level",
                                          "INFO",
                                          Ty.path "tracing_core::metadata::Level"
                                        |)
                                      |);
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        get_constant (|
                                          "tracing::level_filters::STATIC_MAX_LEVEL",
                                          Ty.path "tracing_core::metadata::LevelFilter"
                                        |)
                                      |)
                                    ]
                                  |),
                                  ltac:(M.monadic
                                    (M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialOrd",
                                        Ty.path "tracing_core::metadata::Level",
                                        [],
                                        [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                        "le",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_associated_constant (|
                                            Ty.path "tracing_core::metadata::Level",
                                            "INFO",
                                            Ty.path "tracing_core::metadata::Level"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing_core::metadata::LevelFilter",
                                              M.get_associated_function (|
                                                Ty.path "tracing_core::metadata::LevelFilter",
                                                "current",
                                                [],
                                                []
                                              |),
                                              []
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)))
                                |),
                                ltac:(M.monadic (Value.Bool false))
                              |)
                            |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.write (|
                              __tracing_attr_span,
                              M.read (|
                                let~ interest :
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing_core::subscriber::Interest",
                                      M.get_associated_function (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        "never",
                                        [],
                                        []
                                      |),
                                      []
                                    |)
                                  |) in
                                M.match_operator (|
                                  Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                  M.alloc (| Value.Tuple [] |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ :=
                                          M.use
                                            (M.alloc (|
                                              LogicalOp.and (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_trait_method (|
                                                        "core::cmp::PartialOrd",
                                                        Ty.path "tracing_core::metadata::Level",
                                                        [],
                                                        [
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter"
                                                        ],
                                                        "le",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          get_associated_constant (|
                                                            Ty.path "tracing_core::metadata::Level",
                                                            "INFO",
                                                            Ty.path "tracing_core::metadata::Level"
                                                          |)
                                                        |);
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          get_constant (|
                                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          |)
                                                        |)
                                                      ]
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "INFO",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::metadata::LevelFilter",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  "current",
                                                                  [],
                                                                  []
                                                                |),
                                                                []
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.read (|
                                                      let~ _ :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.tuple [] ] :=
                                                        M.alloc (|
                                                          M.write (|
                                                            interest,
                                                            M.call_closure (|
                                                              Ty.path
                                                                "tracing_core::subscriber::Interest",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                "interest",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_fri::two_adic_pcs::compute_inverse_denominators::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        UnOp.not (|
                                                          M.call_closure (|
                                                            Ty.path "bool",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::subscriber::Interest",
                                                              "is_never",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                interest
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)))
                                                |),
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.path "bool",
                                                    M.get_function (|
                                                      "tracing::__macro_support::__is_enabled",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::metadata::Metadata"
                                                              ],
                                                            M.get_trait_method (|
                                                              "tracing_core::callsite::Callsite",
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite",
                                                              [],
                                                              [],
                                                              "metadata",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.read (|
                                                                    get_constant (|
                                                                      "p3_fri::two_adic_pcs::compute_inverse_denominators::__CALLSITE",
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::callsite::DefaultCallsite"
                                                                        ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.read (| interest |)
                                                    ]
                                                  |)))
                                              |)
                                            |)) in
                                        let _ :=
                                          is_constant_or_break_match (|
                                            M.read (| γ |),
                                            Value.Bool true
                                          |) in
                                        let~ meta :
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ]
                                              ] :=
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [ Ty.path "tracing_core::metadata::Metadata" ],
                                              M.get_trait_method (|
                                                "tracing_core::callsite::Callsite",
                                                Ty.path "tracing_core::callsite::DefaultCallsite",
                                                [],
                                                [],
                                                "metadata",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.read (|
                                                      get_constant (|
                                                        "p3_fri::two_adic_pcs::compute_inverse_denominators::__CALLSITE",
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::callsite::DefaultCallsite"
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |) in
                                        M.alloc (|
                                          M.call_closure (|
                                            Ty.path "tracing::span::Span",
                                            M.get_associated_function (|
                                              Ty.path "tracing::span::Span",
                                              "new",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| meta |) |)
                                              |);
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.path "tracing_core::field::ValueSet",
                                                        M.get_associated_function (|
                                                          Ty.path "tracing_core::field::FieldSet",
                                                          "value_set",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 0 ]
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::Field"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.dyn
                                                                              [
                                                                                ("tracing_core::field::Value::Trait",
                                                                                  [])
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::field::FieldSet"
                                                                  ],
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata",
                                                                  "fields",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (| M.read (| meta |) |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.alloc (| Value.Array [] |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              |)
                                            ]
                                          |)
                                        |)));
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let~ span :
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [ Ty.path "tracing::span::Span" ] :=
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_function (|
                                                "tracing::__macro_support::__disabled_span",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_fri::two_adic_pcs::compute_inverse_denominators::__CALLSITE",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |) in
                                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                          M.alloc (| Value.Tuple [] |) in
                                        span))
                                  ]
                                |)
                              |)
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.write (|
                              __tracing_attr_guard,
                              M.call_closure (|
                                Ty.path "tracing::span::Entered",
                                M.get_associated_function (|
                                  Ty.path "tracing::span::Span",
                                  "enter",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, __tracing_attr_span |) ]
                              |)
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.use (M.alloc (| Value.Bool false |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        M.alloc (|
                          M.never_to_any (|
                            M.read (|
                              let~ __tracing_attr_fake_return :
                                  Ty.apply
                                    (Ty.path "*")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_util::linear_map::LinearMap")
                                        []
                                        [
                                          EF;
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [ EF; Ty.path "alloc::alloc::Global" ]
                                        ]
                                    ] :=
                                M.alloc (|
                                  M.never_to_any (|
                                    M.read (|
                                      M.loop (|
                                        Ty.apply (Ty.path "*") [] [ Ty.path "never" ],
                                        ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                      |)
                                    |)
                                  |)
                                |) in
                              M.return_ (| M.read (| __tracing_attr_fake_return |) |)
                            |)
                          |)
                        |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              let~ max_log_height_for_point :
                  Ty.apply
                    (Ty.path "*")
                    []
                    [ Ty.apply (Ty.path "p3_util::linear_map::LinearMap") [] [ EF; Ty.path "usize" ]
                    ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.apply (Ty.path "p3_util::linear_map::LinearMap") [] [ EF; Ty.path "usize" ],
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "p3_util::linear_map::LinearMap")
                        []
                        [ EF; Ty.path "usize" ],
                      "new",
                      [],
                      []
                    |),
                    []
                  |)
                |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.use
                  (M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::slice::iter::Iter")
                          []
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ M_; Ty.path "alloc::alloc::Global" ];
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [ EF; Ty.path "alloc::alloc::Global" ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::collect::IntoIterator",
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [ M_; Ty.path "alloc::alloc::Global" ];
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ EF; Ty.path "alloc::alloc::Global" ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                ]
                            ],
                          [],
                          [],
                          "into_iter",
                          [],
                          []
                        |),
                        [ M.read (| mats_and_points |) ]
                      |)
                    |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let iter := M.copy (| γ |) in
                          M.loop (|
                            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                            ltac:(M.monadic
                              (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                M.match_operator (|
                                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::option::Option")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [ M_; Ty.path "alloc::alloc::Global" ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ EF; Ty.path "alloc::alloc::Global" ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::iter::traits::iterator::Iterator",
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ M_; Ty.path "alloc::alloc::Global" ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ EF; Ty.path "alloc::alloc::Global" ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        [],
                                        [],
                                        "next",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.MutRef,
                                          M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                        |)
                                      ]
                                    |)
                                  |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let _ :=
                                          M.is_struct_tuple (| γ, "core::option::Option::None" |) in
                                        M.alloc (|
                                          M.never_to_any (| M.read (| M.break (||) |) |)
                                        |)));
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 :=
                                          M.SubPointer.get_struct_tuple_field (|
                                            γ,
                                            "core::option::Option::Some",
                                            0
                                          |) in
                                        let γ0_0 := M.read (| γ0_0 |) in
                                        let γ2_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                        let γ2_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                        let mats := M.alloc (| γ2_0 |) in
                                        let points := M.alloc (| γ2_1 |) in
                                        M.use
                                          (M.match_operator (|
                                            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::iter::adapters::zip::Zip")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [ M_ ];
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [ EF; Ty.path "alloc::alloc::Global" ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "core::iter::traits::collect::IntoIterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::zip::Zip")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [ M_ ];
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ EF; Ty.path "alloc::alloc::Global" ]
                                                        ]
                                                    ],
                                                  [],
                                                  [],
                                                  "into_iter",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "core::iter::adapters::zip::Zip")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [ M_ ];
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [ EF; Ty.path "alloc::alloc::Global" ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::iter::traits::iterator::Iterator",
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [ M_ ],
                                                      [],
                                                      [],
                                                      "zip",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    EF;
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ]
                                                    |),
                                                    [
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [ M_ ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::collect::IntoIterator",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [ M_; Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ],
                                                          [],
                                                          [],
                                                          "into_iter",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| mats |) ]
                                                      |);
                                                      M.read (| M.deref (| M.read (| points |) |) |)
                                                    ]
                                                  |)
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let iter := M.copy (| γ |) in
                                                  M.loop (|
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                    ltac:(M.monadic
                                                      (let~ _ :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.tuple [] ] :=
                                                        M.match_operator (|
                                                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [ M_ ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              EF;
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ],
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [ M_ ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            EF;
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ]
                                                                  ],
                                                                [],
                                                                [],
                                                                "next",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.MutRef,
                                                                  M.deref (|
                                                                    M.borrow (|
                                                                      Pointer.Kind.MutRef,
                                                                      iter
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let _ :=
                                                                  M.is_struct_tuple (|
                                                                    γ,
                                                                    "core::option::Option::None"
                                                                  |) in
                                                                M.alloc (|
                                                                  M.never_to_any (|
                                                                    M.read (| M.break (||) |)
                                                                  |)
                                                                |)));
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let γ0_0 :=
                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                    γ,
                                                                    "core::option::Option::Some",
                                                                    0
                                                                  |) in
                                                                let γ1_0 :=
                                                                  M.SubPointer.get_tuple_field (|
                                                                    γ0_0,
                                                                    0
                                                                  |) in
                                                                let γ1_1 :=
                                                                  M.SubPointer.get_tuple_field (|
                                                                    γ0_0,
                                                                    1
                                                                  |) in
                                                                let mat := M.copy (| γ1_0 |) in
                                                                let points_for_mat :=
                                                                  M.copy (| γ1_1 |) in
                                                                let~ log_height :
                                                                    Ty.apply
                                                                      (Ty.path "*")
                                                                      []
                                                                      [ Ty.path "usize" ] :=
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.path "usize",
                                                                      M.get_function (|
                                                                        "p3_util::log2_strict_usize",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          Ty.path "usize",
                                                                          M.get_trait_method (|
                                                                            "p3_matrix::Matrix",
                                                                            M_,
                                                                            [],
                                                                            [ F ],
                                                                            "height",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.read (| mat |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |) in
                                                                M.use
                                                                  (M.match_operator (|
                                                                    Ty.apply
                                                                      (Ty.path "*")
                                                                      []
                                                                      [ Ty.tuple [] ],
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [ EF ],
                                                                        M.get_trait_method (|
                                                                          "core::iter::traits::collect::IntoIterator",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  EF;
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ]
                                                                            ],
                                                                          [],
                                                                          [],
                                                                          "into_iter",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.read (|
                                                                            points_for_mat
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |),
                                                                    [
                                                                      fun γ =>
                                                                        ltac:(M.monadic
                                                                          (let iter :=
                                                                            M.copy (| γ |) in
                                                                          M.loop (|
                                                                            Ty.apply
                                                                              (Ty.path "*")
                                                                              []
                                                                              [ Ty.tuple [] ],
                                                                            ltac:(M.monadic
                                                                              (let~ _ :
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [ Ty.tuple []
                                                                                    ] :=
                                                                                M.match_operator (|
                                                                                  Ty.apply
                                                                                    (Ty.path "*")
                                                                                    []
                                                                                    [ Ty.tuple [] ],
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [ EF ]
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::slice::iter::Iter")
                                                                                          []
                                                                                          [ EF ],
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |),
                                                                                  [
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let _ :=
                                                                                          M.is_struct_tuple (|
                                                                                            γ,
                                                                                            "core::option::Option::None"
                                                                                          |) in
                                                                                        M.alloc (|
                                                                                          M.never_to_any (|
                                                                                            M.read (|
                                                                                              M.break (||)
                                                                                            |)
                                                                                          |)
                                                                                        |)));
                                                                                    fun γ =>
                                                                                      ltac:(M.monadic
                                                                                        (let γ0_0 :=
                                                                                          M.SubPointer.get_struct_tuple_field (|
                                                                                            γ,
                                                                                            "core::option::Option::Some",
                                                                                            0
                                                                                          |) in
                                                                                        let γ0_0 :=
                                                                                          M.read (|
                                                                                            γ0_0
                                                                                          |) in
                                                                                        let z :=
                                                                                          M.copy (|
                                                                                            γ0_0
                                                                                          |) in
                                                                                        M.match_operator (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "*")
                                                                                            []
                                                                                            [
                                                                                              Ty.tuple
                                                                                                []
                                                                                            ],
                                                                                          M.alloc (|
                                                                                            Value.Tuple
                                                                                              []
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ :=
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::option::Option")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&mut")
                                                                                                            []
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "usize"
                                                                                                            ]
                                                                                                        ],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_util::linear_map::LinearMap")
                                                                                                          []
                                                                                                          [
                                                                                                            EF;
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ],
                                                                                                        "get_mut",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.MutRef,
                                                                                                          max_log_height_for_point
                                                                                                        |);
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.Ref,
                                                                                                          M.deref (|
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              z
                                                                                                            |)
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |) in
                                                                                                let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::option::Option::Some",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      lh :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                let~
                                                                                                      _ :
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "*")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.tuple
                                                                                                          []
                                                                                                      ] :=
                                                                                                  M.alloc (|
                                                                                                    M.write (|
                                                                                                      M.deref (|
                                                                                                        M.read (|
                                                                                                          lh
                                                                                                        |)
                                                                                                      |),
                                                                                                      M.call_closure (|
                                                                                                        Ty.path
                                                                                                          "usize",
                                                                                                        M.get_function (|
                                                                                                          "core::cmp::max",
                                                                                                          [],
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ]
                                                                                                        |),
                                                                                                        [
                                                                                                          M.read (|
                                                                                                            M.deref (|
                                                                                                              M.read (|
                                                                                                                lh
                                                                                                              |)
                                                                                                            |)
                                                                                                          |);
                                                                                                          M.read (|
                                                                                                            log_height
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  Value.Tuple
                                                                                                    []
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let~
                                                                                                      _ :
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "*")
                                                                                                      []
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::option::Option")
                                                                                                          []
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ]
                                                                                                      ] :=
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::option::Option")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "usize"
                                                                                                        ],
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "p3_util::linear_map::LinearMap")
                                                                                                          []
                                                                                                          [
                                                                                                            EF;
                                                                                                            Ty.path
                                                                                                              "usize"
                                                                                                          ],
                                                                                                        "insert",
                                                                                                        [],
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.borrow (|
                                                                                                          Pointer.Kind.MutRef,
                                                                                                          max_log_height_for_point
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          z
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          log_height
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  Value.Tuple
                                                                                                    []
                                                                                                |)))
                                                                                          ]
                                                                                        |)))
                                                                                  ]
                                                                                |) in
                                                                              M.alloc (|
                                                                                Value.Tuple []
                                                                              |)))
                                                                          |)))
                                                                    ]
                                                                  |))))
                                                          ]
                                                        |) in
                                                      M.alloc (| Value.Tuple [] |)))
                                                  |)))
                                            ]
                                          |))))
                                  ]
                                |) in
                              M.alloc (| Value.Tuple [] |)))
                          |)))
                    ]
                  |)) in
              let~ max_log_height : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                M.copy (|
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ Ty.path "usize" ],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "core::option::Option")
                          []
                          [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ],
                        "unwrap",
                        [],
                        []
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::option::Option")
                            []
                            [ Ty.apply (Ty.path "&") [] [ Ty.path "usize" ] ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.associated_unknown,
                            [],
                            [],
                            "max",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_unknown,
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "p3_util::linear_map::LinearMap")
                                  []
                                  [ EF; Ty.path "usize" ],
                                "values",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, max_log_height_for_point |) ]
                            |)
                          ]
                        |)
                      ]
                    |)
                  |)
                |) in
              let~ subgroup :
                  Ty.apply
                    (Ty.path "*")
                    []
                    [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ]
                    ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ],
                    M.get_trait_method (|
                      "itertools::Itertools",
                      Ty.associated_unknown,
                      [],
                      [],
                      "collect_vec",
                      [],
                      []
                    |),
                    [
                      M.call_closure (|
                        Ty.associated_unknown,
                        M.get_function (|
                          "p3_field::helpers::cyclic_subgroup_coset_known_order",
                          [],
                          [ F ]
                        |),
                        [
                          M.call_closure (|
                            F,
                            M.get_trait_method (|
                              "p3_field::field::TwoAdicField",
                              F,
                              [],
                              [],
                              "two_adic_generator",
                              [],
                              []
                            |),
                            [ M.read (| max_log_height |) ]
                          |);
                          M.read (| coset_shift |);
                          M.call_closure (|
                            Ty.path "usize",
                            BinOp.Wrap.shl,
                            [ Value.Integer IntegerKind.Usize 1; M.read (| max_log_height |) ]
                          |)
                        ]
                      |)
                    ]
                  |)
                |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.tuple [],
                    M.get_function (| "p3_util::reverse_slice_index_bits", [], [ F ] |),
                    [
                      M.borrow (|
                        Pointer.Kind.MutRef,
                        M.deref (|
                          M.call_closure (|
                            Ty.apply (Ty.path "&mut") [] [ Ty.apply (Ty.path "slice") [] [ F ] ],
                            M.get_trait_method (|
                              "core::ops::deref::DerefMut",
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ F; Ty.path "alloc::alloc::Global" ],
                              [],
                              [],
                              "deref_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.MutRef,
                                M.deref (| M.borrow (| Pointer.Kind.MutRef, subgroup |) |)
                              |)
                            ]
                          |)
                        |)
                      |)
                    ]
                  |)
                |) in
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "p3_util::linear_map::LinearMap")
                    []
                    [
                      EF;
                      Ty.apply (Ty.path "alloc::vec::Vec") [] [ EF; Ty.path "alloc::alloc::Global" ]
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [ Ty.tuple [ EF; Ty.path "usize" ]; Ty.path "alloc::alloc::Global" ];
                        Ty.function
                          [ Ty.tuple [ Ty.tuple [ EF; Ty.path "usize" ] ] ]
                          (Ty.tuple
                            [
                              EF;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ EF; Ty.path "alloc::alloc::Global" ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "p3_util::linear_map::LinearMap")
                        []
                        [
                          EF;
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ EF; Ty.path "alloc::alloc::Global" ]
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [ Ty.tuple [ EF; Ty.path "usize" ]; Ty.path "alloc::alloc::Global" ];
                          Ty.function
                            [ Ty.tuple [ Ty.tuple [ EF; Ty.path "usize" ] ] ]
                            (Ty.tuple
                              [
                                EF;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ EF; Ty.path "alloc::alloc::Global" ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [ Ty.tuple [ EF; Ty.path "usize" ]; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.tuple
                            [
                              EF;
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [ EF; Ty.path "alloc::alloc::Global" ]
                            ];
                          Ty.function
                            [ Ty.tuple [ Ty.tuple [ EF; Ty.path "usize" ] ] ]
                            (Ty.tuple
                              [
                                EF;
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [ EF; Ty.path "alloc::alloc::Global" ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [ Ty.tuple [ EF; Ty.path "usize" ]; Ty.path "alloc::alloc::Global" ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "p3_util::linear_map::LinearMap")
                              []
                              [ EF; Ty.path "usize" ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [ M.read (| max_log_height_for_point |) ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [ Ty.tuple [ Ty.tuple [ EF; Ty.path "usize" ] ] ]
                                          (Ty.tuple
                                            [
                                              EF;
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [ EF; Ty.path "alloc::alloc::Global" ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                          let z := M.copy (| γ0_0 |) in
                                          let log_height := M.copy (| γ0_1 |) in
                                          Value.Tuple
                                            [
                                              M.read (| z |);
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [ EF; Ty.path "alloc::alloc::Global" ],
                                                M.get_function (|
                                                  "p3_field::batch_inverse::batch_multiplicative_inverse",
                                                  [],
                                                  [ EF ]
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [ Ty.apply (Ty.path "slice") [] [ EF ] ],
                                                        M.get_trait_method (|
                                                          "core::ops::deref::Deref",
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [ EF; Ty.path "alloc::alloc::Global" ],
                                                          [],
                                                          [],
                                                          "deref",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        EF;
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "itertools::Itertools",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::iter::adapters::map::Map")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [ F ];
                                                                          Ty.function
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path "&")
                                                                                    []
                                                                                    [ F ]
                                                                                ]
                                                                            ]
                                                                            EF
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "collect_vec",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::iter::adapters::map::Map")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              []
                                                                              [ F ];
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [ F ]
                                                                                  ]
                                                                              ]
                                                                              EF
                                                                          ],
                                                                        M.get_trait_method (|
                                                                          "core::iter::traits::iterator::Iterator",
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::slice::iter::Iter")
                                                                            []
                                                                            [ F ],
                                                                          [],
                                                                          [],
                                                                          "map",
                                                                          [],
                                                                          [
                                                                            EF;
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [ F ]
                                                                                  ]
                                                                              ]
                                                                              EF
                                                                          ]
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::slice::iter::Iter")
                                                                              []
                                                                              [ F ],
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path "slice")
                                                                                []
                                                                                [ F ],
                                                                              "iter",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.call_closure (|
                                                                                    Ty.apply
                                                                                      (Ty.path "&")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "slice")
                                                                                          []
                                                                                          [ F ]
                                                                                      ],
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::index::Index",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::vec::Vec")
                                                                                        []
                                                                                        [
                                                                                          F;
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ],
                                                                                      [],
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::ops::range::RangeTo")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "usize"
                                                                                          ]
                                                                                      ],
                                                                                      "index",
                                                                                      [],
                                                                                      []
                                                                                    |),
                                                                                    [
                                                                                      M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        subgroup
                                                                                      |);
                                                                                      Value.StructRecord
                                                                                        "core::ops::range::RangeTo"
                                                                                        [
                                                                                          ("end_",
                                                                                            M.call_closure (|
                                                                                              Ty.path
                                                                                                "usize",
                                                                                              BinOp.Wrap.shl,
                                                                                              [
                                                                                                Value.Integer
                                                                                                  IntegerKind.Usize
                                                                                                  1;
                                                                                                M.read (|
                                                                                                  log_height
                                                                                                |)
                                                                                              ]
                                                                                            |))
                                                                                        ]
                                                                                    ]
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |);
                                                                          M.closure
                                                                            (fun γ =>
                                                                              ltac:(M.monadic
                                                                                match γ with
                                                                                | [ α0 ] =>
                                                                                  ltac:(M.monadic
                                                                                    (M.match_operator (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "*")
                                                                                        []
                                                                                        [
                                                                                          Ty.function
                                                                                            [
                                                                                              Ty.tuple
                                                                                                [
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    []
                                                                                                    [
                                                                                                      F
                                                                                                    ]
                                                                                                ]
                                                                                            ]
                                                                                            EF
                                                                                        ],
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  γ :=
                                                                                              M.read (|
                                                                                                γ
                                                                                              |) in
                                                                                            let x :=
                                                                                              M.copy (|
                                                                                                γ
                                                                                              |) in
                                                                                            M.call_closure (|
                                                                                              EF,
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::arith::Sub",
                                                                                                EF,
                                                                                                [],
                                                                                                [ F
                                                                                                ],
                                                                                                "sub",
                                                                                                [],
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  z
                                                                                                |);
                                                                                                M.read (|
                                                                                                  x
                                                                                                |)
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)))
                                                                                | _ =>
                                                                                  M.impossible
                                                                                    "wrong number of arguments"
                                                                                end))
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            ]))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |)
            |)))
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_compute_inverse_denominators :
    M.IsFunction.C
      "p3_fri::two_adic_pcs::compute_inverse_denominators"
      compute_inverse_denominators.
  Admitted.
  Global Typeclasses Opaque compute_inverse_denominators.
End two_adic_pcs.
