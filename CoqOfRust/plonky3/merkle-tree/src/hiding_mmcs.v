(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module hiding_mmcs.
  (* StructRecord
    {
      name := "MerkleTreeHidingMmcs";
      const_params := [ "DIGEST_ELEMS"; "SALT_ELEMS" ];
      ty_params := [ "P"; "PW"; "H"; "C"; "R" ];
      fields :=
        [
          ("inner",
            Ty.apply
              (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
              [ DIGEST_ELEMS ]
              [ P; PW; H; C ]);
          ("rng", Ty.apply (Ty.path "core::cell::RefCell") [] [ R ])
        ];
    } *)
  
  Module Impl_core_clone_Clone_where_core_clone_Clone_P_where_core_clone_Clone_PW_where_core_clone_Clone_H_where_core_clone_Clone_C_where_core_clone_Clone_R_for_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
    Definition Self (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs")
        [ DIGEST_ELEMS; SALT_ELEMS ]
        [ P; PW; H; C; R ].
    
    (* Clone *)
    Definition clone
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructRecord
            "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs"
            [
              ("inner",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                    [ DIGEST_ELEMS ]
                    [ P; PW; H; C ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                      [ DIGEST_ELEMS ]
                      [ P; PW; H; C ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                            "inner"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("rng",
                M.call_closure (|
                  Ty.apply (Ty.path "core::cell::RefCell") [] [ R ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply (Ty.path "core::cell::RefCell") [] [ R ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                            "rng"
                          |)
                        |)
                      |)
                    |)
                  ]
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t),
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self DIGEST_ELEMS SALT_ELEMS P PW H C R)
        (* Instance *)
        [ ("clone", InstanceField.Method (clone DIGEST_ELEMS SALT_ELEMS P PW H C R)) ].
  End Impl_core_clone_Clone_where_core_clone_Clone_P_where_core_clone_Clone_PW_where_core_clone_Clone_H_where_core_clone_Clone_C_where_core_clone_Clone_R_for_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
  
  Module Impl_core_fmt_Debug_where_core_fmt_Debug_P_where_core_fmt_Debug_PW_where_core_fmt_Debug_H_where_core_fmt_Debug_C_where_core_fmt_Debug_R_for_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
    Definition Self (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs")
        [ DIGEST_ELEMS; SALT_ELEMS ]
        [ P; PW; H; C; R ].
    
    (* Debug *)
    Definition fmt
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [], [ self; f ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let f := M.alloc (| f |) in
          M.call_closure (|
            Ty.apply
              (Ty.path "core::result::Result")
              []
              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
            M.get_associated_function (|
              Ty.path "core::fmt::Formatter",
              "debug_struct_field2_finish",
              [],
              []
            |),
            [
              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "MerkleTreeHidingMmcs" |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "inner" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                        "inner"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "rng" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.alloc (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                            "rng"
                          |)
                        |)
                      |)
                    |)
                  |)
                |))
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t),
      M.IsTraitInstance
        "core::fmt::Debug"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self DIGEST_ELEMS SALT_ELEMS P PW H C R)
        (* Instance *) [ ("fmt", InstanceField.Method (fmt DIGEST_ELEMS SALT_ELEMS P PW H C R)) ].
  End Impl_core_fmt_Debug_where_core_fmt_Debug_P_where_core_fmt_Debug_PW_where_core_fmt_Debug_H_where_core_fmt_Debug_C_where_core_fmt_Debug_R_for_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
  
  Module Impl_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
    Definition Self (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs")
        [ DIGEST_ELEMS; SALT_ELEMS ]
        [ P; PW; H; C; R ].
    
    (*
        pub fn new(hash: H, compress: C, rng: R) -> Self {
            let inner = MerkleTreeMmcs::new(hash, compress);
            Self {
                inner,
                rng: rng.into(),
            }
        }
    *)
    Definition new
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [], [ hash; compress; rng ] =>
        ltac:(M.monadic
          (let hash := M.alloc (| hash |) in
          let compress := M.alloc (| compress |) in
          let rng := M.alloc (| rng |) in
          M.read (|
            let~ inner :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                      [ DIGEST_ELEMS ]
                      [ P; PW; H; C ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                    [ DIGEST_ELEMS ]
                    [ P; PW; H; C ],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                      [ DIGEST_ELEMS ]
                      [ P; PW; H; C ],
                    "new",
                    [],
                    []
                  |),
                  [ M.read (| hash |); M.read (| compress |) ]
                |)
              |) in
            M.alloc (|
              Value.StructRecord
                "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs"
                [
                  ("inner", M.read (| inner |));
                  ("rng",
                    M.call_closure (|
                      Ty.apply (Ty.path "core::cell::RefCell") [] [ R ],
                      M.get_trait_method (|
                        "core::convert::Into",
                        R,
                        [],
                        [ Ty.apply (Ty.path "core::cell::RefCell") [] [ R ] ],
                        "into",
                        [],
                        []
                      |),
                      [ M.read (| rng |) ]
                    |))
                ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_new :
      forall (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t),
      M.IsAssociatedFunction.C
        (Self DIGEST_ELEMS SALT_ELEMS P PW H C R)
        "new"
        (new DIGEST_ELEMS SALT_ELEMS P PW H C R).
    Admitted.
    Global Typeclasses Opaque new.
  End Impl_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
  
  Module Impl_p3_commit_mmcs_Mmcs_where_p3_field_packed_PackedValue_P_where_serde_ser_Serialize_associated_in_trait_p3_field_packed_PackedValue___P_Value_where_serde_de_DeserializeOwned_associated_in_trait_p3_field_packed_PackedValue___P_Value_where_p3_field_packed_PackedValue_PW_where_p3_symmetric_hasher_CryptographicHasher_H_associated_in_trait_p3_field_packed_PackedValue___P_Value_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_p3_symmetric_hasher_CryptographicHasher_H_P_array_DIGEST_ELEMS_PW_where_core_marker_Sync_H_where_p3_symmetric_compression_PseudoCompressionFunction_C_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_p3_symmetric_compression_PseudoCompressionFunction_C_array_DIGEST_ELEMS_PW_where_core_marker_Sync_C_where_rand_rng_Rng_R_where_core_clone_Clone_R_where_core_cmp_Eq_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_serde_ser_Serialize_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_serde_de_Deserialize_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_rand_distr_distribution_Distribution_rand_distr_StandardUniform_associated_in_trait_p3_field_packed_PackedValue___P_Value_associated_in_trait_p3_field_packed_PackedValue___P_Value_for_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
    Definition Self (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs")
        [ DIGEST_ELEMS; SALT_ELEMS ]
        [ P; PW; H; C; R ].
    
    (*
        type ProverData<M> =
            MerkleTree<P::Value, PW::Value, HorizontalPair<M, RowMajorMatrix<P::Value>>, DIGEST_ELEMS>;
    *)
    Definition _ProverData (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_merkle_tree::merkle_tree::MerkleTree")
        [ DIGEST_ELEMS ]
        [
          Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
          Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] PW "Value";
          Ty.apply
            (Ty.path "p3_matrix::stack::HorizontalPair")
            []
            [
              M_;
              Ty.apply
                (Ty.path "p3_matrix::dense::DenseMatrix")
                []
                [
                  Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
                      Ty.path "alloc::alloc::Global"
                    ]
                ]
            ]
        ].
    
    (*     type Commitment = Hash<P::Value, PW::Value, DIGEST_ELEMS>; *)
    Definition _Commitment (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_symmetric::hash::Hash")
        [ DIGEST_ELEMS ]
        [
          Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
          Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] PW "Value"
        ].
    
    (*     type Proof = (Vec<Vec<P::Value>>, Vec<[PW::Value; DIGEST_ELEMS]>); *)
    Definition _Proof (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.tuple
        [
          Ty.apply
            (Ty.path "alloc::vec::Vec")
            []
            [
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [
                  Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
                  Ty.path "alloc::alloc::Global"
                ];
              Ty.path "alloc::alloc::Global"
            ];
          Ty.apply
            (Ty.path "alloc::vec::Vec")
            []
            [
              Ty.apply
                (Ty.path "array")
                [ DIGEST_ELEMS ]
                [ Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] PW "Value" ];
              Ty.path "alloc::alloc::Global"
            ]
        ].
    
    (*     type Error = MerkleTreeError; *)
    Definition _Error (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t) : Ty.t :=
      Ty.path "p3_merkle_tree::mmcs::MerkleTreeError".
    
    (*
        fn commit<M: Matrix<P::Value>>(
            &self,
            inputs: Vec<M>,
        ) -> (Self::Commitment, Self::ProverData<M>) {
            let salted_inputs = inputs
                .into_iter()
                .map(|mat| {
                    let salts =
                        RowMajorMatrix::rand(&mut *self.rng.borrow_mut(), mat.height(), SALT_ELEMS);
                    HorizontalPair::new(mat, salts)
                })
                .collect();
            self.inner.commit(salted_inputs)
        }
    *)
    Definition commit
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [ M_ ], [ self; inputs ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let inputs := M.alloc (| inputs |) in
          M.read (|
            let~ salted_inputs :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::stack::HorizontalPair")
                          []
                          [
                            M_;
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_field::packed::PackedValue"
                                  []
                                  []
                                  P
                                  "Value";
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_field::packed::PackedValue"
                                      []
                                      []
                                      P
                                      "Value";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::stack::HorizontalPair")
                        []
                        [
                          M_;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                P
                                "Value";
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::map::Map")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [ M_; Ty.path "alloc::alloc::Global" ];
                        Ty.function
                          [ Ty.tuple [ M_ ] ]
                          (Ty.apply
                            (Ty.path "p3_matrix::stack::HorizontalPair")
                            []
                            [
                              M_;
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ])
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::stack::HorizontalPair")
                            []
                            [
                              M_;
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::map::Map")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [ M_; Ty.path "alloc::alloc::Global" ];
                          Ty.function
                            [ Ty.tuple [ M_ ] ]
                            (Ty.apply
                              (Ty.path "p3_matrix::stack::HorizontalPair")
                              []
                              [
                                M_;
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_field::packed::PackedValue"
                                      []
                                      []
                                      P
                                      "Value";
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ])
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "alloc::vec::into_iter::IntoIter")
                          []
                          [ M_; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "map",
                        [],
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::stack::HorizontalPair")
                            []
                            [
                              M_;
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ];
                          Ty.function
                            [ Ty.tuple [ M_ ] ]
                            (Ty.apply
                              (Ty.path "p3_matrix::stack::HorizontalPair")
                              []
                              [
                                M_;
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_field::packed::PackedValue"
                                      []
                                      []
                                      P
                                      "Value";
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ])
                        ]
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "alloc::vec::into_iter::IntoIter")
                            []
                            [ M_; Ty.path "alloc::alloc::Global" ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ M_; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [ M.read (| inputs |) ]
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [ Ty.tuple [ M_ ] ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::stack::HorizontalPair")
                                            []
                                            [
                                              M_;
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_field::packed::PackedValue"
                                                    []
                                                    []
                                                    P
                                                    "Value";
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_field::packed::PackedValue"
                                                        []
                                                        []
                                                        P
                                                        "Value";
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let mat := M.copy (| γ |) in
                                          M.read (|
                                            let~ salts :
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_field::packed::PackedValue"
                                                        []
                                                        []
                                                        P
                                                        "Value";
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ],
                                                  M.get_associated_function (|
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ],
                                                    "rand",
                                                    [],
                                                    [ R ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.MutRef,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.MutRef,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply (Ty.path "&mut") [] [ R ],
                                                              M.get_trait_method (|
                                                                "core::ops::deref::DerefMut",
                                                                Ty.apply
                                                                  (Ty.path "core::cell::RefMut")
                                                                  []
                                                                  [ R ],
                                                                [],
                                                                [],
                                                                "deref_mut",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.MutRef,
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::cell::RefMut")
                                                                        []
                                                                        [ R ],
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::cell::RefCell")
                                                                          []
                                                                          [ R ],
                                                                        "borrow_mut",
                                                                        [],
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.SubPointer.get_struct_record_field (|
                                                                            M.deref (|
                                                                              M.read (| self |)
                                                                            |),
                                                                            "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                                                                            "rng"
                                                                          |)
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    |);
                                                    M.call_closure (|
                                                      Ty.path "usize",
                                                      M.get_trait_method (|
                                                        "p3_matrix::Matrix",
                                                        M_,
                                                        [],
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value"
                                                        ],
                                                        "height",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                                                    |);
                                                    SALT_ELEMS
                                                  ]
                                                |)
                                              |) in
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "p3_matrix::stack::HorizontalPair")
                                                  []
                                                  [
                                                    M_;
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::stack::HorizontalPair")
                                                    []
                                                    [
                                                      M_;
                                                      Ty.apply
                                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_field::packed::PackedValue"
                                                                []
                                                                []
                                                                P
                                                                "Value";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                    ],
                                                  "new",
                                                  [],
                                                  [
                                                    Ty.associated_in_trait
                                                      "p3_field::packed::PackedValue"
                                                      []
                                                      []
                                                      P
                                                      "Value"
                                                  ]
                                                |),
                                                [ M.read (| mat |); M.read (| salts |) ]
                                              |)
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  ]
                |)
              |) in
            M.alloc (|
              M.call_closure (|
                Ty.tuple
                  [
                    Ty.apply
                      (Ty.path "p3_symmetric::hash::Hash")
                      [ DIGEST_ELEMS ]
                      [
                        Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
                        Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] PW "Value"
                      ];
                    Ty.apply
                      (Ty.path "p3_merkle_tree::merkle_tree::MerkleTree")
                      [ DIGEST_ELEMS ]
                      [
                        Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
                        Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] PW "Value";
                        Ty.apply
                          (Ty.path "p3_matrix::stack::HorizontalPair")
                          []
                          [
                            M_;
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_field::packed::PackedValue"
                                  []
                                  []
                                  P
                                  "Value";
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_field::packed::PackedValue"
                                      []
                                      []
                                      P
                                      "Value";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ]
                      ]
                  ],
                M.get_trait_method (|
                  "p3_commit::mmcs::Mmcs",
                  Ty.apply
                    (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                    [ DIGEST_ELEMS ]
                    [ P; PW; H; C ],
                  [],
                  [ Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value" ],
                  "commit",
                  [],
                  [
                    Ty.apply
                      (Ty.path "p3_matrix::stack::HorizontalPair")
                      []
                      [
                        M_;
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value";
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_field::packed::PackedValue"
                                  []
                                  []
                                  P
                                  "Value";
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ]
                  ]
                |),
                [
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                      "inner"
                    |)
                  |);
                  M.read (| salted_inputs |)
                ]
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn open_batch<M: Matrix<P::Value>>(
            &self,
            index: usize,
            prover_data: &Self::ProverData<M>,
        ) -> (Vec<Vec<P::Value>>, Self::Proof) {
            let (salted_openings, siblings) = self.inner.open_batch(index, prover_data);
            let (openings, salts): (Vec<_>, Vec<_>) = salted_openings
                .into_iter()
                .map(|row| {
                    let (a, b) = row.split_at(row.len() - SALT_ELEMS);
                    (a.to_vec(), b.to_vec())
                })
                .unzip();
            (openings, (salts, siblings))
        }
    *)
    Definition open_batch
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [ M_ ], [ self; index; prover_data ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let index := M.alloc (| index |) in
          let prover_data := M.alloc (| prover_data |) in
          M.read (|
            M.match_operator (|
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.tuple
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                P
                                "Value";
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ];
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "array")
                                [ DIGEST_ELEMS ]
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    PW
                                    "Value"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ]
                    ]
                ],
              M.alloc (|
                M.call_closure (|
                  Ty.tuple
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                P
                                "Value";
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ];
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "array")
                            [ DIGEST_ELEMS ]
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                PW
                                "Value"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ],
                  M.get_trait_method (|
                    "p3_commit::mmcs::Mmcs",
                    Ty.apply
                      (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                      [ DIGEST_ELEMS ]
                      [ P; PW; H; C ],
                    [],
                    [ Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value" ],
                    "open_batch",
                    [],
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::stack::HorizontalPair")
                        []
                        [
                          M_;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                P
                                "Value";
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                    ]
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                        "inner"
                      |)
                    |);
                    M.read (| index |);
                    M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| prover_data |) |) |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                    let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                    let salted_openings := M.copy (| γ0_0 |) in
                    let siblings := M.copy (| γ0_1 |) in
                    M.match_operator (|
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "array")
                                        [ DIGEST_ELEMS ]
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            PW
                                            "Value"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ]
                        ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::iterator::Iterator",
                            Ty.apply
                              (Ty.path "core::iter::adapters::map::Map")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::into_iter::IntoIter")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.function
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                                  (Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ])
                              ],
                            [],
                            [],
                            "unzip",
                            [],
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::map::Map")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::into_iter::IntoIter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_field::packed::PackedValue"
                                                []
                                                []
                                                P
                                                "Value";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ])
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "alloc::vec::into_iter::IntoIter")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ],
                                [],
                                [],
                                "map",
                                [],
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ];
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_field::packed::PackedValue"
                                                []
                                                []
                                                P
                                                "Value";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ])
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "alloc::vec::into_iter::IntoIter")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::collect::IntoIterator",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [],
                                    "into_iter",
                                    [],
                                    []
                                  |),
                                  [ M.read (| salted_openings |) ]
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [
                                                Ty.function
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ]
                                                  (Ty.tuple
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ];
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ])
                                              ],
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let row := M.copy (| γ |) in
                                                  M.read (|
                                                    M.match_operator (|
                                                      Ty.apply
                                                        (Ty.path "*")
                                                        []
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_field::packed::PackedValue"
                                                                    []
                                                                    []
                                                                    P
                                                                    "Value";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.associated_in_trait
                                                                    "p3_field::packed::PackedValue"
                                                                    []
                                                                    []
                                                                    P
                                                                    "Value";
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ]
                                                        ],
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ]
                                                                ]
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.apply
                                                              (Ty.path "slice")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_field::packed::PackedValue"
                                                                  []
                                                                  []
                                                                  P
                                                                  "Value"
                                                              ],
                                                            "split_at",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_field::packed::PackedValue"
                                                                            []
                                                                            []
                                                                            P
                                                                            "Value"
                                                                        ]
                                                                    ],
                                                                  M.get_trait_method (|
                                                                    "core::ops::deref::Deref",
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    [],
                                                                    [],
                                                                    "deref",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      row
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.call_closure (|
                                                              Ty.path "usize",
                                                              BinOp.Wrap.sub,
                                                              [
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    "len",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      row
                                                                    |)
                                                                  ]
                                                                |);
                                                                SALT_ELEMS
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |),
                                                      [
                                                        fun γ =>
                                                          ltac:(M.monadic
                                                            (let γ0_0 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                0
                                                              |) in
                                                            let γ0_1 :=
                                                              M.SubPointer.get_tuple_field (|
                                                                γ,
                                                                1
                                                              |) in
                                                            let a := M.copy (| γ0_0 |) in
                                                            let b := M.copy (| γ0_1 |) in
                                                            M.alloc (|
                                                              Value.Tuple
                                                                [
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_field::packed::PackedValue"
                                                                            []
                                                                            []
                                                                            P
                                                                            "Value"
                                                                        ],
                                                                      "to_vec",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (| M.read (| a |) |)
                                                                      |)
                                                                    ]
                                                                  |);
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_field::packed::PackedValue"
                                                                            []
                                                                            []
                                                                            P
                                                                            "Value"
                                                                        ],
                                                                      "to_vec",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (| M.read (| b |) |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                            |)))
                                                      ]
                                                    |)
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                            let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                            let openings := M.copy (| γ0_0 |) in
                            let salts := M.copy (| γ0_1 |) in
                            M.alloc (|
                              Value.Tuple
                                [
                                  M.read (| openings |);
                                  Value.Tuple [ M.read (| salts |); M.read (| siblings |) ]
                                ]
                            |)))
                      ]
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn get_matrices<'a, M: Matrix<P::Value>>(
            &self,
            prover_data: &'a Self::ProverData<M>,
        ) -> Vec<&'a M> {
            prover_data.leaves.iter().map(|mat| &mat.first).collect()
        }
    *)
    Definition get_matrices
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [ M_ ], [ self; prover_data ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let prover_data := M.alloc (| prover_data |) in
          M.call_closure (|
            Ty.apply
              (Ty.path "alloc::vec::Vec")
              []
              [ Ty.apply (Ty.path "&") [] [ M_ ]; Ty.path "alloc::alloc::Global" ],
            M.get_trait_method (|
              "core::iter::traits::iterator::Iterator",
              Ty.apply
                (Ty.path "core::iter::adapters::map::Map")
                []
                [
                  Ty.apply
                    (Ty.path "core::slice::iter::Iter")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::stack::HorizontalPair")
                        []
                        [
                          M_;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                P
                                "Value";
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                    ];
                  Ty.function
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "&")
                            []
                            [
                              Ty.apply
                                (Ty.path "p3_matrix::stack::HorizontalPair")
                                []
                                [
                                  M_;
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ]
                            ]
                        ]
                    ]
                    (Ty.apply (Ty.path "&") [] [ M_ ])
                ],
              [],
              [],
              "collect",
              [],
              [
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [ Ty.apply (Ty.path "&") [] [ M_ ]; Ty.path "alloc::alloc::Global" ]
              ]
            |),
            [
              M.call_closure (|
                Ty.apply
                  (Ty.path "core::iter::adapters::map::Map")
                  []
                  [
                    Ty.apply
                      (Ty.path "core::slice::iter::Iter")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::stack::HorizontalPair")
                          []
                          [
                            M_;
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_field::packed::PackedValue"
                                  []
                                  []
                                  P
                                  "Value";
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_field::packed::PackedValue"
                                      []
                                      []
                                      P
                                      "Value";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ]
                      ];
                    Ty.function
                      [
                        Ty.tuple
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "p3_matrix::stack::HorizontalPair")
                                  []
                                  [
                                    M_;
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                      ]
                      (Ty.apply (Ty.path "&") [] [ M_ ])
                  ],
                M.get_trait_method (|
                  "core::iter::traits::iterator::Iterator",
                  Ty.apply
                    (Ty.path "core::slice::iter::Iter")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::stack::HorizontalPair")
                        []
                        [
                          M_;
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.associated_in_trait
                                "p3_field::packed::PackedValue"
                                []
                                []
                                P
                                "Value";
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                    ],
                  [],
                  [],
                  "map",
                  [],
                  [
                    Ty.apply (Ty.path "&") [] [ M_ ];
                    Ty.function
                      [
                        Ty.tuple
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "p3_matrix::stack::HorizontalPair")
                                  []
                                  [
                                    M_;
                                    Ty.apply
                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ]
                                  ]
                              ]
                          ]
                      ]
                      (Ty.apply (Ty.path "&") [] [ M_ ])
                  ]
                |),
                [
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "core::slice::iter::Iter")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::stack::HorizontalPair")
                          []
                          [
                            M_;
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.associated_in_trait
                                  "p3_field::packed::PackedValue"
                                  []
                                  []
                                  P
                                  "Value";
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "p3_field::packed::PackedValue"
                                      []
                                      []
                                      P
                                      "Value";
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ]
                      ],
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "slice")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_matrix::stack::HorizontalPair")
                            []
                            [
                              M_;
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.associated_in_trait
                                    "p3_field::packed::PackedValue"
                                    []
                                    []
                                    P
                                    "Value";
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ]
                        ],
                      "iter",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_matrix::stack::HorizontalPair")
                                      []
                                      [
                                        M_;
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_field::packed::PackedValue"
                                                  []
                                                  []
                                                  P
                                                  "Value";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ]
                                  ]
                              ],
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_matrix::stack::HorizontalPair")
                                    []
                                    [
                                      M_;
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_field::packed::PackedValue"
                                                []
                                                []
                                                P
                                                "Value";
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              [],
                              "deref",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| prover_data |) |),
                                  "p3_merkle_tree::merkle_tree::MerkleTree",
                                  "leaves"
                                |)
                              |)
                            ]
                          |)
                        |)
                      |)
                    ]
                  |);
                  M.closure
                    (fun γ =>
                      ltac:(M.monadic
                        match γ with
                        | [ α0 ] =>
                          ltac:(M.monadic
                            (M.match_operator (|
                              Ty.apply
                                (Ty.path "*")
                                []
                                [
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_matrix::stack::HorizontalPair")
                                                []
                                                [
                                                  M_;
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.associated_in_trait
                                                        "p3_field::packed::PackedValue"
                                                        []
                                                        []
                                                        P
                                                        "Value";
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                    ]
                                    (Ty.apply (Ty.path "&") [] [ M_ ])
                                ],
                              M.alloc (| α0 |),
                              [
                                fun γ =>
                                  ltac:(M.monadic
                                    (let mat := M.copy (| γ |) in
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.SubPointer.get_struct_record_field (|
                                        M.deref (| M.read (| mat |) |),
                                        "p3_matrix::stack::HorizontalPair",
                                        "first"
                                      |)
                                    |)))
                              ]
                            |)))
                        | _ => M.impossible "wrong number of arguments"
                        end))
                ]
              |)
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*
        fn verify_batch(
            &self,
            commit: &Self::Commitment,
            dimensions: &[Dimensions],
            index: usize,
            opened_values: &[Vec<P::Value>],
            proof: &Self::Proof,
        ) -> Result<(), Self::Error> {
            let (salts, siblings) = proof;
    
            let opened_salted_values = zip_eq(opened_values, salts, MerkleTreeError::WrongBatchSize)?
                .map(|(opened, salt)| opened.iter().chain(salt.iter()).copied().collect_vec())
                .collect_vec();
    
            self.inner
                .verify_batch(commit, dimensions, index, &opened_salted_values, siblings)
        }
    *)
    Definition verify_batch
        (DIGEST_ELEMS SALT_ELEMS : Value.t)
        (P PW H C R : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self DIGEST_ELEMS SALT_ELEMS P PW H C R in
      match ε, τ, α with
      | [], [], [ self; commit; dimensions; index; opened_values; proof ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let commit := M.alloc (| commit |) in
          let dimensions := M.alloc (| dimensions |) in
          let index := M.alloc (| index |) in
          let opened_values := M.alloc (| opened_values |) in
          let proof := M.alloc (| proof |) in
          M.catch_return
            (Ty.apply
              (Ty.path "core::result::Result")
              []
              [
                Ty.tuple [];
                Ty.associated_in_trait
                  "p3_commit::mmcs::Mmcs"
                  []
                  [ Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value" ]
                  (Ty.apply
                    (Ty.path "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs")
                    [ DIGEST_ELEMS; SALT_ELEMS ]
                    [ P; PW; H; C; R ])
                  "Error"
              ]) (|
            ltac:(M.monadic
              (M.read (|
                M.match_operator (|
                  Ty.apply
                    (Ty.path "*")
                    []
                    [
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [ Ty.tuple []; Ty.path "p3_merkle_tree::mmcs::MerkleTreeError" ]
                    ],
                  proof,
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.read (| γ |) in
                        let γ1_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ1_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let salts := M.alloc (| γ1_0 |) in
                        let siblings := M.alloc (| γ1_1 |) in
                        let~ opened_salted_values :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "p3_field::packed::PackedValue"
                                          []
                                          []
                                          P
                                          "Value";
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.associated_in_trait
                                        "p3_field::packed::PackedValue"
                                        []
                                        []
                                        P
                                        "Value";
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_trait_method (|
                                "itertools::Itertools",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_util::zip_eq::ZipEq")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_field::packed::PackedValue"
                                                  []
                                                  []
                                                  P
                                                  "Value";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_field::packed::PackedValue"
                                                  []
                                                  []
                                                  P
                                                  "Value";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ])
                                  ],
                                [],
                                [],
                                "collect_vec",
                                [],
                                []
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_util::zip_eq::ZipEq")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_field::packed::PackedValue"
                                                    []
                                                    []
                                                    P
                                                    "Value";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ];
                                          Ty.apply
                                            (Ty.path "core::slice::iter::Iter")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.associated_in_trait
                                                    "p3_field::packed::PackedValue"
                                                    []
                                                    []
                                                    P
                                                    "Value";
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ])
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "p3_util::zip_eq::ZipEq")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_field::packed::PackedValue"
                                                  []
                                                  []
                                                  P
                                                  "Value";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ];
                                        Ty.apply
                                          (Ty.path "core::slice::iter::Iter")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_field::packed::PackedValue"
                                                  []
                                                  []
                                                  P
                                                  "Value";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ],
                                    [],
                                    [],
                                    "map",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.associated_in_trait
                                            "p3_field::packed::PackedValue"
                                            []
                                            []
                                            P
                                            "Value";
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "p3_field::packed::PackedValue"
                                              []
                                              []
                                              P
                                              "Value";
                                            Ty.path "alloc::alloc::Global"
                                          ])
                                    ]
                                  |),
                                  [
                                    M.read (|
                                      M.match_operator (|
                                        Ty.apply
                                          (Ty.path "*")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_util::zip_eq::ZipEq")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "core::slice::iter::Iter")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ];
                                                Ty.apply
                                                  (Ty.path "core::slice::iter::Iter")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.associated_in_trait
                                                          "p3_field::packed::PackedValue"
                                                          []
                                                          []
                                                          P
                                                          "Value";
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        M.alloc (|
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "core::ops::control_flow::ControlFlow")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "core::result::Result")
                                                  []
                                                  [
                                                    Ty.path "core::convert::Infallible";
                                                    Ty.path "p3_merkle_tree::mmcs::MerkleTreeError"
                                                  ];
                                                Ty.apply
                                                  (Ty.path "p3_util::zip_eq::ZipEq")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ]
                                              ],
                                            M.get_trait_method (|
                                              "core::ops::try_trait::Try",
                                              Ty.apply
                                                (Ty.path "core::result::Result")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_util::zip_eq::ZipEq")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_field::packed::PackedValue"
                                                                []
                                                                []
                                                                P
                                                                "Value";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ];
                                                      Ty.apply
                                                        (Ty.path "core::slice::iter::Iter")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.associated_in_trait
                                                                "p3_field::packed::PackedValue"
                                                                []
                                                                []
                                                                P
                                                                "Value";
                                                              Ty.path "alloc::alloc::Global"
                                                            ]
                                                        ]
                                                    ];
                                                  Ty.path "p3_merkle_tree::mmcs::MerkleTreeError"
                                                ],
                                              [],
                                              [],
                                              "branch",
                                              [],
                                              []
                                            |),
                                            [
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "core::result::Result")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "p3_util::zip_eq::ZipEq")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_field::packed::PackedValue"
                                                                  []
                                                                  []
                                                                  P
                                                                  "Value";
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ];
                                                        Ty.apply
                                                          (Ty.path "core::slice::iter::Iter")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_field::packed::PackedValue"
                                                                  []
                                                                  []
                                                                  P
                                                                  "Value";
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.path "p3_merkle_tree::mmcs::MerkleTreeError"
                                                  ],
                                                M.get_function (|
                                                  "p3_util::zip_eq::zip_eq",
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_field::packed::PackedValue"
                                                                  []
                                                                  []
                                                                  P
                                                                  "Value";
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_field::packed::PackedValue"
                                                                  []
                                                                  []
                                                                  P
                                                                  "Value";
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.apply
                                                      (Ty.path "core::slice::iter::Iter")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ];
                                                    Ty.path "p3_merkle_tree::mmcs::MerkleTreeError"
                                                  ]
                                                |),
                                                [
                                                  M.read (| opened_values |);
                                                  M.read (| salts |);
                                                  Value.StructTuple
                                                    "p3_merkle_tree::mmcs::MerkleTreeError::WrongBatchSize"
                                                    []
                                                ]
                                              |)
                                            ]
                                          |)
                                        |),
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let γ0_0 :=
                                                M.SubPointer.get_struct_tuple_field (|
                                                  γ,
                                                  "core::ops::control_flow::ControlFlow::Break",
                                                  0
                                                |) in
                                              let residual := M.copy (| γ0_0 |) in
                                              M.alloc (|
                                                M.never_to_any (|
                                                  M.read (|
                                                    M.return_ (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          []
                                                          [
                                                            Ty.tuple [];
                                                            Ty.path
                                                              "p3_merkle_tree::mmcs::MerkleTreeError"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::ops::try_trait::FromResidual",
                                                          Ty.apply
                                                            (Ty.path "core::result::Result")
                                                            []
                                                            [
                                                              Ty.tuple [];
                                                              Ty.path
                                                                "p3_merkle_tree::mmcs::MerkleTreeError"
                                                            ],
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              []
                                                              [
                                                                Ty.path "core::convert::Infallible";
                                                                Ty.path
                                                                  "p3_merkle_tree::mmcs::MerkleTreeError"
                                                              ]
                                                          ],
                                                          "from_residual",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.read (| residual |) ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              |)));
                                          fun γ =>
                                            ltac:(M.monadic
                                              (let γ0_0 :=
                                                M.SubPointer.get_struct_tuple_field (|
                                                  γ,
                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                  0
                                                |) in
                                              let val := M.copy (| γ0_0 |) in
                                              val))
                                        ]
                                      |)
                                    |);
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value";
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.associated_in_trait
                                                            "p3_field::packed::PackedValue"
                                                            []
                                                            []
                                                            P
                                                            "Value";
                                                          Ty.path "alloc::alloc::Global"
                                                        ])
                                                  ],
                                                M.alloc (| α0 |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let γ0_0 :=
                                                        M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                      let γ0_1 :=
                                                        M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                      let opened := M.copy (| γ0_0 |) in
                                                      let salt := M.copy (| γ0_1 |) in
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.associated_in_trait
                                                              "p3_field::packed::PackedValue"
                                                              []
                                                              []
                                                              P
                                                              "Value";
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_trait_method (|
                                                          "itertools::Itertools",
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::copied::Copied")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::chain::Chain")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ]
                                                                ]
                                                            ],
                                                          [],
                                                          [],
                                                          "collect_vec",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::copied::Copied")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::chain::Chain")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::iter::traits::iterator::Iterator",
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::chain::Chain")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ]
                                                                ],
                                                              [],
                                                              [],
                                                              "copied",
                                                              [],
                                                              [
                                                                Ty.associated_in_trait
                                                                  "p3_field::packed::PackedValue"
                                                                  []
                                                                  []
                                                                  P
                                                                  "Value"
                                                              ]
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::chain::Chain")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ]
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [
                                                                      Ty.associated_in_trait
                                                                        "p3_field::packed::PackedValue"
                                                                        []
                                                                        []
                                                                        P
                                                                        "Value"
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "chain",
                                                                  [],
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ]
                                                                  ]
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_field::packed::PackedValue"
                                                                            []
                                                                            []
                                                                            P
                                                                            "Value"
                                                                        ],
                                                                      "iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_field::packed::PackedValue"
                                                                                      []
                                                                                      []
                                                                                      P
                                                                                      "Value"
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_field::packed::PackedValue"
                                                                                    []
                                                                                    []
                                                                                    P
                                                                                    "Value";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (|
                                                                                    opened
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |);
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [
                                                                        Ty.associated_in_trait
                                                                          "p3_field::packed::PackedValue"
                                                                          []
                                                                          []
                                                                          P
                                                                          "Value"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.apply
                                                                        (Ty.path "slice")
                                                                        []
                                                                        [
                                                                          Ty.associated_in_trait
                                                                            "p3_field::packed::PackedValue"
                                                                            []
                                                                            []
                                                                            P
                                                                            "Value"
                                                                        ],
                                                                      "iter",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.call_closure (|
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "slice")
                                                                                  []
                                                                                  [
                                                                                    Ty.associated_in_trait
                                                                                      "p3_field::packed::PackedValue"
                                                                                      []
                                                                                      []
                                                                                      P
                                                                                      "Value"
                                                                                  ]
                                                                              ],
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.associated_in_trait
                                                                                    "p3_field::packed::PackedValue"
                                                                                    []
                                                                                    []
                                                                                    P
                                                                                    "Value";
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              [],
                                                                              "deref",
                                                                              [],
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.borrow (|
                                                                                Pointer.Kind.Ref,
                                                                                M.deref (|
                                                                                  M.read (| salt |)
                                                                                |)
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                ]
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)))
                                                ]
                                              |)))
                                          | _ => M.impossible "wrong number of arguments"
                                          end))
                                  ]
                                |)
                              ]
                            |)
                          |) in
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [ Ty.tuple []; Ty.path "p3_merkle_tree::mmcs::MerkleTreeError" ],
                            M.get_trait_method (|
                              "p3_commit::mmcs::Mmcs",
                              Ty.apply
                                (Ty.path "p3_merkle_tree::mmcs::MerkleTreeMmcs")
                                [ DIGEST_ELEMS ]
                                [ P; PW; H; C ],
                              [],
                              [
                                Ty.associated_in_trait
                                  "p3_field::packed::PackedValue"
                                  []
                                  []
                                  P
                                  "Value"
                              ],
                              "verify_batch",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.SubPointer.get_struct_record_field (|
                                  M.deref (| M.read (| self |) |),
                                  "p3_merkle_tree::hiding_mmcs::MerkleTreeHidingMmcs",
                                  "inner"
                                |)
                              |);
                              M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| commit |) |) |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.read (| dimensions |) |)
                              |);
                              M.read (| index |);
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "p3_field::packed::PackedValue"
                                                  []
                                                  []
                                                  P
                                                  "Value";
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ],
                                    M.get_trait_method (|
                                      "core::ops::deref::Deref",
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "p3_field::packed::PackedValue"
                                                []
                                                []
                                                P
                                                "Value";
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ],
                                      [],
                                      [],
                                      "deref",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (|
                                          M.borrow (| Pointer.Kind.Ref, opened_salted_values |)
                                        |)
                                      |)
                                    ]
                                  |)
                                |)
                              |);
                              M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| siblings |) |) |)
                            ]
                          |)
                        |)))
                  ]
                |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (DIGEST_ELEMS SALT_ELEMS : Value.t) (P PW H C R : Ty.t),
      M.IsTraitInstance
        "p3_commit::mmcs::Mmcs"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *)
        [ Ty.associated_in_trait "p3_field::packed::PackedValue" [] [] P "Value" ]
        (Self DIGEST_ELEMS SALT_ELEMS P PW H C R)
        (* Instance *)
        [
          ("ProverData", InstanceField.Ty (_ProverData DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("Commitment", InstanceField.Ty (_Commitment DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("Proof", InstanceField.Ty (_Proof DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("Error", InstanceField.Ty (_Error DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("commit", InstanceField.Method (commit DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("open_batch", InstanceField.Method (open_batch DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("get_matrices", InstanceField.Method (get_matrices DIGEST_ELEMS SALT_ELEMS P PW H C R));
          ("verify_batch", InstanceField.Method (verify_batch DIGEST_ELEMS SALT_ELEMS P PW H C R))
        ].
  End Impl_p3_commit_mmcs_Mmcs_where_p3_field_packed_PackedValue_P_where_serde_ser_Serialize_associated_in_trait_p3_field_packed_PackedValue___P_Value_where_serde_de_DeserializeOwned_associated_in_trait_p3_field_packed_PackedValue___P_Value_where_p3_field_packed_PackedValue_PW_where_p3_symmetric_hasher_CryptographicHasher_H_associated_in_trait_p3_field_packed_PackedValue___P_Value_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_p3_symmetric_hasher_CryptographicHasher_H_P_array_DIGEST_ELEMS_PW_where_core_marker_Sync_H_where_p3_symmetric_compression_PseudoCompressionFunction_C_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_p3_symmetric_compression_PseudoCompressionFunction_C_array_DIGEST_ELEMS_PW_where_core_marker_Sync_C_where_rand_rng_Rng_R_where_core_clone_Clone_R_where_core_cmp_Eq_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_serde_ser_Serialize_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_serde_de_Deserialize_array_DIGEST_ELEMS_associated_in_trait_p3_field_packed_PackedValue___PW_Value_where_rand_distr_distribution_Distribution_rand_distr_StandardUniform_associated_in_trait_p3_field_packed_PackedValue___P_Value_associated_in_trait_p3_field_packed_PackedValue___P_Value_for_p3_merkle_tree_hiding_mmcs_MerkleTreeHidingMmcs_DIGEST_ELEMS_SALT_ELEMS_P_PW_H_C_R.
End hiding_mmcs.
