(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module no_packing.
  Module poseidon2.
    (* StructRecord
      {
        name := "Poseidon2InternalLayerMersenne31";
        const_params := [];
        ty_params := [];
        fields :=
          [
            ("internal_constants",
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"; Ty.path "alloc::alloc::Global"
                ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2InternalLayerMersenne31.
      Definition Self : Ty.t :=
        Ty.path "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field1_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| mk_str (| "Poseidon2InternalLayerMersenne31" |) |)
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "internal_constants" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.alloc (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31",
                              "internal_constants"
                            |)
                          |)
                        |)
                      |)
                    |)
                  |))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2InternalLayerMersenne31.
    
    Module Impl_core_clone_Clone_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2InternalLayerMersenne31.
      Definition Self : Ty.t :=
        Ty.path "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31"
              [
                ("internal_constants",
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                        Ty.path "alloc::alloc::Global"
                      ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "alloc::alloc::Global"
                        ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31",
                              "internal_constants"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2InternalLayerMersenne31.
    
    (* StructRecord
      {
        name := "Poseidon2ExternalLayerMersenne31";
        const_params := [ "WIDTH" ];
        ty_params := [];
        fields :=
          [
            ("external_constants",
              Ty.apply
                (Ty.path "p3_poseidon2::external::ExternalLayerConstants")
                [ WIDTH ]
                [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ])
          ];
      } *)
    
    Module Impl_core_clone_Clone_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2ExternalLayerMersenne31_WIDTH.
      Definition Self (WIDTH : Value.t) : Ty.t :=
        Ty.apply
          (Ty.path "p3_mersenne_31::no_packing::poseidon2::Poseidon2ExternalLayerMersenne31")
          [ WIDTH ]
          [].
      
      (* Clone *)
      Definition clone
          (WIDTH : Value.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self WIDTH in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "p3_mersenne_31::no_packing::poseidon2::Poseidon2ExternalLayerMersenne31"
              [
                ("external_constants",
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "p3_poseidon2::external::ExternalLayerConstants")
                      [ WIDTH ]
                      [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "p3_poseidon2::external::ExternalLayerConstants")
                        [ WIDTH ]
                        [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "p3_mersenne_31::no_packing::poseidon2::Poseidon2ExternalLayerMersenne31",
                              "external_constants"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (WIDTH : Value.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self WIDTH)
          (* Instance *) [ ("clone", InstanceField.Method (clone WIDTH)) ].
    End Impl_core_clone_Clone_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2ExternalLayerMersenne31_WIDTH.
    
    Module Impl_p3_poseidon2_internal_InternalLayerConstructor_p3_mersenne_31_mersenne_31_Mersenne31_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2InternalLayerMersenne31.
      Definition Self : Ty.t :=
        Ty.path "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31".
      
      (*
          fn new_from_constants(internal_constants: Vec<Mersenne31>) -> Self {
              Self { internal_constants }
          }
      *)
      Definition new_from_constants (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ internal_constants ] =>
          ltac:(M.monadic
            (let internal_constants := M.alloc (| internal_constants |) in
            Value.StructRecord
              "p3_mersenne_31::no_packing::poseidon2::Poseidon2InternalLayerMersenne31"
              [ ("internal_constants", M.read (| internal_constants |)) ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "p3_poseidon2::internal::InternalLayerConstructor"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ]
          Self
          (* Instance *) [ ("new_from_constants", InstanceField.Method new_from_constants) ].
    End Impl_p3_poseidon2_internal_InternalLayerConstructor_p3_mersenne_31_mersenne_31_Mersenne31_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2InternalLayerMersenne31.
    
    Module Impl_p3_poseidon2_external_ExternalLayerConstructor_WIDTH_p3_mersenne_31_mersenne_31_Mersenne31_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2ExternalLayerMersenne31_WIDTH.
      Definition Self (WIDTH : Value.t) : Ty.t :=
        Ty.apply
          (Ty.path "p3_mersenne_31::no_packing::poseidon2::Poseidon2ExternalLayerMersenne31")
          [ WIDTH ]
          [].
      
      (*
          fn new_from_constants(external_constants: ExternalLayerConstants<Mersenne31, WIDTH>) -> Self {
              Self { external_constants }
          }
      *)
      Definition new_from_constants
          (WIDTH : Value.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self WIDTH in
        match ε, τ, α with
        | [], [], [ external_constants ] =>
          ltac:(M.monadic
            (let external_constants := M.alloc (| external_constants |) in
            Value.StructRecord
              "p3_mersenne_31::no_packing::poseidon2::Poseidon2ExternalLayerMersenne31"
              [ ("external_constants", M.read (| external_constants |)) ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (WIDTH : Value.t),
        M.IsTraitInstance
          "p3_poseidon2::external::ExternalLayerConstructor"
          (* Trait polymorphic consts *) [ WIDTH ]
          (* Trait polymorphic types *) [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ]
          (Self WIDTH)
          (* Instance *)
          [ ("new_from_constants", InstanceField.Method (new_from_constants WIDTH)) ].
    End Impl_p3_poseidon2_external_ExternalLayerConstructor_WIDTH_p3_mersenne_31_mersenne_31_Mersenne31_for_p3_mersenne_31_no_packing_poseidon2_Poseidon2ExternalLayerMersenne31_WIDTH.
  End poseidon2.
End no_packing.
