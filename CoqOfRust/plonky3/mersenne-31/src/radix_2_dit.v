(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module radix_2_dit.
  Axiom F :
    (Ty.path "p3_mersenne_31::radix_2_dit::F") =
      (Ty.path "p3_mersenne_31::mersenne_31::Mersenne31").
  
  Axiom C :
    (Ty.path "p3_mersenne_31::radix_2_dit::C") =
      (Ty.apply
        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
        [ Value.Integer IntegerKind.Usize 2 ]
        [
          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
        ]).
  
  (* StructTuple
    {
      name := "Mersenne31ComplexRadix2Dit";
      const_params := [];
      ty_params := [];
      fields := [];
    } *)
  
  Module Impl_core_fmt_Debug_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
    Definition Self : Ty.t := Ty.path "p3_mersenne_31::radix_2_dit::Mersenne31ComplexRadix2Dit".
    
    (* Debug *)
    Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self; f ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let f := M.alloc (| f |) in
          M.call_closure (|
            Ty.apply
              (Ty.path "core::result::Result")
              []
              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
            M.get_associated_function (| Ty.path "core::fmt::Formatter", "write_str", [], [] |),
            [
              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
              M.borrow (|
                Pointer.Kind.Ref,
                M.deref (| mk_str (| "Mersenne31ComplexRadix2Dit" |) |)
              |)
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      M.IsTraitInstance
        "core::fmt::Debug"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        Self
        (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
  End Impl_core_fmt_Debug_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
  
  Module Impl_core_default_Default_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
    Definition Self : Ty.t := Ty.path "p3_mersenne_31::radix_2_dit::Mersenne31ComplexRadix2Dit".
    
    (* Default *)
    Definition default (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [] =>
        ltac:(M.monadic
          (Value.StructTuple "p3_mersenne_31::radix_2_dit::Mersenne31ComplexRadix2Dit" []))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      M.IsTraitInstance
        "core::default::Default"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        Self
        (* Instance *) [ ("default", InstanceField.Method default) ].
  End Impl_core_default_Default_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
  
  Module Impl_core_clone_Clone_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
    Definition Self : Ty.t := Ty.path "p3_mersenne_31::radix_2_dit::Mersenne31ComplexRadix2Dit".
    
    (* Clone *)
    Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructTuple "p3_mersenne_31::radix_2_dit::Mersenne31ComplexRadix2Dit" []))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        Self
        (* Instance *) [ ("clone", InstanceField.Method clone) ].
  End Impl_core_clone_Clone_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
  
  Module Impl_p3_dft_traits_TwoAdicSubgroupDft_p3_field_extension_binomial_extension_BinomialExtensionField_Usize_2_p3_mersenne_31_mersenne_31_Mersenne31_p3_mersenne_31_mersenne_31_Mersenne31_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
    Definition Self : Ty.t := Ty.path "p3_mersenne_31::radix_2_dit::Mersenne31ComplexRadix2Dit".
    
    (*     type Evaluations = RowMajorMatrix<C>; *)
    Definition _Evaluations : Ty.t :=
      Ty.apply
        (Ty.path "p3_matrix::dense::DenseMatrix")
        []
        [
          Ty.apply
            (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
            [ Value.Integer IntegerKind.Usize 2 ]
            [
              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
            ];
          Ty.apply
            (Ty.path "alloc::vec::Vec")
            []
            [
              Ty.apply
                (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                [ Value.Integer IntegerKind.Usize 2 ]
                [
                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                ];
              Ty.path "alloc::alloc::Global"
            ]
        ].
    
    (*
        fn dft_batch(&self, mut mat: RowMajorMatrix<C>) -> RowMajorMatrix<C> {
            let h = mat.height();
            let log_h = log2_strict_usize(h);
    
            let root = C::two_adic_generator(log_h);
            let twiddles: Vec<C> = root.powers().take(h / 2).collect();
    
            // DIT butterfly
            reverse_matrix_index_bits(&mut mat);
            for layer in 0..log_h {
                dit_layer(&mut mat.as_view_mut(), layer, &twiddles);
            }
            mat
        }
    *)
    Definition dft_batch (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self; mat ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let mat := M.alloc (| mat |) in
          M.read (|
            let~ h : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.path "usize",
                  M.get_trait_method (|
                    "p3_matrix::Matrix",
                    Ty.apply
                      (Ty.path "p3_matrix::dense::DenseMatrix")
                      []
                      [
                        Ty.apply
                          (Ty.path
                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                          [ Value.Integer IntegerKind.Usize 2 ]
                          [
                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                          ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path
                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                              [ Value.Integer IntegerKind.Usize 2 ]
                              [
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                              ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    [],
                    [
                      Ty.apply
                        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                        [ Value.Integer IntegerKind.Usize 2 ]
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                        ]
                    ],
                    "height",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                |)
              |) in
            let~ log_h : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.path "usize",
                  M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                  [ M.read (| h |) ]
                |)
              |) in
            let~ root :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                      [ Value.Integer IntegerKind.Usize 2 ]
                      [
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                    [ Value.Integer IntegerKind.Usize 2 ]
                    [
                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                    ],
                  M.get_trait_method (|
                    "p3_field::field::TwoAdicField",
                    Ty.apply
                      (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                      [ Value.Integer IntegerKind.Usize 2 ]
                      [
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                      ],
                    [],
                    [],
                    "two_adic_generator",
                    [],
                    []
                  |),
                  [ M.read (| log_h |) ]
                |)
              |) in
            let~ twiddles :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "alloc::vec::Vec")
                      []
                      [
                        Ty.apply
                          (Ty.path
                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                          [ Value.Integer IntegerKind.Usize 2 ]
                          [
                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                          ];
                        Ty.path "alloc::alloc::Global"
                      ]
                  ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "alloc::vec::Vec")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                        [ Value.Integer IntegerKind.Usize 2 ]
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                        ];
                      Ty.path "alloc::alloc::Global"
                    ],
                  M.get_trait_method (|
                    "core::iter::traits::iterator::Iterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::take::Take")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_field::field::Powers")
                          []
                          [
                            Ty.apply
                              (Ty.path
                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                              [ Value.Integer IntegerKind.Usize 2 ]
                              [
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                              ]
                          ]
                      ],
                    [],
                    [],
                    "collect",
                    [],
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path
                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                            [ Value.Integer IntegerKind.Usize 2 ]
                            [
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::take::Take")
                        []
                        [
                          Ty.apply
                            (Ty.path "p3_field::field::Powers")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ]
                        ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply
                          (Ty.path "p3_field::field::Powers")
                          []
                          [
                            Ty.apply
                              (Ty.path
                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                              [ Value.Integer IntegerKind.Usize 2 ]
                              [
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                              ]
                          ],
                        [],
                        [],
                        "take",
                        [],
                        []
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "p3_field::field::Powers")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ],
                          M.get_trait_method (|
                            "p3_field::field::PrimeCharacteristicRing",
                            Ty.apply
                              (Ty.path
                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                              [ Value.Integer IntegerKind.Usize 2 ]
                              [
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                              ],
                            [],
                            [],
                            "powers",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, root |) ]
                        |);
                        M.call_closure (|
                          Ty.path "usize",
                          BinOp.Wrap.div,
                          [ M.read (| h |); Value.Integer IntegerKind.Usize 2 ]
                        |)
                      ]
                    |)
                  ]
                |)
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [],
                  M.get_function (|
                    "p3_matrix::util::reverse_matrix_index_bits",
                    [],
                    [
                      Ty.apply
                        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                        [ Value.Integer IntegerKind.Usize 2 ]
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                        ];
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path
                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                            [ Value.Integer IntegerKind.Usize 2 ]
                            [
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                            ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ]
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.MutRef,
                      M.deref (| M.borrow (| Pointer.Kind.MutRef, mat |) |)
                    |)
                  ]
                |)
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.use
                (M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ],
                      M.get_trait_method (|
                        "core::iter::traits::collect::IntoIterator",
                        Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ],
                        [],
                        [],
                        "into_iter",
                        [],
                        []
                      |),
                      [
                        Value.StructRecord
                          "core::ops::range::Range"
                          [
                            ("start", Value.Integer IntegerKind.Usize 0);
                            ("end_", M.read (| log_h |))
                          ]
                      ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let iter := M.copy (| γ |) in
                        M.loop (|
                          Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                          ltac:(M.monadic
                            (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                              M.match_operator (|
                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                M.alloc (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "core::option::Option")
                                      []
                                      [ Ty.path "usize" ],
                                    M.get_trait_method (|
                                      "core::iter::traits::iterator::Iterator",
                                      Ty.apply
                                        (Ty.path "core::ops::range::Range")
                                        []
                                        [ Ty.path "usize" ],
                                      [],
                                      [],
                                      "next",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.MutRef,
                                        M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                      |)
                                    ]
                                  |)
                                |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let _ :=
                                        M.is_struct_tuple (| γ, "core::option::Option::None" |) in
                                      M.alloc (|
                                        M.never_to_any (| M.read (| M.break (||) |) |)
                                      |)));
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let γ0_0 :=
                                        M.SubPointer.get_struct_tuple_field (|
                                          γ,
                                          "core::option::Option::Some",
                                          0
                                        |) in
                                      let layer := M.copy (| γ0_0 |) in
                                      let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                        M.alloc (|
                                          M.call_closure (|
                                            Ty.tuple [],
                                            M.get_function (|
                                              "p3_mersenne_31::radix_2_dit::dit_layer",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.borrow (|
                                                    Pointer.Kind.MutRef,
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                              [ Value.Integer IntegerKind.Usize 2 ]
                                                              [
                                                                Ty.path
                                                                  "p3_mersenne_31::mersenne_31::Mersenne31";
                                                                Ty.path
                                                                  "p3_mersenne_31::mersenne_31::Mersenne31"
                                                              ];
                                                            Ty.apply
                                                              (Ty.path "&mut")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                                      [
                                                                        Value.Integer
                                                                          IntegerKind.Usize
                                                                          2
                                                                      ]
                                                                      [
                                                                        Ty.path
                                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                                        Ty.path
                                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                                      ]
                                                                  ]
                                                              ]
                                                          ],
                                                        M.get_associated_function (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_matrix::dense::DenseMatrix")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.path
                                                                    "p3_mersenne_31::mersenne_31::Mersenne31";
                                                                  Ty.path
                                                                    "p3_mersenne_31::mersenne_31::Mersenne31"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                                    [
                                                                      Value.Integer
                                                                        IntegerKind.Usize
                                                                        2
                                                                    ]
                                                                    [
                                                                      Ty.path
                                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                                      Ty.path
                                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ]
                                                            ],
                                                          "as_view_mut",
                                                          [],
                                                          []
                                                        |),
                                                        [ M.borrow (| Pointer.Kind.MutRef, mat |) ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              |);
                                              M.read (| layer |);
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                              [ Value.Integer IntegerKind.Usize 2 ]
                                                              [
                                                                Ty.path
                                                                  "p3_mersenne_31::mersenne_31::Mersenne31";
                                                                Ty.path
                                                                  "p3_mersenne_31::mersenne_31::Mersenne31"
                                                              ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                            [ Value.Integer IntegerKind.Usize 2 ]
                                                            [
                                                              Ty.path
                                                                "p3_mersenne_31::mersenne_31::Mersenne31";
                                                              Ty.path
                                                                "p3_mersenne_31::mersenne_31::Mersenne31"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (| Pointer.Kind.Ref, twiddles |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |)
                                            ]
                                          |)
                                        |) in
                                      M.alloc (| Value.Tuple [] |)))
                                ]
                              |) in
                            M.alloc (| Value.Tuple [] |)))
                        |)))
                  ]
                |)) in
            mat
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      M.IsTraitInstance
        "p3_dft::traits::TwoAdicSubgroupDft"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *)
        [
          Ty.apply
            (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
            [ Value.Integer IntegerKind.Usize 2 ]
            [
              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
            ]
        ]
        Self
        (* Instance *)
        [
          ("Evaluations", InstanceField.Ty _Evaluations);
          ("dft_batch", InstanceField.Method dft_batch)
        ].
  End Impl_p3_dft_traits_TwoAdicSubgroupDft_p3_field_extension_binomial_extension_BinomialExtensionField_Usize_2_p3_mersenne_31_mersenne_31_Mersenne31_p3_mersenne_31_mersenne_31_Mersenne31_for_p3_mersenne_31_radix_2_dit_Mersenne31ComplexRadix2Dit.
  
  (*
  fn dit_layer(mat: &mut RowMajorMatrixViewMut<'_, C>, layer: usize, twiddles: &[C]) {
      let h = mat.height();
      let log_h = log2_strict_usize(h);
      let layer_rev = log_h - 1 - layer;
  
      let half_block_size = 1 << layer;
      let block_size = half_block_size * 2;
  
      for j in (0..h).step_by(block_size) {
          // Unroll i=0 case
          let butterfly_hi = j;
          let butterfly_lo = butterfly_hi + half_block_size;
          twiddle_free_butterfly(mat, butterfly_hi, butterfly_lo);
  
          for i in 1..half_block_size {
              let butterfly_hi = j + i;
              let butterfly_lo = butterfly_hi + half_block_size;
              let twiddle = twiddles[i << layer_rev];
              dit_butterfly(mat, butterfly_hi, butterfly_lo, twiddle);
          }
      }
  }
  *)
  Definition dit_layer (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
    match ε, τ, α with
    | [], [], [ mat; layer; twiddles ] =>
      ltac:(M.monadic
        (let mat := M.alloc (| mat |) in
        let layer := M.alloc (| layer |) in
        let twiddles := M.alloc (| twiddles |) in
        M.read (|
          let~ h : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
            M.alloc (|
              M.call_closure (|
                Ty.path "usize",
                M.get_trait_method (|
                  "p3_matrix::Matrix",
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                        [ Value.Integer IntegerKind.Usize 2 ]
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                        ];
                      Ty.apply
                        (Ty.path "&mut")
                        []
                        [
                          Ty.apply
                            (Ty.path "slice")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ]
                        ]
                    ],
                  [],
                  [
                    Ty.apply
                      (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                      [ Value.Integer IntegerKind.Usize 2 ]
                      [
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                      ]
                  ],
                  "height",
                  [],
                  []
                |),
                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| mat |) |) |) ]
              |)
            |) in
          let~ log_h : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
            M.alloc (|
              M.call_closure (|
                Ty.path "usize",
                M.get_function (| "p3_util::log2_strict_usize", [], [] |),
                [ M.read (| h |) ]
              |)
            |) in
          let~ layer_rev : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
            M.alloc (|
              M.call_closure (|
                Ty.path "usize",
                BinOp.Wrap.sub,
                [
                  M.call_closure (|
                    Ty.path "usize",
                    BinOp.Wrap.sub,
                    [ M.read (| log_h |); Value.Integer IntegerKind.Usize 1 ]
                  |);
                  M.read (| layer |)
                ]
              |)
            |) in
          let~ half_block_size : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
            M.alloc (|
              M.call_closure (|
                Ty.path "usize",
                BinOp.Wrap.shl,
                [ Value.Integer IntegerKind.Usize 1; M.read (| layer |) ]
              |)
            |) in
          let~ block_size : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
            M.alloc (|
              M.call_closure (|
                Ty.path "usize",
                BinOp.Wrap.mul,
                [ M.read (| half_block_size |); Value.Integer IntegerKind.Usize 2 ]
              |)
            |) in
          M.use
            (M.match_operator (|
              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
              M.alloc (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::iter::adapters::step_by::StepBy")
                    []
                    [ Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ] ],
                  M.get_trait_method (|
                    "core::iter::traits::collect::IntoIterator",
                    Ty.apply
                      (Ty.path "core::iter::adapters::step_by::StepBy")
                      []
                      [ Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ] ],
                    [],
                    [],
                    "into_iter",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::iter::adapters::step_by::StepBy")
                        []
                        [ Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ] ],
                      M.get_trait_method (|
                        "core::iter::traits::iterator::Iterator",
                        Ty.apply (Ty.path "core::ops::range::Range") [] [ Ty.path "usize" ],
                        [],
                        [],
                        "step_by",
                        [],
                        []
                      |),
                      [
                        Value.StructRecord
                          "core::ops::range::Range"
                          [ ("start", Value.Integer IntegerKind.Usize 0); ("end_", M.read (| h |))
                          ];
                        M.read (| block_size |)
                      ]
                    |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let iter := M.copy (| γ |) in
                    M.loop (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      ltac:(M.monadic
                        (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                            M.alloc (|
                              M.call_closure (|
                                Ty.apply (Ty.path "core::option::Option") [] [ Ty.path "usize" ],
                                M.get_trait_method (|
                                  "core::iter::traits::iterator::Iterator",
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::step_by::StepBy")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::ops::range::Range")
                                        []
                                        [ Ty.path "usize" ]
                                    ],
                                  [],
                                  [],
                                  "next",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.MutRef,
                                    M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                  |)
                                ]
                              |)
                            |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let _ :=
                                    M.is_struct_tuple (| γ, "core::option::Option::None" |) in
                                  M.alloc (| M.never_to_any (| M.read (| M.break (||) |) |) |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ0_0 :=
                                    M.SubPointer.get_struct_tuple_field (|
                                      γ,
                                      "core::option::Option::Some",
                                      0
                                    |) in
                                  let j := M.copy (| γ0_0 |) in
                                  let~ butterfly_hi :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                                    M.copy (| j |) in
                                  let~ butterfly_lo :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "usize",
                                        BinOp.Wrap.add,
                                        [ M.read (| butterfly_hi |); M.read (| half_block_size |) ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.tuple [],
                                        M.get_function (|
                                          "p3_mersenne_31::radix_2_dit::twiddle_free_butterfly",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.MutRef,
                                            M.deref (| M.read (| mat |) |)
                                          |);
                                          M.read (| butterfly_hi |);
                                          M.read (| butterfly_lo |)
                                        ]
                                      |)
                                    |) in
                                  M.use
                                    (M.match_operator (|
                                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                      M.alloc (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "core::ops::range::Range")
                                            []
                                            [ Ty.path "usize" ],
                                          M.get_trait_method (|
                                            "core::iter::traits::collect::IntoIterator",
                                            Ty.apply
                                              (Ty.path "core::ops::range::Range")
                                              []
                                              [ Ty.path "usize" ],
                                            [],
                                            [],
                                            "into_iter",
                                            [],
                                            []
                                          |),
                                          [
                                            Value.StructRecord
                                              "core::ops::range::Range"
                                              [
                                                ("start", Value.Integer IntegerKind.Usize 1);
                                                ("end_", M.read (| half_block_size |))
                                              ]
                                          ]
                                        |)
                                      |),
                                      [
                                        fun γ =>
                                          ltac:(M.monadic
                                            (let iter := M.copy (| γ |) in
                                            M.loop (|
                                              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                              ltac:(M.monadic
                                                (let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.match_operator (|
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::option::Option")
                                                          []
                                                          [ Ty.path "usize" ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path "core::ops::range::Range")
                                                            []
                                                            [ Ty.path "usize" ],
                                                          [],
                                                          [],
                                                          "next",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                iter
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |),
                                                    [
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let _ :=
                                                            M.is_struct_tuple (|
                                                              γ,
                                                              "core::option::Option::None"
                                                            |) in
                                                          M.alloc (|
                                                            M.never_to_any (|
                                                              M.read (| M.break (||) |)
                                                            |)
                                                          |)));
                                                      fun γ =>
                                                        ltac:(M.monadic
                                                          (let γ0_0 :=
                                                            M.SubPointer.get_struct_tuple_field (|
                                                              γ,
                                                              "core::option::Option::Some",
                                                              0
                                                            |) in
                                                          let i := M.copy (| γ0_0 |) in
                                                          let~ butterfly_hi :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [ Ty.path "usize" ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.path "usize",
                                                                BinOp.Wrap.add,
                                                                [ M.read (| j |); M.read (| i |) ]
                                                              |)
                                                            |) in
                                                          let~ butterfly_lo :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [ Ty.path "usize" ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.path "usize",
                                                                BinOp.Wrap.add,
                                                                [
                                                                  M.read (| butterfly_hi |);
                                                                  M.read (| half_block_size |)
                                                                ]
                                                              |)
                                                            |) in
                                                          let~ twiddle :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                                    [
                                                                      Value.Integer
                                                                        IntegerKind.Usize
                                                                        2
                                                                    ]
                                                                    [
                                                                      Ty.path
                                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                                      Ty.path
                                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                                    ]
                                                                ] :=
                                                            M.copy (|
                                                              M.SubPointer.get_array_field (|
                                                                M.deref (| M.read (| twiddles |) |),
                                                                M.call_closure (|
                                                                  Ty.path "usize",
                                                                  BinOp.Wrap.shl,
                                                                  [
                                                                    M.read (| i |);
                                                                    M.read (| layer_rev |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |) in
                                                          let~ _ :
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [ Ty.tuple [] ] :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.tuple [],
                                                                M.get_function (|
                                                                  "p3_mersenne_31::radix_2_dit::dit_butterfly",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    M.deref (| M.read (| mat |) |)
                                                                  |);
                                                                  M.read (| butterfly_hi |);
                                                                  M.read (| butterfly_lo |);
                                                                  M.read (| twiddle |)
                                                                ]
                                                              |)
                                                            |) in
                                                          M.alloc (| Value.Tuple [] |)))
                                                    ]
                                                  |) in
                                                M.alloc (| Value.Tuple [] |)))
                                            |)))
                                      ]
                                    |))))
                            ]
                          |) in
                        M.alloc (| Value.Tuple [] |)))
                    |)))
              ]
            |))
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_dit_layer :
    M.IsFunction.C "p3_mersenne_31::radix_2_dit::dit_layer" dit_layer.
  Admitted.
  Global Typeclasses Opaque dit_layer.
  
  (*
  fn twiddle_free_butterfly(mat: &mut RowMajorMatrixViewMut<'_, C>, row_1: usize, row_2: usize) {
      let ((shorts_1, suffix_1), (shorts_2, suffix_2)) = mat.packed_row_pair_mut(row_1, row_2);
  
      // TODO: There's no special packing for Mersenne31Complex at the
      // time of writing; when there is we'll want to expand this out
      // into three separate loops.
      let row_1 = shorts_1.iter_mut().chain(suffix_1);
      let row_2 = shorts_2.iter_mut().chain(suffix_2);
  
      for (x, y) in row_1.zip(row_2) {
          let sum = *x + *y;
          let diff = *x - *y;
          *x = sum;
          *y = diff;
      }
  }
  *)
  Definition twiddle_free_butterfly (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
    match ε, τ, α with
    | [], [], [ mat; row_1; row_2 ] =>
      ltac:(M.monadic
        (let mat := M.alloc (| mat |) in
        let row_1 := M.alloc (| row_1 |) in
        let row_2 := M.alloc (| row_2 |) in
        M.read (|
          M.match_operator (|
            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
            M.alloc (|
              M.call_closure (|
                Ty.tuple
                  [
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ];
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ]
                      ];
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ];
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ]
                      ]
                  ],
                M.get_associated_function (|
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                        [ Value.Integer IntegerKind.Usize 2 ]
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                        ];
                      Ty.apply
                        (Ty.path "&mut")
                        []
                        [
                          Ty.apply
                            (Ty.path "slice")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ]
                        ]
                    ],
                  "packed_row_pair_mut",
                  [],
                  [
                    Ty.apply
                      (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                      [ Value.Integer IntegerKind.Usize 2 ]
                      [
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                      ]
                  ]
                |),
                [
                  M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| mat |) |) |);
                  M.read (| row_1 |);
                  M.read (| row_2 |)
                ]
              |)
            |),
            [
              fun γ =>
                ltac:(M.monadic
                  (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                  let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                  let γ1_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                  let γ1_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                  let shorts_1 := M.copy (| γ1_0 |) in
                  let suffix_1 := M.copy (| γ1_1 |) in
                  let γ1_0 := M.SubPointer.get_tuple_field (| γ0_1, 0 |) in
                  let γ1_1 := M.SubPointer.get_tuple_field (| γ0_1, 1 |) in
                  let shorts_2 := M.copy (| γ1_0 |) in
                  let suffix_2 := M.copy (| γ1_1 |) in
                  let~ row_1 :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ]
                            ]
                        ] :=
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::chain::Chain")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ];
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply
                            (Ty.path "core::slice::iter::IterMut")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ],
                          [],
                          [],
                          "chain",
                          [],
                          [
                            Ty.apply
                              (Ty.path "&mut")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                      [ Value.Integer IntegerKind.Usize 2 ]
                                      [
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                      ]
                                  ]
                              ]
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ],
                              "iter_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.MutRef,
                                M.deref (| M.read (| shorts_1 |) |)
                              |)
                            ]
                          |);
                          M.read (| suffix_1 |)
                        ]
                      |)
                    |) in
                  let~ row_2 :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ]
                            ]
                        ] :=
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::chain::Chain")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ];
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply
                            (Ty.path "core::slice::iter::IterMut")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ],
                          [],
                          [],
                          "chain",
                          [],
                          [
                            Ty.apply
                              (Ty.path "&mut")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                      [ Value.Integer IntegerKind.Usize 2 ]
                                      [
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                      ]
                                  ]
                              ]
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ],
                              "iter_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.MutRef,
                                M.deref (| M.read (| shorts_2 |) |)
                              |)
                            ]
                          |);
                          M.read (| suffix_2 |)
                        ]
                      |)
                    |) in
                  M.use
                    (M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::zip::Zip")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ]
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "core::iter::adapters::zip::Zip")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::chain::Chain")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ];
                                Ty.apply
                                  (Ty.path "core::iter::adapters::chain::Chain")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ]
                              ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::zip::Zip")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::chain::Chain")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ],
                                [],
                                [],
                                "zip",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ]
                                ]
                              |),
                              [ M.read (| row_1 |); M.read (| row_2 |) ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let iter := M.copy (| γ |) in
                            M.loop (|
                              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                              ltac:(M.monadic
                                (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&mut")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                      [ Value.Integer IntegerKind.Usize 2 ]
                                                      [
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                      ]
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&mut")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                      [ Value.Integer IntegerKind.Usize 2 ]
                                                      [
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        M.get_trait_method (|
                                          "core::iter::traits::iterator::Iterator",
                                          Ty.apply
                                            (Ty.path "core::iter::adapters::zip::Zip")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::chain::Chain")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::chain::Chain")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                          [],
                                          [],
                                          "next",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.MutRef,
                                            M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                          |)
                                        ]
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let _ :=
                                            M.is_struct_tuple (|
                                              γ,
                                              "core::option::Option::None"
                                            |) in
                                          M.alloc (|
                                            M.never_to_any (| M.read (| M.break (||) |) |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 :=
                                            M.SubPointer.get_struct_tuple_field (|
                                              γ,
                                              "core::option::Option::Some",
                                              0
                                            |) in
                                          let γ1_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                          let γ1_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                          let x := M.copy (| γ1_0 |) in
                                          let y := M.copy (| γ1_1 |) in
                                          let~ sum :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                    [ Value.Integer IntegerKind.Usize 2 ]
                                                    [
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                    ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path
                                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                  [ Value.Integer IntegerKind.Usize 2 ]
                                                  [
                                                    Ty.path
                                                      "p3_mersenne_31::mersenne_31::Mersenne31";
                                                    Ty.path
                                                      "p3_mersenne_31::mersenne_31::Mersenne31"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::ops::arith::Add",
                                                  Ty.apply
                                                    (Ty.path
                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                    [ Value.Integer IntegerKind.Usize 2 ]
                                                    [
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                    ],
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                      [ Value.Integer IntegerKind.Usize 2 ]
                                                      [
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                      ]
                                                  ],
                                                  "add",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.read (| M.deref (| M.read (| x |) |) |);
                                                  M.read (| M.deref (| M.read (| y |) |) |)
                                                ]
                                              |)
                                            |) in
                                          let~ diff :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                    [ Value.Integer IntegerKind.Usize 2 ]
                                                    [
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                    ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path
                                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                  [ Value.Integer IntegerKind.Usize 2 ]
                                                  [
                                                    Ty.path
                                                      "p3_mersenne_31::mersenne_31::Mersenne31";
                                                    Ty.path
                                                      "p3_mersenne_31::mersenne_31::Mersenne31"
                                                  ],
                                                M.get_trait_method (|
                                                  "core::ops::arith::Sub",
                                                  Ty.apply
                                                    (Ty.path
                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                    [ Value.Integer IntegerKind.Usize 2 ]
                                                    [
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                    ],
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                      [ Value.Integer IntegerKind.Usize 2 ]
                                                      [
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                      ]
                                                  ],
                                                  "sub",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.read (| M.deref (| M.read (| x |) |) |);
                                                  M.read (| M.deref (| M.read (| y |) |) |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (|
                                              M.write (|
                                                M.deref (| M.read (| x |) |),
                                                M.read (| sum |)
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (|
                                              M.write (|
                                                M.deref (| M.read (| y |) |),
                                                M.read (| diff |)
                                              |)
                                            |) in
                                          M.alloc (| Value.Tuple [] |)))
                                    ]
                                  |) in
                                M.alloc (| Value.Tuple [] |)))
                            |)))
                      ]
                    |))))
            ]
          |)
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_twiddle_free_butterfly :
    M.IsFunction.C "p3_mersenne_31::radix_2_dit::twiddle_free_butterfly" twiddle_free_butterfly.
  Admitted.
  Global Typeclasses Opaque twiddle_free_butterfly.
  
  (*
  fn dit_butterfly(mat: &mut RowMajorMatrixViewMut<'_, C>, row_1: usize, row_2: usize, twiddle: C) {
      let ((shorts_1, suffix_1), (shorts_2, suffix_2)) = mat.packed_row_pair_mut(row_1, row_2);
  
      // TODO: There's no special packing for Mersenne31Complex at the
      // time of writing; when there is we'll want to expand this out
      // into three separate loops.
      let row_1 = shorts_1.iter_mut().chain(suffix_1);
      let row_2 = shorts_2.iter_mut().chain(suffix_2);
  
      for (x, y) in row_1.zip(row_2) {
          dit_butterfly_inner(x, y, twiddle);
      }
  }
  *)
  Definition dit_butterfly (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
    match ε, τ, α with
    | [], [], [ mat; row_1; row_2; twiddle ] =>
      ltac:(M.monadic
        (let mat := M.alloc (| mat |) in
        let row_1 := M.alloc (| row_1 |) in
        let row_2 := M.alloc (| row_2 |) in
        let twiddle := M.alloc (| twiddle |) in
        M.read (|
          M.match_operator (|
            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
            M.alloc (|
              M.call_closure (|
                Ty.tuple
                  [
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ];
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ]
                      ];
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ];
                        Ty.apply
                          (Ty.path "&mut")
                          []
                          [
                            Ty.apply
                              (Ty.path "slice")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ]
                      ]
                  ],
                M.get_associated_function (|
                  Ty.apply
                    (Ty.path "p3_matrix::dense::DenseMatrix")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                        [ Value.Integer IntegerKind.Usize 2 ]
                        [
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                        ];
                      Ty.apply
                        (Ty.path "&mut")
                        []
                        [
                          Ty.apply
                            (Ty.path "slice")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ]
                        ]
                    ],
                  "packed_row_pair_mut",
                  [],
                  [
                    Ty.apply
                      (Ty.path "p3_field::extension::binomial_extension::BinomialExtensionField")
                      [ Value.Integer IntegerKind.Usize 2 ]
                      [
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                      ]
                  ]
                |),
                [
                  M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| mat |) |) |);
                  M.read (| row_1 |);
                  M.read (| row_2 |)
                ]
              |)
            |),
            [
              fun γ =>
                ltac:(M.monadic
                  (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                  let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                  let γ1_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                  let γ1_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                  let shorts_1 := M.copy (| γ1_0 |) in
                  let suffix_1 := M.copy (| γ1_1 |) in
                  let γ1_0 := M.SubPointer.get_tuple_field (| γ0_1, 0 |) in
                  let γ1_1 := M.SubPointer.get_tuple_field (| γ0_1, 1 |) in
                  let shorts_2 := M.copy (| γ1_0 |) in
                  let suffix_2 := M.copy (| γ1_1 |) in
                  let~ row_1 :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ]
                            ]
                        ] :=
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::chain::Chain")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ];
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply
                            (Ty.path "core::slice::iter::IterMut")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ],
                          [],
                          [],
                          "chain",
                          [],
                          [
                            Ty.apply
                              (Ty.path "&mut")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                      [ Value.Integer IntegerKind.Usize 2 ]
                                      [
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                      ]
                                  ]
                              ]
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ],
                              "iter_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.MutRef,
                                M.deref (| M.read (| shorts_1 |) |)
                              |)
                            ]
                          |);
                          M.read (| suffix_1 |)
                        ]
                      |)
                    |) in
                  let~ row_2 :
                      Ty.apply
                        (Ty.path "*")
                        []
                        [
                          Ty.apply
                            (Ty.path "core::iter::adapters::chain::Chain")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::slice::iter::IterMut")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ]
                            ]
                        ] :=
                    M.alloc (|
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::chain::Chain")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ];
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply
                            (Ty.path "core::slice::iter::IterMut")
                            []
                            [
                              Ty.apply
                                (Ty.path
                                  "p3_field::extension::binomial_extension::BinomialExtensionField")
                                [ Value.Integer IntegerKind.Usize 2 ]
                                [
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                  Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                ]
                            ],
                          [],
                          [],
                          "chain",
                          [],
                          [
                            Ty.apply
                              (Ty.path "&mut")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path
                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                      [ Value.Integer IntegerKind.Usize 2 ]
                                      [
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                      ]
                                  ]
                              ]
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::slice::iter::IterMut")
                              []
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ],
                            M.get_associated_function (|
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ],
                              "iter_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.MutRef,
                                M.deref (| M.read (| shorts_2 |) |)
                              |)
                            ]
                          |);
                          M.read (| suffix_2 |)
                        ]
                      |)
                    |) in
                  M.use
                    (M.match_operator (|
                      Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::iter::adapters::zip::Zip")
                            []
                            [
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ]
                                ];
                              Ty.apply
                                (Ty.path "core::iter::adapters::chain::Chain")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::slice::iter::IterMut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ]
                                ]
                            ],
                          M.get_trait_method (|
                            "core::iter::traits::collect::IntoIterator",
                            Ty.apply
                              (Ty.path "core::iter::adapters::zip::Zip")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::iter::adapters::chain::Chain")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ];
                                Ty.apply
                                  (Ty.path "core::iter::adapters::chain::Chain")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ]
                              ],
                            [],
                            [],
                            "into_iter",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::iter::adapters::zip::Zip")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ];
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::chain::Chain")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ];
                                    Ty.apply
                                      (Ty.path "core::slice::iter::IterMut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ],
                                [],
                                [],
                                "zip",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::chain::Chain")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ];
                                      Ty.apply
                                        (Ty.path "core::slice::iter::IterMut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ]
                                ]
                              |),
                              [ M.read (| row_1 |); M.read (| row_2 |) ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let iter := M.copy (| γ |) in
                            M.loop (|
                              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                              ltac:(M.monadic
                                (let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "core::option::Option")
                                          []
                                          [
                                            Ty.tuple
                                              [
                                                Ty.apply
                                                  (Ty.path "&mut")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                      [ Value.Integer IntegerKind.Usize 2 ]
                                                      [
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                      ]
                                                  ];
                                                Ty.apply
                                                  (Ty.path "&mut")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                      [ Value.Integer IntegerKind.Usize 2 ]
                                                      [
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31";
                                                        Ty.path
                                                          "p3_mersenne_31::mersenne_31::Mersenne31"
                                                      ]
                                                  ]
                                              ]
                                          ],
                                        M.get_trait_method (|
                                          "core::iter::traits::iterator::Iterator",
                                          Ty.apply
                                            (Ty.path "core::iter::adapters::zip::Zip")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::chain::Chain")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ]
                                                ];
                                              Ty.apply
                                                (Ty.path "core::iter::adapters::chain::Chain")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ];
                                                  Ty.apply
                                                    (Ty.path "core::slice::iter::IterMut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31";
                                                          Ty.path
                                                            "p3_mersenne_31::mersenne_31::Mersenne31"
                                                        ]
                                                    ]
                                                ]
                                            ],
                                          [],
                                          [],
                                          "next",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.MutRef,
                                            M.deref (| M.borrow (| Pointer.Kind.MutRef, iter |) |)
                                          |)
                                        ]
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let _ :=
                                            M.is_struct_tuple (|
                                              γ,
                                              "core::option::Option::None"
                                            |) in
                                          M.alloc (|
                                            M.never_to_any (| M.read (| M.break (||) |) |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ0_0 :=
                                            M.SubPointer.get_struct_tuple_field (|
                                              γ,
                                              "core::option::Option::Some",
                                              0
                                            |) in
                                          let γ1_0 := M.SubPointer.get_tuple_field (| γ0_0, 0 |) in
                                          let γ1_1 := M.SubPointer.get_tuple_field (| γ0_0, 1 |) in
                                          let x := M.copy (| γ1_0 |) in
                                          let y := M.copy (| γ1_1 |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.tuple [],
                                                M.get_function (|
                                                  "p3_mersenne_31::radix_2_dit::dit_butterfly_inner",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.MutRef,
                                                    M.deref (| M.read (| x |) |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.MutRef,
                                                    M.deref (| M.read (| y |) |)
                                                  |);
                                                  M.read (| twiddle |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (| Value.Tuple [] |)))
                                    ]
                                  |) in
                                M.alloc (| Value.Tuple [] |)))
                            |)))
                      ]
                    |))))
            ]
          |)
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_dit_butterfly :
    M.IsFunction.C "p3_mersenne_31::radix_2_dit::dit_butterfly" dit_butterfly.
  Admitted.
  Global Typeclasses Opaque dit_butterfly.
  
  (*
  fn dit_butterfly_inner(x: &mut C, y: &mut C, twiddle: C) {
      // Adding any multiple of P doesn't change the result modulo P;
      // we use this to ensure that the inputs to `from_u64`
      // below are non-negative.
      const P_SQR: i64 = (F::ORDER_U64 * F::ORDER_U64) as i64;
      const TWO_P_SQR: i64 = 2 * P_SQR;
  
      // Unpack the inputs;
      //   x = x1 + i*x2
      //   y = y1 + i*y2
      //   twiddle = w1 + i*w2
      let unpack = |x: C| (x.to_array()[0].value as i64, x.to_array()[1].value as i64);
      let (x1, x2) = unpack( *x);
      let (y1, y2) = unpack( *y);
      let (w1, w2) = unpack(twiddle);
  
      // x ± y*twiddle
      // = (x1 + i*x2) ± (y1 + i*y2)*(w1 + i*w2)
      // = (x1 ± (y1*w1 - y2*w2)) + i*(x2 ± (y2*w1 + y1*w2))
      // = (x1 ± z1) + i*(x2 ± z2)
      // where z1 + i*z2 = y*twiddle
  
      // SAFE: multiplying `u64` values within the range of `Mersennes31` doesn't overflow:
      // (2^31 - 1) * (2^31 - 1) = 2^62 - 2^32 + 1 < 2^64 - 1
      let z1 = y1 * w1 - y2 * w2; // -P^2 <= z1 <= P^2
  
      // NB: 2*P^2 + P < 2^63
  
      // -P^2 <= x1 + z1 <= P^2 + P
      let a1 = F::from_u64((P_SQR + x1 + z1) as u64);
      // -P^2 <= x1 - z1 <= P^2 + P
      let b1 = F::from_u64((P_SQR + x1 - z1) as u64);
  
      // SAFE: multiplying `u64` values within the range of `Mersennes31` doesn't overflow:
      // 2 * (2^31 - 1) * (2^31 - 1) = 2 * (2^62 - 2^32 + 1) < 2^64 - 1
      let z2 = y2 * w1 + y1 * w2; // 0 <= z2 <= 2*P^2
  
      // 0 <= x2 + z2 <= 2*P^2 + P
      let a2 = F::from_u64((x2 + z2) as u64);
      // -2*P^2 <= x2 - z2 <= P
      let b2 = F::from_u64((TWO_P_SQR + x2 - z2) as u64);
  
      *x = C::new_complex(a1, a2);
      *y = C::new_complex(b1, b2);
  }
  *)
  Definition dit_butterfly_inner (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
    match ε, τ, α with
    | [], [], [ x; y; twiddle ] =>
      ltac:(M.monadic
        (let x := M.alloc (| x |) in
        let y := M.alloc (| y |) in
        let twiddle := M.alloc (| twiddle |) in
        M.read (|
          let~ unpack :
              Ty.apply
                (Ty.path "*")
                []
                [
                  Ty.function
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path
                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                            [ Value.Integer IntegerKind.Usize 2 ]
                            [
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                            ]
                        ]
                    ]
                    (Ty.tuple [ Ty.path "i64"; Ty.path "i64" ])
                ] :=
            M.alloc (|
              M.closure
                (fun γ =>
                  ltac:(M.monadic
                    match γ with
                    | [ α0 ] =>
                      ltac:(M.monadic
                        (M.match_operator (|
                          Ty.apply
                            (Ty.path "*")
                            []
                            [
                              Ty.function
                                [
                                  Ty.tuple
                                    [
                                      Ty.apply
                                        (Ty.path
                                          "p3_field::extension::binomial_extension::BinomialExtensionField")
                                        [ Value.Integer IntegerKind.Usize 2 ]
                                        [
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                        ]
                                    ]
                                ]
                                (Ty.tuple [ Ty.path "i64"; Ty.path "i64" ])
                            ],
                          M.alloc (| α0 |),
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (let x := M.copy (| γ |) in
                                Value.Tuple
                                  [
                                    M.cast
                                      (Ty.path "i64")
                                      (M.read (|
                                        M.SubPointer.get_struct_record_field (|
                                          M.SubPointer.get_array_field (|
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "array")
                                                  [ Value.Integer IntegerKind.Usize 2 ]
                                                  [
                                                    Ty.path
                                                      "p3_mersenne_31::mersenne_31::Mersenne31"
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path
                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                    [ Value.Integer IntegerKind.Usize 2 ]
                                                    [
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                    ],
                                                  "to_array",
                                                  [],
                                                  []
                                                |),
                                                [ M.borrow (| Pointer.Kind.Ref, x |) ]
                                              |)
                                            |),
                                            Value.Integer IntegerKind.Usize 0
                                          |),
                                          "p3_mersenne_31::mersenne_31::Mersenne31",
                                          "value"
                                        |)
                                      |));
                                    M.cast
                                      (Ty.path "i64")
                                      (M.read (|
                                        M.SubPointer.get_struct_record_field (|
                                          M.SubPointer.get_array_field (|
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "array")
                                                  [ Value.Integer IntegerKind.Usize 2 ]
                                                  [
                                                    Ty.path
                                                      "p3_mersenne_31::mersenne_31::Mersenne31"
                                                  ],
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path
                                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                                    [ Value.Integer IntegerKind.Usize 2 ]
                                                    [
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31";
                                                      Ty.path
                                                        "p3_mersenne_31::mersenne_31::Mersenne31"
                                                    ],
                                                  "to_array",
                                                  [],
                                                  []
                                                |),
                                                [ M.borrow (| Pointer.Kind.Ref, x |) ]
                                              |)
                                            |),
                                            Value.Integer IntegerKind.Usize 1
                                          |),
                                          "p3_mersenne_31::mersenne_31::Mersenne31",
                                          "value"
                                        |)
                                      |))
                                  ]))
                          ]
                        |)))
                    | _ => M.impossible "wrong number of arguments"
                    end))
            |) in
          M.match_operator (|
            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
            M.alloc (|
              M.call_closure (|
                Ty.tuple [ Ty.path "i64"; Ty.path "i64" ],
                M.get_trait_method (|
                  "core::ops::function::Fn",
                  Ty.function
                    [
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path
                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                            [ Value.Integer IntegerKind.Usize 2 ]
                            [
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                            ]
                        ]
                    ]
                    (Ty.tuple [ Ty.path "i64"; Ty.path "i64" ]),
                  [],
                  [
                    Ty.tuple
                      [
                        Ty.apply
                          (Ty.path
                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                          [ Value.Integer IntegerKind.Usize 2 ]
                          [
                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                          ]
                      ]
                  ],
                  "call",
                  [],
                  []
                |),
                [
                  M.borrow (| Pointer.Kind.Ref, unpack |);
                  Value.Tuple [ M.read (| M.deref (| M.read (| x |) |) |) ]
                ]
              |)
            |),
            [
              fun γ =>
                ltac:(M.monadic
                  (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                  let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                  let x1 := M.copy (| γ0_0 |) in
                  let x2 := M.copy (| γ0_1 |) in
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (|
                      M.call_closure (|
                        Ty.tuple [ Ty.path "i64"; Ty.path "i64" ],
                        M.get_trait_method (|
                          "core::ops::function::Fn",
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path
                                      "p3_field::extension::binomial_extension::BinomialExtensionField")
                                    [ Value.Integer IntegerKind.Usize 2 ]
                                    [
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                      Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                    ]
                                ]
                            ]
                            (Ty.tuple [ Ty.path "i64"; Ty.path "i64" ]),
                          [],
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path
                                    "p3_field::extension::binomial_extension::BinomialExtensionField")
                                  [ Value.Integer IntegerKind.Usize 2 ]
                                  [
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                    Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                  ]
                              ]
                          ],
                          "call",
                          [],
                          []
                        |),
                        [
                          M.borrow (| Pointer.Kind.Ref, unpack |);
                          Value.Tuple [ M.read (| M.deref (| M.read (| y |) |) |) ]
                        ]
                      |)
                    |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                          let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                          let y1 := M.copy (| γ0_0 |) in
                          let y2 := M.copy (| γ0_1 |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                            M.alloc (|
                              M.call_closure (|
                                Ty.tuple [ Ty.path "i64"; Ty.path "i64" ],
                                M.get_trait_method (|
                                  "core::ops::function::Fn",
                                  Ty.function
                                    [
                                      Ty.tuple
                                        [
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ]
                                        ]
                                    ]
                                    (Ty.tuple [ Ty.path "i64"; Ty.path "i64" ]),
                                  [],
                                  [
                                    Ty.tuple
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_field::extension::binomial_extension::BinomialExtensionField")
                                          [ Value.Integer IntegerKind.Usize 2 ]
                                          [
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                            Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                          ]
                                      ]
                                  ],
                                  "call",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (| Pointer.Kind.Ref, unpack |);
                                  Value.Tuple [ M.read (| twiddle |) ]
                                ]
                              |)
                            |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                  let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                  let w1 := M.copy (| γ0_0 |) in
                                  let w2 := M.copy (| γ0_1 |) in
                                  let~ z1 : Ty.apply (Ty.path "*") [] [ Ty.path "i64" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "i64",
                                        BinOp.Wrap.sub,
                                        [
                                          M.call_closure (|
                                            Ty.path "i64",
                                            BinOp.Wrap.mul,
                                            [ M.read (| y1 |); M.read (| w1 |) ]
                                          |);
                                          M.call_closure (|
                                            Ty.path "i64",
                                            BinOp.Wrap.mul,
                                            [ M.read (| y2 |); M.read (| w2 |) ]
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ a1 :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                        M.get_trait_method (|
                                          "p3_field::field::PrimeCharacteristicRing",
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                          [],
                                          [],
                                          "from_u64",
                                          [],
                                          []
                                        |),
                                        [
                                          M.cast
                                            (Ty.path "u64")
                                            (M.call_closure (|
                                              Ty.path "i64",
                                              BinOp.Wrap.add,
                                              [
                                                M.call_closure (|
                                                  Ty.path "i64",
                                                  BinOp.Wrap.add,
                                                  [
                                                    M.read (|
                                                      get_constant (|
                                                        "p3_mersenne_31::radix_2_dit::dit_butterfly_inner::P_SQR",
                                                        Ty.path "i64"
                                                      |)
                                                    |);
                                                    M.read (| x1 |)
                                                  ]
                                                |);
                                                M.read (| z1 |)
                                              ]
                                            |))
                                        ]
                                      |)
                                    |) in
                                  let~ b1 :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                        M.get_trait_method (|
                                          "p3_field::field::PrimeCharacteristicRing",
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                          [],
                                          [],
                                          "from_u64",
                                          [],
                                          []
                                        |),
                                        [
                                          M.cast
                                            (Ty.path "u64")
                                            (M.call_closure (|
                                              Ty.path "i64",
                                              BinOp.Wrap.sub,
                                              [
                                                M.call_closure (|
                                                  Ty.path "i64",
                                                  BinOp.Wrap.add,
                                                  [
                                                    M.read (|
                                                      get_constant (|
                                                        "p3_mersenne_31::radix_2_dit::dit_butterfly_inner::P_SQR",
                                                        Ty.path "i64"
                                                      |)
                                                    |);
                                                    M.read (| x1 |)
                                                  ]
                                                |);
                                                M.read (| z1 |)
                                              ]
                                            |))
                                        ]
                                      |)
                                    |) in
                                  let~ z2 : Ty.apply (Ty.path "*") [] [ Ty.path "i64" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "i64",
                                        BinOp.Wrap.add,
                                        [
                                          M.call_closure (|
                                            Ty.path "i64",
                                            BinOp.Wrap.mul,
                                            [ M.read (| y2 |); M.read (| w1 |) ]
                                          |);
                                          M.call_closure (|
                                            Ty.path "i64",
                                            BinOp.Wrap.mul,
                                            [ M.read (| y1 |); M.read (| w2 |) ]
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ a2 :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                        M.get_trait_method (|
                                          "p3_field::field::PrimeCharacteristicRing",
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                          [],
                                          [],
                                          "from_u64",
                                          [],
                                          []
                                        |),
                                        [
                                          M.cast
                                            (Ty.path "u64")
                                            (M.call_closure (|
                                              Ty.path "i64",
                                              BinOp.Wrap.add,
                                              [ M.read (| x2 |); M.read (| z2 |) ]
                                            |))
                                        ]
                                      |)
                                    |) in
                                  let~ b2 :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "p3_mersenne_31::mersenne_31::Mersenne31" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                        M.get_trait_method (|
                                          "p3_field::field::PrimeCharacteristicRing",
                                          Ty.path "p3_mersenne_31::mersenne_31::Mersenne31",
                                          [],
                                          [],
                                          "from_u64",
                                          [],
                                          []
                                        |),
                                        [
                                          M.cast
                                            (Ty.path "u64")
                                            (M.call_closure (|
                                              Ty.path "i64",
                                              BinOp.Wrap.sub,
                                              [
                                                M.call_closure (|
                                                  Ty.path "i64",
                                                  BinOp.Wrap.add,
                                                  [
                                                    M.read (|
                                                      get_constant (|
                                                        "p3_mersenne_31::radix_2_dit::dit_butterfly_inner::TWO_P_SQR",
                                                        Ty.path "i64"
                                                      |)
                                                    |);
                                                    M.read (| x2 |)
                                                  ]
                                                |);
                                                M.read (| z2 |)
                                              ]
                                            |))
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (|
                                      M.write (|
                                        M.deref (| M.read (| x |) |),
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ],
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path
                                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                                              [ Value.Integer IntegerKind.Usize 2 ]
                                              [
                                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                              ],
                                            "new_complex",
                                            [],
                                            []
                                          |),
                                          [ M.read (| a1 |); M.read (| a2 |) ]
                                        |)
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (|
                                      M.write (|
                                        M.deref (| M.read (| y |) |),
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path
                                              "p3_field::extension::binomial_extension::BinomialExtensionField")
                                            [ Value.Integer IntegerKind.Usize 2 ]
                                            [
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                              Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                            ],
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path
                                                "p3_field::extension::binomial_extension::BinomialExtensionField")
                                              [ Value.Integer IntegerKind.Usize 2 ]
                                              [
                                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31";
                                                Ty.path "p3_mersenne_31::mersenne_31::Mersenne31"
                                              ],
                                            "new_complex",
                                            [],
                                            []
                                          |),
                                          [ M.read (| b1 |); M.read (| b2 |) ]
                                        |)
                                      |)
                                    |) in
                                  M.alloc (| Value.Tuple [] |)))
                            ]
                          |)))
                    ]
                  |)))
            ]
          |)
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_dit_butterfly_inner :
    M.IsFunction.C "p3_mersenne_31::radix_2_dit::dit_butterfly_inner" dit_butterfly_inner.
  Admitted.
  Global Typeclasses Opaque dit_butterfly_inner.
  
  Module dit_butterfly_inner.
    Definition value_P_SQR (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      ltac:(M.monadic
        (M.alloc (|
          M.cast
            (Ty.path "i64")
            (M.call_closure (|
              Ty.path "u64",
              BinOp.Wrap.mul,
              [
                M.read (|
                  get_constant (| "p3_field::field::PrimeField64::ORDER_U64", Ty.path "u64" |)
                |);
                M.read (|
                  get_constant (| "p3_field::field::PrimeField64::ORDER_U64", Ty.path "u64" |)
                |)
              ]
            |))
        |))).
    
    Global Instance Instance_IsConstant_value_P_SQR :
      M.IsFunction.C "p3_mersenne_31::radix_2_dit::dit_butterfly_inner::P_SQR" value_P_SQR.
    Admitted.
    Global Typeclasses Opaque value_P_SQR.
    
    Definition value_TWO_P_SQR (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      ltac:(M.monadic
        (M.alloc (|
          M.call_closure (|
            Ty.path "i64",
            BinOp.Wrap.mul,
            [
              Value.Integer IntegerKind.I64 2;
              M.read (|
                get_constant (|
                  "p3_mersenne_31::radix_2_dit::dit_butterfly_inner::P_SQR",
                  Ty.path "i64"
                |)
              |)
            ]
          |)
        |))).
    
    Global Instance Instance_IsConstant_value_TWO_P_SQR :
      M.IsFunction.C "p3_mersenne_31::radix_2_dit::dit_butterfly_inner::TWO_P_SQR" value_TWO_P_SQR.
    Admitted.
    Global Typeclasses Opaque value_TWO_P_SQR.
  End dit_butterfly_inner.
End radix_2_dit.
