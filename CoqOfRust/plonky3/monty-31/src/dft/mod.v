(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module dft.
  (* #[instrument(level = "debug", skip_all)] *)
  Definition coset_shift_and_scale_rows (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
    match ε, τ, α with
    | [], [ F ], [ out; out_ncols; mat; ncols; shift; scale ] =>
      ltac:(M.monadic
        (let out := M.alloc (| out |) in
        let out_ncols := M.alloc (| out_ncols |) in
        let mat := M.alloc (| mat |) in
        let ncols := M.alloc (| ncols |) in
        let shift := M.alloc (| shift |) in
        let scale := M.alloc (| scale |) in
        M.catch_return (Ty.tuple []) (|
          ltac:(M.monadic
            (M.read (|
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] := M.alloc (| Value.Tuple [] |) in
              let __tracing_attr_span := M.copy (| Value.DeclaredButUndefined |) in
              let __tracing_attr_guard := M.copy (| Value.DeclaredButUndefined |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              LogicalOp.or (|
                                LogicalOp.and (|
                                  M.call_closure (|
                                    Ty.path "bool",
                                    M.get_trait_method (|
                                      "core::cmp::PartialOrd",
                                      Ty.path "tracing_core::metadata::Level",
                                      [],
                                      [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                      "le",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        get_associated_constant (|
                                          Ty.path "tracing_core::metadata::Level",
                                          "DEBUG",
                                          Ty.path "tracing_core::metadata::Level"
                                        |)
                                      |);
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        get_constant (|
                                          "tracing::level_filters::STATIC_MAX_LEVEL",
                                          Ty.path "tracing_core::metadata::LevelFilter"
                                        |)
                                      |)
                                    ]
                                  |),
                                  ltac:(M.monadic
                                    (M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialOrd",
                                        Ty.path "tracing_core::metadata::Level",
                                        [],
                                        [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                        "le",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_associated_constant (|
                                            Ty.path "tracing_core::metadata::Level",
                                            "DEBUG",
                                            Ty.path "tracing_core::metadata::Level"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing_core::metadata::LevelFilter",
                                              M.get_associated_function (|
                                                Ty.path "tracing_core::metadata::LevelFilter",
                                                "current",
                                                [],
                                                []
                                              |),
                                              []
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)))
                                |),
                                ltac:(M.monadic (Value.Bool false))
                              |)
                            |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.write (|
                              __tracing_attr_span,
                              M.read (|
                                let~ interest :
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing_core::subscriber::Interest",
                                      M.get_associated_function (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        "never",
                                        [],
                                        []
                                      |),
                                      []
                                    |)
                                  |) in
                                M.match_operator (|
                                  Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                  M.alloc (| Value.Tuple [] |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ :=
                                          M.use
                                            (M.alloc (|
                                              LogicalOp.and (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_trait_method (|
                                                        "core::cmp::PartialOrd",
                                                        Ty.path "tracing_core::metadata::Level",
                                                        [],
                                                        [
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter"
                                                        ],
                                                        "le",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          get_associated_constant (|
                                                            Ty.path "tracing_core::metadata::Level",
                                                            "DEBUG",
                                                            Ty.path "tracing_core::metadata::Level"
                                                          |)
                                                        |);
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          get_constant (|
                                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          |)
                                                        |)
                                                      ]
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "DEBUG",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::metadata::LevelFilter",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  "current",
                                                                  [],
                                                                  []
                                                                |),
                                                                []
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.read (|
                                                      let~ _ :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.tuple [] ] :=
                                                        M.alloc (|
                                                          M.write (|
                                                            interest,
                                                            M.call_closure (|
                                                              Ty.path
                                                                "tracing_core::subscriber::Interest",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                "interest",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::coset_shift_and_scale_rows::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        UnOp.not (|
                                                          M.call_closure (|
                                                            Ty.path "bool",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::subscriber::Interest",
                                                              "is_never",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                interest
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)))
                                                |),
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.path "bool",
                                                    M.get_function (|
                                                      "tracing::__macro_support::__is_enabled",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::metadata::Metadata"
                                                              ],
                                                            M.get_trait_method (|
                                                              "tracing_core::callsite::Callsite",
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite",
                                                              [],
                                                              [],
                                                              "metadata",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.read (|
                                                                    get_constant (|
                                                                      "p3_monty_31::dft::coset_shift_and_scale_rows::__CALLSITE",
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::callsite::DefaultCallsite"
                                                                        ]
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.read (| interest |)
                                                    ]
                                                  |)))
                                              |)
                                            |)) in
                                        let _ :=
                                          is_constant_or_break_match (|
                                            M.read (| γ |),
                                            Value.Bool true
                                          |) in
                                        let~ meta :
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ]
                                              ] :=
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [ Ty.path "tracing_core::metadata::Metadata" ],
                                              M.get_trait_method (|
                                                "tracing_core::callsite::Callsite",
                                                Ty.path "tracing_core::callsite::DefaultCallsite",
                                                [],
                                                [],
                                                "metadata",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.read (|
                                                      get_constant (|
                                                        "p3_monty_31::dft::coset_shift_and_scale_rows::__CALLSITE",
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::callsite::DefaultCallsite"
                                                          ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |) in
                                        M.alloc (|
                                          M.call_closure (|
                                            Ty.path "tracing::span::Span",
                                            M.get_associated_function (|
                                              Ty.path "tracing::span::Span",
                                              "new",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| meta |) |)
                                              |);
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.path "tracing_core::field::ValueSet",
                                                        M.get_associated_function (|
                                                          Ty.path "tracing_core::field::FieldSet",
                                                          "value_set",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [ Value.Integer IntegerKind.Usize 0 ]
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::Field"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::option::Option")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.dyn
                                                                              [
                                                                                ("tracing_core::field::Value::Trait",
                                                                                  [])
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  ]
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::field::FieldSet"
                                                                  ],
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata",
                                                                  "fields",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (| M.read (| meta |) |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.alloc (| Value.Array [] |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              |)
                                            ]
                                          |)
                                        |)));
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let~ span :
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [ Ty.path "tracing::span::Span" ] :=
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_function (|
                                                "tracing::__macro_support::__disabled_span",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::coset_shift_and_scale_rows::__CALLSITE",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |) in
                                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                          M.alloc (| Value.Tuple [] |) in
                                        span))
                                  ]
                                |)
                              |)
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.write (|
                              __tracing_attr_guard,
                              M.call_closure (|
                                Ty.path "tracing::span::Entered",
                                M.get_associated_function (|
                                  Ty.path "tracing::span::Span",
                                  "enter",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, __tracing_attr_span |) ]
                              |)
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ := M.use (M.alloc (| Value.Bool false |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        M.alloc (|
                          M.never_to_any (|
                            M.read (|
                              let~ __tracing_attr_fake_return :
                                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                M.alloc (|
                                  M.never_to_any (|
                                    M.read (|
                                      M.loop (|
                                        Ty.apply (Ty.path "*") [] [ Ty.path "never" ],
                                        ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                      |)
                                    |)
                                  |)
                                |) in
                              M.return_ (| M.read (| __tracing_attr_fake_return |) |)
                            |)
                          |)
                        |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              let~ powers :
                  Ty.apply
                    (Ty.path "*")
                    []
                    [ Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ]
                    ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ],
                    M.get_trait_method (|
                      "core::iter::traits::iterator::Iterator",
                      Ty.apply
                        (Ty.path "core::iter::adapters::take::Take")
                        []
                        [ Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ] ],
                      [],
                      [],
                      "collect",
                      [],
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [ F; Ty.path "alloc::alloc::Global" ]
                      ]
                    |),
                    [
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::take::Take")
                          []
                          [ Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ] ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ],
                          [],
                          [],
                          "take",
                          [],
                          []
                        |),
                        [
                          M.call_closure (|
                            Ty.apply (Ty.path "p3_field::field::Powers") [] [ F ],
                            M.get_trait_method (|
                              "p3_field::field::PrimeCharacteristicRing",
                              F,
                              [],
                              [],
                              "shifted_powers",
                              [],
                              []
                            |),
                            [ M.borrow (| Pointer.Kind.Ref, shift |); M.read (| scale |) ]
                          |);
                          M.read (| ncols |)
                        ]
                      |)
                    ]
                  |)
                |) in
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.tuple [],
                    M.get_trait_method (|
                      "core::iter::traits::iterator::Iterator",
                      Ty.apply
                        (Ty.path "core::iter::adapters::zip::Zip")
                        []
                        [
                          Ty.apply (Ty.path "core::slice::iter::ChunksExactMut") [] [ F ];
                          Ty.apply (Ty.path "core::slice::iter::ChunksExact") [] [ F ]
                        ],
                      [],
                      [],
                      "for_each",
                      [],
                      [
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&mut")
                                      []
                                      [ Ty.apply (Ty.path "slice") [] [ F ] ];
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.apply (Ty.path "slice") [] [ F ] ]
                                  ]
                              ]
                          ]
                          (Ty.tuple [])
                      ]
                    |),
                    [
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::iter::adapters::zip::Zip")
                          []
                          [
                            Ty.apply (Ty.path "core::slice::iter::ChunksExactMut") [] [ F ];
                            Ty.apply (Ty.path "core::slice::iter::ChunksExact") [] [ F ]
                          ],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply (Ty.path "core::slice::iter::ChunksExactMut") [] [ F ],
                          [],
                          [],
                          "zip",
                          [],
                          [ Ty.apply (Ty.path "core::slice::iter::ChunksExact") [] [ F ] ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply (Ty.path "core::slice::iter::ChunksExactMut") [] [ F ],
                            M.get_trait_method (|
                              "p3_maybe_rayon::serial::ParallelSliceMut",
                              Ty.apply (Ty.path "slice") [] [ F ],
                              [],
                              [ F ],
                              "par_chunks_exact_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| out |) |) |);
                              M.read (| out_ncols |)
                            ]
                          |);
                          M.call_closure (|
                            Ty.apply (Ty.path "core::slice::iter::ChunksExact") [] [ F ],
                            M.get_trait_method (|
                              "p3_maybe_rayon::serial::ParallelSlice",
                              Ty.apply (Ty.path "slice") [] [ F ],
                              [],
                              [ F ],
                              "par_chunks_exact",
                              [],
                              []
                            |),
                            [
                              M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| mat |) |) |);
                              M.read (| ncols |)
                            ]
                          |)
                        ]
                      |);
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              ltac:(M.monadic
                                (M.match_operator (|
                                  Ty.apply
                                    (Ty.path "*")
                                    []
                                    [
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&mut")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ F ] ];
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.apply (Ty.path "slice") [] [ F ] ]
                                                ]
                                            ]
                                        ]
                                        (Ty.tuple [])
                                    ],
                                  M.alloc (| α0 |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                                        let out_row := M.copy (| γ0_0 |) in
                                        let in_row := M.copy (| γ0_1 |) in
                                        M.read (|
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.tuple [],
                                                M.get_trait_method (|
                                                  "core::iter::traits::iterator::Iterator",
                                                  Ty.apply
                                                    (Ty.path "core::iter::adapters::map::Map")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "core::iter::adapters::zip::Zip")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::slice::iter::IterMut")
                                                                []
                                                                [ F ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [ F ]
                                                            ];
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::Iter")
                                                            []
                                                            [ F ]
                                                        ];
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.tuple
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&mut")
                                                                        []
                                                                        [ F ];
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [ F ]
                                                                    ];
                                                                  Ty.apply (Ty.path "&") [] [ F ]
                                                                ]
                                                            ]
                                                        ]
                                                        (Ty.tuple
                                                          [
                                                            Ty.apply (Ty.path "&mut") [] [ F ];
                                                            Ty.apply (Ty.path "&") [] [ F ];
                                                            Ty.apply (Ty.path "&") [] [ F ]
                                                          ])
                                                    ],
                                                  [],
                                                  [],
                                                  "for_each",
                                                  [],
                                                  [
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply (Ty.path "&mut") [] [ F ];
                                                                Ty.apply (Ty.path "&") [] [ F ];
                                                                Ty.apply (Ty.path "&") [] [ F ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.tuple [])
                                                  ]
                                                |),
                                                [
                                                  M.read (|
                                                    let~ iter :
                                                        Ty.apply
                                                          (Ty.path "*")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ]
                                                          ] :=
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "core::slice::iter::IterMut")
                                                            []
                                                            [ F ],
                                                          M.get_trait_method (|
                                                            "core::iter::traits::collect::IntoIterator",
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ],
                                                            [],
                                                            [],
                                                            "into_iter",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::slice::iter::IterMut")
                                                                []
                                                                [ F ],
                                                              M.get_associated_function (|
                                                                Ty.apply (Ty.path "slice") [] [ F ],
                                                                "iter_mut",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.MutRef,
                                                                  M.deref (| M.read (| out_row |) |)
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      |) in
                                                    let~ iter :
                                                        Ty.apply
                                                          (Ty.path "*")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::IterMut")
                                                                  []
                                                                  [ F ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [ F ]
                                                              ]
                                                          ] :=
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::slice::iter::IterMut")
                                                                []
                                                                [ F ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [ F ]
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::iter::traits::iterator::Iterator",
                                                            Ty.apply
                                                              (Ty.path "core::slice::iter::IterMut")
                                                              []
                                                              [ F ],
                                                            [],
                                                            [],
                                                            "zip",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "slice")
                                                                    []
                                                                    [ F ]
                                                                ]
                                                            ]
                                                          |),
                                                          [ M.read (| iter |); M.read (| in_row |) ]
                                                        |)
                                                      |) in
                                                    let~ iter :
                                                        Ty.apply
                                                          (Ty.path "*")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::IterMut")
                                                                      []
                                                                      [ F ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [ F ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [ F ]
                                                              ]
                                                          ] :=
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::zip::Zip")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::IterMut")
                                                                    []
                                                                    [ F ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [ F ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [ F ]
                                                            ],
                                                          M.get_trait_method (|
                                                            "core::iter::traits::iterator::Iterator",
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::IterMut")
                                                                  []
                                                                  [ F ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [ F ]
                                                              ],
                                                            [],
                                                            [],
                                                            "zip",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      F;
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.read (| iter |);
                                                            M.borrow (| Pointer.Kind.Ref, powers |)
                                                          ]
                                                        |)
                                                      |) in
                                                    M.alloc (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "core::iter::adapters::map::Map")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::zip::Zip")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::zip::Zip")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::IterMut")
                                                                      []
                                                                      [ F ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      []
                                                                      [ F ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::slice::iter::Iter")
                                                                  []
                                                                  [ F ]
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&mut")
                                                                              []
                                                                              [ F ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [ F ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [ F ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [ F ];
                                                                  Ty.apply (Ty.path "&") [] [ F ];
                                                                  Ty.apply (Ty.path "&") [] [ F ]
                                                                ])
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::zip::Zip")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::zip::Zip")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::IterMut")
                                                                    []
                                                                    [ F ];
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::slice::iter::Iter")
                                                                    []
                                                                    [ F ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::slice::iter::Iter")
                                                                []
                                                                [ F ]
                                                            ],
                                                          [],
                                                          [],
                                                          "map",
                                                          [],
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply (Ty.path "&mut") [] [ F ];
                                                                Ty.apply (Ty.path "&") [] [ F ];
                                                                Ty.apply (Ty.path "&") [] [ F ]
                                                              ];
                                                            Ty.function
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.tuple
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&mut")
                                                                              []
                                                                              [ F ];
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [ F ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [ F ]
                                                                      ]
                                                                  ]
                                                              ]
                                                              (Ty.tuple
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&mut")
                                                                    []
                                                                    [ F ];
                                                                  Ty.apply (Ty.path "&") [] [ F ];
                                                                  Ty.apply (Ty.path "&") [] [ F ]
                                                                ])
                                                          ]
                                                        |),
                                                        [
                                                          M.read (| iter |);
                                                          M.closure
                                                            (fun γ =>
                                                              ltac:(M.monadic
                                                                match γ with
                                                                | [ α0 ] =>
                                                                  ltac:(M.monadic
                                                                    (M.match_operator (|
                                                                      Ty.apply
                                                                        (Ty.path "*")
                                                                        []
                                                                        [
                                                                          Ty.function
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&mut")
                                                                                            []
                                                                                            [ F ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [ F ]
                                                                                        ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "&")
                                                                                        []
                                                                                        [ F ]
                                                                                    ]
                                                                                ]
                                                                            ]
                                                                            (Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path "&mut")
                                                                                  []
                                                                                  [ F ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [ F ];
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [ F ]
                                                                              ])
                                                                        ],
                                                                      M.alloc (| α0 |),
                                                                      [
                                                                        fun γ =>
                                                                          ltac:(M.monadic
                                                                            (let γ0_0 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ,
                                                                                0
                                                                              |) in
                                                                            let γ0_1 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ,
                                                                                1
                                                                              |) in
                                                                            let γ1_0 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ0_0,
                                                                                0
                                                                              |) in
                                                                            let γ1_1 :=
                                                                              M.SubPointer.get_tuple_field (|
                                                                                γ0_0,
                                                                                1
                                                                              |) in
                                                                            let a :=
                                                                              M.copy (| γ1_0 |) in
                                                                            let b :=
                                                                              M.copy (| γ1_1 |) in
                                                                            let b :=
                                                                              M.copy (| γ0_1 |) in
                                                                            Value.Tuple
                                                                              [
                                                                                M.read (| a |);
                                                                                M.read (| b |);
                                                                                M.read (| b |)
                                                                              ]))
                                                                      ]
                                                                    |)))
                                                                | _ =>
                                                                  M.impossible
                                                                    "wrong number of arguments"
                                                                end))
                                                        ]
                                                      |)
                                                    |)
                                                  |);
                                                  M.closure
                                                    (fun γ =>
                                                      ltac:(M.monadic
                                                        match γ with
                                                        | [ α0 ] =>
                                                          ltac:(M.monadic
                                                            (M.match_operator (|
                                                              Ty.apply
                                                                (Ty.path "*")
                                                                []
                                                                [
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&mut")
                                                                                []
                                                                                [ F ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [ F ];
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                []
                                                                                [ F ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.tuple [])
                                                                ],
                                                              M.alloc (| α0 |),
                                                              [
                                                                fun γ =>
                                                                  ltac:(M.monadic
                                                                    (let γ0_0 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ,
                                                                        0
                                                                      |) in
                                                                    let γ0_1 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ,
                                                                        1
                                                                      |) in
                                                                    let γ0_2 :=
                                                                      M.SubPointer.get_tuple_field (|
                                                                        γ,
                                                                        2
                                                                      |) in
                                                                    let out := M.copy (| γ0_0 |) in
                                                                    let γ0_1 := M.read (| γ0_1 |) in
                                                                    let coeff :=
                                                                      M.copy (| γ0_1 |) in
                                                                    let γ0_2 := M.read (| γ0_2 |) in
                                                                    let weight :=
                                                                      M.copy (| γ0_2 |) in
                                                                    M.read (|
                                                                      let~ _ :
                                                                          Ty.apply
                                                                            (Ty.path "*")
                                                                            []
                                                                            [ Ty.tuple [] ] :=
                                                                        M.alloc (|
                                                                          M.write (|
                                                                            M.deref (|
                                                                              M.read (| out |)
                                                                            |),
                                                                            M.call_closure (|
                                                                              F,
                                                                              M.get_trait_method (|
                                                                                "core::ops::arith::Mul",
                                                                                F,
                                                                                [],
                                                                                [ F ],
                                                                                "mul",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (| coeff |);
                                                                                M.read (| weight |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |) in
                                                                      M.alloc (| Value.Tuple [] |)
                                                                    |)))
                                                              ]
                                                            |)))
                                                        | _ =>
                                                          M.impossible "wrong number of arguments"
                                                        end))
                                                ]
                                              |)
                                            |) in
                                          M.alloc (| Value.Tuple [] |)
                                        |)))
                                  ]
                                |)))
                            | _ => M.impossible "wrong number of arguments"
                            end))
                    ]
                  |)
                |) in
              M.alloc (| Value.Tuple [] |)
            |)))
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_coset_shift_and_scale_rows :
    M.IsFunction.C "p3_monty_31::dft::coset_shift_and_scale_rows" coset_shift_and_scale_rows.
  Admitted.
  Global Typeclasses Opaque coset_shift_and_scale_rows.
  
  (* StructRecord
    {
      name := "RecursiveDft";
      const_params := [];
      ty_params := [ "F" ];
      fields :=
        [
          ("twiddles",
            Ty.apply
              (Ty.path "core::cell::RefCell")
              []
              [
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ];
                    Ty.path "alloc::alloc::Global"
                  ]
              ]);
          ("inv_twiddles",
            Ty.apply
              (Ty.path "core::cell::RefCell")
              []
              [
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply (Ty.path "alloc::vec::Vec") [] [ F; Ty.path "alloc::alloc::Global" ];
                    Ty.path "alloc::alloc::Global"
                  ]
              ])
        ];
    } *)
  
  Module Impl_core_clone_Clone_where_core_clone_Clone_F_for_p3_monty_31_dft_RecursiveDft_F.
    Definition Self (F : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_monty_31::dft::RecursiveDft") [] [ F ].
    
    (* Clone *)
    Definition clone (F : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self F in
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          Value.StructRecord
            "p3_monty_31::dft::RecursiveDft"
            [
              ("twiddles",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::cell::RefCell")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "core::cell::RefCell")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_monty_31::dft::RecursiveDft",
                            "twiddles"
                          |)
                        |)
                      |)
                    |)
                  ]
                |));
              ("inv_twiddles",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::cell::RefCell")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ],
                  M.get_trait_method (|
                    "core::clone::Clone",
                    Ty.apply
                      (Ty.path "core::cell::RefCell")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    [],
                    [],
                    "clone",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_monty_31::dft::RecursiveDft",
                            "inv_twiddles"
                          |)
                        |)
                      |)
                    |)
                  ]
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (F : Ty.t),
      M.IsTraitInstance
        "core::clone::Clone"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self F)
        (* Instance *) [ ("clone", InstanceField.Method (clone F)) ].
  End Impl_core_clone_Clone_where_core_clone_Clone_F_for_p3_monty_31_dft_RecursiveDft_F.
  
  Module Impl_core_fmt_Debug_where_core_fmt_Debug_F_for_p3_monty_31_dft_RecursiveDft_F.
    Definition Self (F : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_monty_31::dft::RecursiveDft") [] [ F ].
    
    (* Debug *)
    Definition fmt (F : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self F in
      match ε, τ, α with
      | [], [], [ self; f ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let f := M.alloc (| f |) in
          M.call_closure (|
            Ty.apply
              (Ty.path "core::result::Result")
              []
              [ Ty.tuple []; Ty.path "core::fmt::Error" ],
            M.get_associated_function (|
              Ty.path "core::fmt::Formatter",
              "debug_struct_field2_finish",
              [],
              []
            |),
            [
              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "RecursiveDft" |) |) |);
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "twiddles" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "p3_monty_31::dft::RecursiveDft",
                        "twiddles"
                      |)
                    |)
                  |)
                |));
              M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "inv_twiddles" |) |) |);
              (* Unsize *)
              M.pointer_coercion
                (M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.alloc (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_monty_31::dft::RecursiveDft",
                            "inv_twiddles"
                          |)
                        |)
                      |)
                    |)
                  |)
                |))
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (F : Ty.t),
      M.IsTraitInstance
        "core::fmt::Debug"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self F)
        (* Instance *) [ ("fmt", InstanceField.Method (fmt F)) ].
  End Impl_core_fmt_Debug_where_core_fmt_Debug_F_for_p3_monty_31_dft_RecursiveDft_F.
  
  Module Impl_core_default_Default_where_core_default_Default_F_for_p3_monty_31_dft_RecursiveDft_F.
    Definition Self (F : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "p3_monty_31::dft::RecursiveDft") [] [ F ].
    
    (* Default *)
    Definition default (F : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self F in
      match ε, τ, α with
      | [], [], [] =>
        ltac:(M.monadic
          (Value.StructRecord
            "p3_monty_31::dft::RecursiveDft"
            [
              ("twiddles",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::cell::RefCell")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ],
                  M.get_trait_method (|
                    "core::default::Default",
                    Ty.apply
                      (Ty.path "core::cell::RefCell")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    [],
                    [],
                    "default",
                    [],
                    []
                  |),
                  []
                |));
              ("inv_twiddles",
                M.call_closure (|
                  Ty.apply
                    (Ty.path "core::cell::RefCell")
                    []
                    [
                      Ty.apply
                        (Ty.path "alloc::vec::Vec")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [ F; Ty.path "alloc::alloc::Global" ];
                          Ty.path "alloc::alloc::Global"
                        ]
                    ],
                  M.get_trait_method (|
                    "core::default::Default",
                    Ty.apply
                      (Ty.path "core::cell::RefCell")
                      []
                      [
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [ F; Ty.path "alloc::alloc::Global" ];
                            Ty.path "alloc::alloc::Global"
                          ]
                      ],
                    [],
                    [],
                    "default",
                    [],
                    []
                  |),
                  []
                |))
            ]))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (F : Ty.t),
      M.IsTraitInstance
        "core::default::Default"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self F)
        (* Instance *) [ ("default", InstanceField.Method (default F)) ].
  End Impl_core_default_Default_where_core_default_Default_F_for_p3_monty_31_dft_RecursiveDft_F.
  
  Module Impl_p3_monty_31_dft_RecursiveDft_p3_monty_31_monty_31_MontyField31_MP.
    Definition Self (MP : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_monty_31::dft::RecursiveDft")
        []
        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ].
    
    (*
        pub fn new(n: usize) -> Self {
            let res = Self {
                twiddles: RefCell::default(),
                inv_twiddles: RefCell::default(),
            };
            res.update_twiddles(n);
            res
        }
    *)
    Definition new (MP : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ n ] =>
        ltac:(M.monadic
          (let n := M.alloc (| n |) in
          M.read (|
            let~ res :
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "p3_monty_31::dft::RecursiveDft")
                      []
                      [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ]
                  ] :=
              M.alloc (|
                Value.StructRecord
                  "p3_monty_31::dft::RecursiveDft"
                  [
                    ("twiddles",
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::cell::RefCell")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        M.get_trait_method (|
                          "core::default::Default",
                          Ty.apply
                            (Ty.path "core::cell::RefCell")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          [],
                          [],
                          "default",
                          [],
                          []
                        |),
                        []
                      |));
                    ("inv_twiddles",
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::cell::RefCell")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        M.get_trait_method (|
                          "core::default::Default",
                          Ty.apply
                            (Ty.path "core::cell::RefCell")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ],
                          [],
                          [],
                          "default",
                          [],
                          []
                        |),
                        []
                      |))
                  ]
              |) in
            let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [],
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "p3_monty_31::dft::RecursiveDft")
                      []
                      [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                    "update_twiddles",
                    [],
                    []
                  |),
                  [ M.borrow (| Pointer.Kind.Ref, res |); M.read (| n |) ]
                |)
              |) in
            res
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_new :
      forall (MP : Ty.t),
      M.IsAssociatedFunction.C (Self MP) "new" (new MP).
    Admitted.
    Global Typeclasses Opaque new.
    
    (*
        fn decimation_in_freq_dft(
            mat: &mut [MontyField31<MP>],
            ncols: usize,
            twiddles: &[Vec<MontyField31<MP>>],
        ) {
            if ncols > 1 {
                let lg_fft_len = p3_util::log2_ceil_usize(ncols);
                let roots_idx = (twiddles.len() + 1) - lg_fft_len;
                let twiddles = &twiddles[roots_idx..];
    
                mat.par_chunks_exact_mut(ncols)
                    .for_each(|v| MontyField31::forward_fft(v, twiddles))
            }
        }
    *)
    Definition decimation_in_freq_dft
        (MP : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ mat; ncols; twiddles ] =>
        ltac:(M.monadic
          (let mat := M.alloc (| mat |) in
          let ncols := M.alloc (| ncols |) in
          let twiddles := M.alloc (| twiddles |) in
          M.read (|
            M.match_operator (|
              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
              M.alloc (| Value.Tuple [] |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ :=
                      M.use
                        (M.alloc (|
                          M.call_closure (|
                            Ty.path "bool",
                            BinOp.gt,
                            [ M.read (| ncols |); Value.Integer IntegerKind.Usize 1 ]
                          |)
                        |)) in
                    let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                    let~ lg_fft_len : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_function (| "p3_util::log2_ceil_usize", [], [] |),
                          [ M.read (| ncols |) ]
                        |)
                      |) in
                    let~ roots_idx : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.path "usize",
                          BinOp.Wrap.sub,
                          [
                            M.call_closure (|
                              Ty.path "usize",
                              BinOp.Wrap.add,
                              [
                                M.call_closure (|
                                  Ty.path "usize",
                                  M.get_associated_function (|
                                    Ty.apply
                                      (Ty.path "slice")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    "len",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (| M.read (| twiddles |) |)
                                    |)
                                  ]
                                |);
                                Value.Integer IntegerKind.Usize 1
                              ]
                            |);
                            M.read (| lg_fft_len |)
                          ]
                        |)
                      |) in
                    let~ twiddles :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ]
                          ] :=
                      M.alloc (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "slice")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::ops::index::Index",
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "core::ops::range::RangeFrom")
                                    []
                                    [ Ty.path "usize" ]
                                ],
                                "index",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (| M.read (| twiddles |) |)
                                |);
                                Value.StructRecord
                                  "core::ops::range::RangeFrom"
                                  [ ("start", M.read (| roots_idx |)) ]
                              ]
                            |)
                          |)
                        |)
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.tuple [],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply
                            (Ty.path "core::slice::iter::ChunksExactMut")
                            []
                            [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                          [],
                          [],
                          "for_each",
                          [],
                          [
                            Ty.function
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&mut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ]
                                          ]
                                      ]
                                  ]
                              ]
                              (Ty.tuple [])
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::slice::iter::ChunksExactMut")
                              []
                              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                              ],
                            M.get_trait_method (|
                              "p3_maybe_rayon::serial::ParallelSliceMut",
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                                ],
                              [],
                              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                              ],
                              "par_chunks_exact_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| mat |) |) |);
                              M.read (| ncols |)
                            ]
                          |);
                          M.closure
                            (fun γ =>
                              ltac:(M.monadic
                                match γ with
                                | [ α0 ] =>
                                  ltac:(M.monadic
                                    (M.match_operator (|
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.function
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&mut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                            (Ty.tuple [])
                                        ],
                                      M.alloc (| α0 |),
                                      [
                                        fun γ =>
                                          ltac:(M.monadic
                                            (let v := M.copy (| γ |) in
                                            M.call_closure (|
                                              Ty.tuple [],
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ],
                                                "forward_fft",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.MutRef,
                                                  M.deref (| M.read (| v |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| twiddles |) |)
                                                |)
                                              ]
                                            |)))
                                      ]
                                    |)))
                                | _ => M.impossible "wrong number of arguments"
                                end))
                        ]
                      |)
                    |)));
                fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_decimation_in_freq_dft :
      forall (MP : Ty.t),
      M.IsAssociatedFunction.C (Self MP) "decimation_in_freq_dft" (decimation_in_freq_dft MP).
    Admitted.
    Global Typeclasses Opaque decimation_in_freq_dft.
    
    (*
        fn decimation_in_time_dft(
            mat: &mut [MontyField31<MP>],
            ncols: usize,
            twiddles: &[Vec<MontyField31<MP>>],
        ) {
            if ncols > 1 {
                let lg_fft_len = p3_util::log2_ceil_usize(ncols);
                let roots_idx = (twiddles.len() + 1) - lg_fft_len;
                let twiddles = &twiddles[roots_idx..];
    
                mat.par_chunks_exact_mut(ncols)
                    .for_each(|v| MontyField31::backward_fft(v, twiddles))
            }
        }
    *)
    Definition decimation_in_time_dft
        (MP : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ mat; ncols; twiddles ] =>
        ltac:(M.monadic
          (let mat := M.alloc (| mat |) in
          let ncols := M.alloc (| ncols |) in
          let twiddles := M.alloc (| twiddles |) in
          M.read (|
            M.match_operator (|
              Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
              M.alloc (| Value.Tuple [] |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let γ :=
                      M.use
                        (M.alloc (|
                          M.call_closure (|
                            Ty.path "bool",
                            BinOp.gt,
                            [ M.read (| ncols |); Value.Integer IntegerKind.Usize 1 ]
                          |)
                        |)) in
                    let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                    let~ lg_fft_len : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_function (| "p3_util::log2_ceil_usize", [], [] |),
                          [ M.read (| ncols |) ]
                        |)
                      |) in
                    let~ roots_idx : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                      M.alloc (|
                        M.call_closure (|
                          Ty.path "usize",
                          BinOp.Wrap.sub,
                          [
                            M.call_closure (|
                              Ty.path "usize",
                              BinOp.Wrap.add,
                              [
                                M.call_closure (|
                                  Ty.path "usize",
                                  M.get_associated_function (|
                                    Ty.apply
                                      (Ty.path "slice")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    "len",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (| M.read (| twiddles |) |)
                                    |)
                                  ]
                                |);
                                Value.Integer IntegerKind.Usize 1
                              ]
                            |);
                            M.read (| lg_fft_len |)
                          ]
                        |)
                      |) in
                    let~ twiddles :
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "&")
                              []
                              [
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ]
                          ] :=
                      M.alloc (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "&")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "slice")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ]
                                ],
                              M.get_trait_method (|
                                "core::ops::index::Index",
                                Ty.apply
                                  (Ty.path "slice")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "core::ops::range::RangeFrom")
                                    []
                                    [ Ty.path "usize" ]
                                ],
                                "index",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (| M.read (| twiddles |) |)
                                |);
                                Value.StructRecord
                                  "core::ops::range::RangeFrom"
                                  [ ("start", M.read (| roots_idx |)) ]
                              ]
                            |)
                          |)
                        |)
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.tuple [],
                        M.get_trait_method (|
                          "core::iter::traits::iterator::Iterator",
                          Ty.apply
                            (Ty.path "core::slice::iter::ChunksExactMut")
                            []
                            [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                          [],
                          [],
                          "for_each",
                          [],
                          [
                            Ty.function
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "&mut")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ]
                                          ]
                                      ]
                                  ]
                              ]
                              (Ty.tuple [])
                          ]
                        |),
                        [
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "core::slice::iter::ChunksExactMut")
                              []
                              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                              ],
                            M.get_trait_method (|
                              "p3_maybe_rayon::serial::ParallelSliceMut",
                              Ty.apply
                                (Ty.path "slice")
                                []
                                [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                                ],
                              [],
                              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                              ],
                              "par_chunks_exact_mut",
                              [],
                              []
                            |),
                            [
                              M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| mat |) |) |);
                              M.read (| ncols |)
                            ]
                          |);
                          M.closure
                            (fun γ =>
                              ltac:(M.monadic
                                match γ with
                                | [ α0 ] =>
                                  ltac:(M.monadic
                                    (M.match_operator (|
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.function
                                            [
                                              Ty.tuple
                                                [
                                                  Ty.apply
                                                    (Ty.path "&mut")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "slice")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ]
                                                        ]
                                                    ]
                                                ]
                                            ]
                                            (Ty.tuple [])
                                        ],
                                      M.alloc (| α0 |),
                                      [
                                        fun γ =>
                                          ltac:(M.monadic
                                            (let v := M.copy (| γ |) in
                                            M.call_closure (|
                                              Ty.tuple [],
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ],
                                                "backward_fft",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.MutRef,
                                                  M.deref (| M.read (| v |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| twiddles |) |)
                                                |)
                                              ]
                                            |)))
                                      ]
                                    |)))
                                | _ => M.impossible "wrong number of arguments"
                                end))
                        ]
                      |)
                    |)));
                fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_decimation_in_time_dft :
      forall (MP : Ty.t),
      M.IsAssociatedFunction.C (Self MP) "decimation_in_time_dft" (decimation_in_time_dft MP).
    Admitted.
    Global Typeclasses Opaque decimation_in_time_dft.
    
    (*     #[instrument(skip_all)] *)
    Definition update_twiddles
        (MP : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ self; fft_len ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let fft_len := M.alloc (| fft_len |) in
          M.catch_return (Ty.tuple []) (|
            ltac:(M.monadic
              (M.read (|
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (| Value.Tuple [] |) in
                let __tracing_attr_span := M.copy (| Value.DeclaredButUndefined |) in
                let __tracing_attr_guard := M.copy (| Value.DeclaredButUndefined |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                LogicalOp.or (|
                                  LogicalOp.and (|
                                    M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialOrd",
                                        Ty.path "tracing_core::metadata::Level",
                                        [],
                                        [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                        "le",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_associated_constant (|
                                            Ty.path "tracing_core::metadata::Level",
                                            "INFO",
                                            Ty.path "tracing_core::metadata::Level"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_constant (|
                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                            Ty.path "tracing_core::metadata::LevelFilter"
                                          |)
                                        |)
                                      ]
                                    |),
                                    ltac:(M.monadic
                                      (M.call_closure (|
                                        Ty.path "bool",
                                        M.get_trait_method (|
                                          "core::cmp::PartialOrd",
                                          Ty.path "tracing_core::metadata::Level",
                                          [],
                                          [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                          "le",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            get_associated_constant (|
                                              Ty.path "tracing_core::metadata::Level",
                                              "INFO",
                                              Ty.path "tracing_core::metadata::Level"
                                            |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing_core::metadata::LevelFilter",
                                                M.get_associated_function (|
                                                  Ty.path "tracing_core::metadata::LevelFilter",
                                                  "current",
                                                  [],
                                                  []
                                                |),
                                                []
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)))
                                  |),
                                  ltac:(M.monadic (Value.Bool false))
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_span,
                                M.read (|
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "INFO",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "INFO",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::update_twiddles::__CALLSITE",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::update_twiddles::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::update_twiddles::__CALLSITE",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 0
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (| Value.Array [] |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::update_twiddles::__CALLSITE",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |)
                              |)
                            |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_guard,
                                M.call_closure (|
                                  Ty.path "tracing::span::Entered",
                                  M.get_associated_function (|
                                    Ty.path "tracing::span::Span",
                                    "enter",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, __tracing_attr_span |) ]
                                |)
                              |)
                            |) in
                          M.alloc (| Value.Tuple [] |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.use (M.alloc (| Value.Bool false |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                let~ __tracing_attr_fake_return :
                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                  M.alloc (|
                                    M.never_to_any (|
                                      M.read (|
                                        M.loop (|
                                          Ty.apply (Ty.path "*") [] [ Ty.path "never" ],
                                          ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                        |)
                                      |)
                                    |)
                                  |) in
                                M.return_ (| M.read (| __tracing_attr_fake_return |) |)
                              |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ curr_max_fft_len : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      BinOp.Wrap.shl,
                      [
                        Value.Integer IntegerKind.Usize 2;
                        M.call_closure (|
                          Ty.path "usize",
                          M.get_associated_function (|
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ],
                            "len",
                            [],
                            []
                          |),
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.path "alloc::alloc::Global"
                                            ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::deref::Deref",
                                    Ty.apply
                                      (Ty.path "core::cell::Ref")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.path "alloc::alloc::Global"
                                              ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    [],
                                    [],
                                    "deref",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "core::cell::Ref")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ],
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path "core::cell::RefCell")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ],
                                            "borrow",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.SubPointer.get_struct_record_field (|
                                                M.deref (| M.read (| self |) |),
                                                "p3_monty_31::dft::RecursiveDft",
                                                "twiddles"
                                              |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |)
                              |)
                            |)
                          ]
                        |)
                      ]
                    |)
                  |) in
                M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              M.call_closure (|
                                Ty.path "bool",
                                BinOp.gt,
                                [ M.read (| fft_len |); M.read (| curr_max_fft_len |) ]
                              |)
                            |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        let~ new_twiddles :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_associated_function (|
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ],
                                "roots_of_unity_table",
                                [],
                                []
                              |),
                              [ M.read (| fft_len |) ]
                            |)
                          |) in
                        let~ new_inv_twiddles :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_trait_method (|
                                "core::iter::traits::iterator::Iterator",
                                Ty.apply
                                  (Ty.path "core::iter::adapters::map::Map")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ];
                                    Ty.function
                                      [
                                        Ty.tuple
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ]
                                      (Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ])
                                  ],
                                [],
                                [],
                                "collect",
                                [],
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                              |),
                              [
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "core::iter::adapters::map::Map")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ])
                                    ],
                                  M.get_trait_method (|
                                    "core::iter::traits::iterator::Iterator",
                                    Ty.apply
                                      (Ty.path "core::slice::iter::Iter")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ],
                                    [],
                                    [],
                                    "map",
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.function
                                        [
                                          Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ]
                                        ]
                                        (Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ])
                                    ]
                                  |),
                                  [
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "core::slice::iter::Iter")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      M.get_associated_function (|
                                        Ty.apply
                                          (Ty.path "slice")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ],
                                        "iter",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "&")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "slice")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ],
                                              M.get_trait_method (|
                                                "core::ops::deref::Deref",
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                [],
                                                [],
                                                "deref",
                                                [],
                                                []
                                              |),
                                              [ M.borrow (| Pointer.Kind.Ref, new_twiddles |) ]
                                            |)
                                          |)
                                        |)
                                      ]
                                    |);
                                    M.closure
                                      (fun γ =>
                                        ltac:(M.monadic
                                          match γ with
                                          | [ α0 ] =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.function
                                                      [
                                                        Ty.tuple
                                                          [
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ]
                                                          ]
                                                      ]
                                                      (Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ])
                                                  ],
                                                M.alloc (| α0 |),
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic
                                                      (let ts := M.copy (| γ |) in
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ],
                                                        M.get_trait_method (|
                                                          "core::iter::traits::iterator::Iterator",
                                                          Ty.apply
                                                            (Ty.path
                                                              "core::iter::adapters::chain::Chain")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::sources::once::Once")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                    []
                                                                    [ MP ]
                                                                ];
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::adapters::map::Map")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::rev::Rev")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_monty_31::monty_31::MontyField31")
                                                                            []
                                                                            [ MP ]
                                                                        ]
                                                                    ];
                                                                  Ty.function
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                                []
                                                                                [ MP ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                    (Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ])
                                                                ]
                                                            ],
                                                          [],
                                                          [],
                                                          "collect",
                                                          [],
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                  []
                                                                  [ MP ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                        |),
                                                        [
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path
                                                                "core::iter::adapters::chain::Chain")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::sources::once::Once")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::rev::Rev")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_monty_31::monty_31::MontyField31")
                                                                              []
                                                                              [ MP ]
                                                                          ]
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                  []
                                                                                  [ MP ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ])
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::iter::traits::iterator::Iterator",
                                                              Ty.apply
                                                                (Ty.path
                                                                  "core::iter::sources::once::Once")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                    []
                                                                    [ MP ]
                                                                ],
                                                              [],
                                                              [],
                                                              "chain",
                                                              [],
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::rev::Rev")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_monty_31::monty_31::MontyField31")
                                                                              []
                                                                              [ MP ]
                                                                          ]
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                  []
                                                                                  [ MP ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ])
                                                                  ]
                                                              ]
                                                            |),
                                                            [
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::sources::once::Once")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ],
                                                                M.get_function (|
                                                                  "core::iter::sources::once::once",
                                                                  [],
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ]
                                                                |),
                                                                [
                                                                  M.read (|
                                                                    get_constant (|
                                                                      "p3_field::field::PrimeCharacteristicRing::ONE",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ]
                                                                    |)
                                                                  |)
                                                                ]
                                                              |);
                                                              M.call_closure (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::rev::Rev")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_monty_31::monty_31::MontyField31")
                                                                              []
                                                                              [ MP ]
                                                                          ]
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                  []
                                                                                  [ MP ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ])
                                                                  ],
                                                                M.get_trait_method (|
                                                                  "core::iter::traits::iterator::Iterator",
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "core::iter::adapters::rev::Rev")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_monty_31::monty_31::MontyField31")
                                                                            []
                                                                            [ MP ]
                                                                        ]
                                                                    ],
                                                                  [],
                                                                  [],
                                                                  "map",
                                                                  [],
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                  []
                                                                                  [ MP ]
                                                                              ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ])
                                                                  ]
                                                                |),
                                                                [
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::iter::adapters::rev::Rev")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_monty_31::monty_31::MontyField31")
                                                                              []
                                                                              [ MP ]
                                                                          ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::iter::traits::iterator::Iterator",
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::slice::iter::Iter")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_monty_31::monty_31::MontyField31")
                                                                            []
                                                                            [ MP ]
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "rev",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.call_closure (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::slice::iter::Iter")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "p3_monty_31::monty_31::MontyField31")
                                                                              []
                                                                              [ MP ]
                                                                          ],
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path "slice")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                                []
                                                                                [ MP ]
                                                                            ],
                                                                          "iter",
                                                                          [],
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.call_closure (|
                                                                                Ty.apply
                                                                                  (Ty.path "&")
                                                                                  []
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "slice")
                                                                                      []
                                                                                      [
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_monty_31::monty_31::MontyField31")
                                                                                          []
                                                                                          [ MP ]
                                                                                      ]
                                                                                  ],
                                                                                M.get_trait_method (|
                                                                                  "core::ops::index::Index",
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "alloc::vec::Vec")
                                                                                    []
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                                        []
                                                                                        [ MP ];
                                                                                      Ty.path
                                                                                        "alloc::alloc::Global"
                                                                                    ],
                                                                                  [],
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::RangeFrom")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "usize"
                                                                                      ]
                                                                                  ],
                                                                                  "index",
                                                                                  [],
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        ts
                                                                                      |)
                                                                                    |)
                                                                                  |);
                                                                                  Value.StructRecord
                                                                                    "core::ops::range::RangeFrom"
                                                                                    [
                                                                                      ("start",
                                                                                        Value.Integer
                                                                                          IntegerKind.Usize
                                                                                          1)
                                                                                    ]
                                                                                ]
                                                                              |)
                                                                            |)
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    ]
                                                                  |);
                                                                  M.closure
                                                                    (fun γ =>
                                                                      ltac:(M.monadic
                                                                        match γ with
                                                                        | [ α0 ] =>
                                                                          ltac:(M.monadic
                                                                            (M.match_operator (|
                                                                              Ty.apply
                                                                                (Ty.path "*")
                                                                                []
                                                                                [
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "&")
                                                                                            []
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                                                []
                                                                                                [ MP
                                                                                                ]
                                                                                            ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.apply
                                                                                      (Ty.path
                                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                                      []
                                                                                      [ MP ])
                                                                                ],
                                                                              M.alloc (| α0 |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ :=
                                                                                      M.read (|
                                                                                        γ
                                                                                      |) in
                                                                                    let t :=
                                                                                      M.copy (|
                                                                                        γ
                                                                                      |) in
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                                        []
                                                                                        [ MP ],
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "p3_monty_31::monty_31::MontyField31")
                                                                                          []
                                                                                          [ MP ],
                                                                                        "new_monty",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.path
                                                                                            "u32",
                                                                                          BinOp.Wrap.sub,
                                                                                          [
                                                                                            M.read (|
                                                                                              get_constant (|
                                                                                                "p3_monty_31::data_traits::MontyParameters::PRIME",
                                                                                                Ty.path
                                                                                                  "u32"
                                                                                              |)
                                                                                            |);
                                                                                            M.read (|
                                                                                              M.SubPointer.get_struct_record_field (|
                                                                                                t,
                                                                                                "p3_monty_31::monty_31::MontyField31",
                                                                                                "value"
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)))
                                                                              ]
                                                                            |)))
                                                                        | _ =>
                                                                          M.impossible
                                                                            "wrong number of arguments"
                                                                        end))
                                                                ]
                                                              |)
                                                            ]
                                                          |)
                                                        ]
                                                      |)))
                                                ]
                                              |)))
                                          | _ => M.impossible "wrong number of arguments"
                                          end))
                                  ]
                                |)
                              ]
                            |)
                          |) in
                        let~ _ :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "core::cell::RefCell")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                "replace",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "p3_monty_31::dft::RecursiveDft",
                                    "twiddles"
                                  |)
                                |);
                                M.read (| new_twiddles |)
                              ]
                            |)
                          |) in
                        let~ _ :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "core::cell::RefCell")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                "replace",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "p3_monty_31::dft::RecursiveDft",
                                    "inv_twiddles"
                                  |)
                                |);
                                M.read (| new_inv_twiddles |)
                              ]
                            |)
                          |) in
                        M.alloc (| Value.Tuple [] |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance AssociatedFunction_update_twiddles :
      forall (MP : Ty.t),
      M.IsAssociatedFunction.C (Self MP) "update_twiddles" (update_twiddles MP).
    Admitted.
    Global Typeclasses Opaque update_twiddles.
  End Impl_p3_monty_31_dft_RecursiveDft_p3_monty_31_monty_31_MontyField31_MP.
  
  Module Impl_p3_dft_traits_TwoAdicSubgroupDft_where_p3_monty_31_data_traits_MontyParameters_MP_where_p3_monty_31_data_traits_FieldParameters_MP_where_p3_monty_31_data_traits_TwoAdicData_MP_p3_monty_31_monty_31_MontyField31_MP_for_p3_monty_31_dft_RecursiveDft_p3_monty_31_monty_31_MontyField31_MP.
    Definition Self (MP : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_monty_31::dft::RecursiveDft")
        []
        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ].
    
    (*     type Evaluations = BitReversedMatrixView<RowMajorMatrix<MontyField31<MP>>>; *)
    Definition _Evaluations (MP : Ty.t) : Ty.t :=
      Ty.apply
        (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
        []
        [
          Ty.path "p3_matrix::bitrev::BitReversalPerm";
          Ty.apply
            (Ty.path "p3_matrix::dense::DenseMatrix")
            []
            [
              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
              Ty.apply
                (Ty.path "alloc::vec::Vec")
                []
                [
                  Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                  Ty.path "alloc::alloc::Global"
                ]
            ]
        ].
    
    (*     #[instrument(skip_all, fields(dims = %mat.dimensions(), added_bits))] *)
    Definition dft_batch (MP : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ self; mat ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let mat := M.alloc (| mat |) in
          M.catch_return
            (Ty.associated_in_trait
              "p3_dft::traits::TwoAdicSubgroupDft"
              []
              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ]
              (Ty.apply
                (Ty.path "p3_monty_31::dft::RecursiveDft")
                []
                [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ])
              "Evaluations") (|
            ltac:(M.monadic
              (M.read (|
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (| Value.Tuple [] |) in
                let __tracing_attr_span := M.copy (| Value.DeclaredButUndefined |) in
                let __tracing_attr_guard := M.copy (| Value.DeclaredButUndefined |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                LogicalOp.or (|
                                  LogicalOp.and (|
                                    M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialOrd",
                                        Ty.path "tracing_core::metadata::Level",
                                        [],
                                        [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                        "le",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_associated_constant (|
                                            Ty.path "tracing_core::metadata::Level",
                                            "INFO",
                                            Ty.path "tracing_core::metadata::Level"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_constant (|
                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                            Ty.path "tracing_core::metadata::LevelFilter"
                                          |)
                                        |)
                                      ]
                                    |),
                                    ltac:(M.monadic
                                      (M.call_closure (|
                                        Ty.path "bool",
                                        M.get_trait_method (|
                                          "core::cmp::PartialOrd",
                                          Ty.path "tracing_core::metadata::Level",
                                          [],
                                          [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                          "le",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            get_associated_constant (|
                                              Ty.path "tracing_core::metadata::Level",
                                              "INFO",
                                              Ty.path "tracing_core::metadata::Level"
                                            |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing_core::metadata::LevelFilter",
                                                M.get_associated_function (|
                                                  Ty.path "tracing_core::metadata::LevelFilter",
                                                  "current",
                                                  [],
                                                  []
                                                |),
                                                []
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)))
                                  |),
                                  ltac:(M.monadic (Value.Bool false))
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_span,
                                M.read (|
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "INFO",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "INFO",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::dft_batch::__CALLSITE",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::dft_batch::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::dft_batch::__CALLSITE",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.alloc (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "tracing_core::field::DisplayValue")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions"
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_function (|
                                                                                                    "tracing_core::field::display",
                                                                                                    [],
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions"
                                                                                                        ]
                                                                                                    ]
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions",
                                                                                                          M.get_trait_method (|
                                                                                                            "p3_matrix::Matrix",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    MP
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        MP
                                                                                                                      ];
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                                                                []
                                                                                                                [
                                                                                                                  MP
                                                                                                                ]
                                                                                                            ],
                                                                                                            "dimensions",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              mat
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Value.StructTuple
                                                                                                        "tracing_core::field::Empty"
                                                                                                        []
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::dft_batch::__CALLSITE",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |)
                              |)
                            |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_guard,
                                M.call_closure (|
                                  Ty.path "tracing::span::Entered",
                                  M.get_associated_function (|
                                    Ty.path "tracing::span::Span",
                                    "enter",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, __tracing_attr_span |) ]
                                |)
                              |)
                            |) in
                          M.alloc (| Value.Tuple [] |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.use (M.alloc (| Value.Bool false |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                let~ __tracing_attr_fake_return :
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_matrix::row_index_mapped::RowIndexMappedView")
                                          []
                                          [
                                            Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ] :=
                                  M.alloc (|
                                    M.never_to_any (|
                                      M.read (|
                                        M.loop (|
                                          Ty.apply (Ty.path "*") [] [ Ty.path "never" ],
                                          ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                        |)
                                      |)
                                    |)
                                  |) in
                                M.return_ (| M.read (| __tracing_attr_fake_return |) |)
                              |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ nrows : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "height",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                    |)
                  |) in
                let~ ncols : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "width",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  BinOp.le,
                                  [ M.read (| nrows |); Value.Integer IntegerKind.Usize 1 ]
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                M.return_ (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                                      []
                                      [
                                        Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ],
                                    M.get_trait_method (|
                                      "p3_matrix::bitrev::BitReversibleMatrix",
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      [],
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ]
                                      ],
                                      "bit_reverse_rows",
                                      [],
                                      []
                                    |),
                                    [ M.read (| mat |) ]
                                  |)
                                |)
                              |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ scratch :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [
                          Ty.function
                            [ Ty.tuple [] ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]);
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'1",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::dft_batch::__CALLSITE'1",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'1",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 0 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (| Value.Array [] |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::dft_batch::__CALLSITE'1",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [ Ty.tuple [] ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              "default",
                                              [],
                                              []
                                            |),
                                            [ M.read (| nrows |); M.read (| ncols |) ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "p3_monty_31::dft::RecursiveDft")
                          []
                          [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "update_twiddles",
                        [],
                        []
                      |),
                      [
                        M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |);
                        M.read (| nrows |)
                      ]
                    |)
                  |) in
                let~ twiddles :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::cell::Ref")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::cell::Ref")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "core::cell::RefCell")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        "borrow",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_monty_31::dft::RecursiveDft",
                            "twiddles"
                          |)
                        |)
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'2",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::dft_batch::__CALLSITE'2",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'2",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              let~ iter :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [ Ty.path "tracing_core::field::Iter" ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.path "tracing_core::field::Iter",
                                                    M.get_associated_function (|
                                                      Ty.path "tracing_core::field::FieldSet",
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::field::FieldSet"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::metadata::Metadata",
                                                              "fields",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| meta |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Value.Array
                                                              [
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::field::Field",
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::field::Field"
                                                                              ],
                                                                            "expect",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.path
                                                                                  "tracing_core::field::Iter",
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                mk_str (|
                                                                                  "FieldSet corrupted (this is a bug)"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      nrows
                                                                                    |)
                                                                                  |)
                                                                                |))
                                                                            |))
                                                                        |)
                                                                      ]
                                                                  ];
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::field::Field",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::Field"
                                                                                  ],
                                                                                "expect",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.path
                                                                                      "tracing_core::field::Iter",
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    mk_str (|
                                                                                      "FieldSet corrupted (this is a bug)"
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            ncols
                                                                                          |)
                                                                                        |)
                                                                                      |))
                                                                                  |))
                                                                              |)
                                                                            |)
                                                                          |))
                                                                      ]
                                                                  ]
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::dft_batch::__CALLSITE'2",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_function (|
                                              "transpose::out_of_place::transpose",
                                              [],
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ]
                                              ]
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              mat,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::DerefMut",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref_mut",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.SubPointer.get_struct_record_field (|
                                                              scratch,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.read (| ncols |);
                                              M.read (| nrows |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'3",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::dft_batch::__CALLSITE'3",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'3",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              let~ iter :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [ Ty.path "tracing_core::field::Iter" ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.path "tracing_core::field::Iter",
                                                    M.get_associated_function (|
                                                      Ty.path "tracing_core::field::FieldSet",
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::field::FieldSet"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::metadata::Metadata",
                                                              "fields",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| meta |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Value.Array
                                                              [
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::field::Field",
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::field::Field"
                                                                              ],
                                                                            "expect",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.path
                                                                                  "tracing_core::field::Iter",
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                mk_str (|
                                                                                  "FieldSet corrupted (this is a bug)"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      ncols
                                                                                    |)
                                                                                  |)
                                                                                |))
                                                                            |))
                                                                        |)
                                                                      ]
                                                                  ];
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::field::Field",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::Field"
                                                                                  ],
                                                                                "expect",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.path
                                                                                      "tracing_core::field::Iter",
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    mk_str (|
                                                                                      "FieldSet corrupted (this is a bug)"
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            nrows
                                                                                          |)
                                                                                        |)
                                                                                      |))
                                                                                  |))
                                                                              |)
                                                                            |)
                                                                          |))
                                                                      ]
                                                                  ]
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::dft_batch::__CALLSITE'3",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "p3_monty_31::dft::RecursiveDft")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ]
                                                ],
                                              "decimation_in_freq_dft",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::DerefMut",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref_mut",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.SubPointer.get_struct_record_field (|
                                                              scratch,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.read (| nrows |);
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                  []
                                                                  [ MP ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                []
                                                                [ MP ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_monty_31::monty_31::MontyField31")
                                                                          []
                                                                          [ MP ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "core::cell::Ref")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_monty_31::monty_31::MontyField31")
                                                                            []
                                                                            [ MP ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    twiddles
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'4",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::dft_batch::__CALLSITE'4",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::dft_batch::__CALLSITE'4",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              let~ iter :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [ Ty.path "tracing_core::field::Iter" ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.path "tracing_core::field::Iter",
                                                    M.get_associated_function (|
                                                      Ty.path "tracing_core::field::FieldSet",
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::field::FieldSet"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::metadata::Metadata",
                                                              "fields",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| meta |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Value.Array
                                                              [
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::field::Field",
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::field::Field"
                                                                              ],
                                                                            "expect",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.path
                                                                                  "tracing_core::field::Iter",
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                mk_str (|
                                                                                  "FieldSet corrupted (this is a bug)"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      ncols
                                                                                    |)
                                                                                  |)
                                                                                |))
                                                                            |))
                                                                        |)
                                                                      ]
                                                                  ];
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::field::Field",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::Field"
                                                                                  ],
                                                                                "expect",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.path
                                                                                      "tracing_core::field::Iter",
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    mk_str (|
                                                                                      "FieldSet corrupted (this is a bug)"
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            nrows
                                                                                          |)
                                                                                        |)
                                                                                      |))
                                                                                  |))
                                                                              |)
                                                                            |)
                                                                          |))
                                                                      ]
                                                                  ]
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::dft_batch::__CALLSITE'4",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_function (|
                                              "transpose::out_of_place::transpose",
                                              [],
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ]
                                              ]
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              scratch,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::DerefMut",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref_mut",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.SubPointer.get_struct_record_field (|
                                                              mat,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.read (| nrows |);
                                              M.read (| ncols |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                M.alloc (|
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                      []
                      [
                        Ty.path "p3_matrix::bitrev::BitReversalPerm";
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ],
                    M.get_trait_method (|
                      "p3_matrix::bitrev::BitReversibleMatrix",
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      [],
                      [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                      "bit_reverse_rows",
                      [],
                      []
                    |),
                    [ M.read (| mat |) ]
                  |)
                |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*     #[instrument(skip_all, fields(dims = %mat.dimensions(), added_bits))] *)
    Definition idft_batch (MP : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ self; mat ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let mat := M.alloc (| mat |) in
          M.catch_return
            (Ty.apply
              (Ty.path "p3_matrix::dense::DenseMatrix")
              []
              [
                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                Ty.apply
                  (Ty.path "alloc::vec::Vec")
                  []
                  [
                    Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                    Ty.path "alloc::alloc::Global"
                  ]
              ]) (|
            ltac:(M.monadic
              (M.read (|
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (| Value.Tuple [] |) in
                let __tracing_attr_span := M.copy (| Value.DeclaredButUndefined |) in
                let __tracing_attr_guard := M.copy (| Value.DeclaredButUndefined |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                LogicalOp.or (|
                                  LogicalOp.and (|
                                    M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialOrd",
                                        Ty.path "tracing_core::metadata::Level",
                                        [],
                                        [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                        "le",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_associated_constant (|
                                            Ty.path "tracing_core::metadata::Level",
                                            "INFO",
                                            Ty.path "tracing_core::metadata::Level"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_constant (|
                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                            Ty.path "tracing_core::metadata::LevelFilter"
                                          |)
                                        |)
                                      ]
                                    |),
                                    ltac:(M.monadic
                                      (M.call_closure (|
                                        Ty.path "bool",
                                        M.get_trait_method (|
                                          "core::cmp::PartialOrd",
                                          Ty.path "tracing_core::metadata::Level",
                                          [],
                                          [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                          "le",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            get_associated_constant (|
                                              Ty.path "tracing_core::metadata::Level",
                                              "INFO",
                                              Ty.path "tracing_core::metadata::Level"
                                            |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing_core::metadata::LevelFilter",
                                                M.get_associated_function (|
                                                  Ty.path "tracing_core::metadata::LevelFilter",
                                                  "current",
                                                  [],
                                                  []
                                                |),
                                                []
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)))
                                  |),
                                  ltac:(M.monadic (Value.Bool false))
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_span,
                                M.read (|
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "INFO",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "INFO",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::idft_batch::__CALLSITE",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::idft_batch::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.alloc (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "tracing_core::field::DisplayValue")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions"
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_function (|
                                                                                                    "tracing_core::field::display",
                                                                                                    [],
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions"
                                                                                                        ]
                                                                                                    ]
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions",
                                                                                                          M.get_trait_method (|
                                                                                                            "p3_matrix::Matrix",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    MP
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        MP
                                                                                                                      ];
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                                                                []
                                                                                                                [
                                                                                                                  MP
                                                                                                                ]
                                                                                                            ],
                                                                                                            "dimensions",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              mat
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Value.StructTuple
                                                                                                        "tracing_core::field::Empty"
                                                                                                        []
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |)
                              |)
                            |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_guard,
                                M.call_closure (|
                                  Ty.path "tracing::span::Entered",
                                  M.get_associated_function (|
                                    Ty.path "tracing::span::Span",
                                    "enter",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, __tracing_attr_span |) ]
                                |)
                              |)
                            |) in
                          M.alloc (| Value.Tuple [] |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.use (M.alloc (| Value.Bool false |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                let~ __tracing_attr_fake_return :
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ] :=
                                  M.alloc (|
                                    M.never_to_any (|
                                      M.read (|
                                        M.loop (|
                                          Ty.apply (Ty.path "*") [] [ Ty.path "never" ],
                                          ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                        |)
                                      |)
                                    |)
                                  |) in
                                M.return_ (| M.read (| __tracing_attr_fake_return |) |)
                              |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ nrows : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "height",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                    |)
                  |) in
                let~ ncols : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "width",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  BinOp.le,
                                  [ M.read (| nrows |); Value.Integer IntegerKind.Usize 1 ]
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (| M.read (| M.return_ (| M.read (| mat |) |) |) |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ scratch :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [
                          Ty.function
                            [ Ty.tuple [] ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]);
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'1",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::idft_batch::__CALLSITE'1",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'1",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 0 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (| Value.Array [] |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE'1",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [ Ty.tuple [] ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              "default",
                                              [],
                                              []
                                            |),
                                            [ M.read (| nrows |); M.read (| ncols |) ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ mat :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [
                          Ty.function
                            [ Ty.tuple [] ]
                            (Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]);
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'2",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::idft_batch::__CALLSITE'2",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'2",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 0 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (| Value.Array [] |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE'2",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [ Ty.tuple [] ]
                                          (Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ],
                                            M.get_trait_method (|
                                              "p3_matrix::Matrix",
                                              Ty.apply
                                                (Ty.path
                                                  "p3_matrix::row_index_mapped::RowIndexMappedView")
                                                []
                                                [
                                                  Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ]
                                                ],
                                              [],
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ]
                                              ],
                                              "to_row_major_matrix",
                                              [],
                                              []
                                            |),
                                            [
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path
                                                    "p3_matrix::row_index_mapped::RowIndexMappedView")
                                                  []
                                                  [
                                                    Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                                    Ty.apply
                                                      (Ty.path "p3_matrix::dense::DenseMatrix")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ];
                                                        Ty.apply
                                                          (Ty.path "alloc::vec::Vec")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ];
                                                            Ty.path "alloc::alloc::Global"
                                                          ]
                                                      ]
                                                  ],
                                                M.get_trait_method (|
                                                  "p3_matrix::bitrev::BitReversibleMatrix",
                                                  Ty.apply
                                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ]
                                                    ],
                                                  [],
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ]
                                                  ],
                                                  "bit_reverse_rows",
                                                  [],
                                                  []
                                                |),
                                                [ M.read (| mat |) ]
                                              |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "p3_monty_31::dft::RecursiveDft")
                          []
                          [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "update_twiddles",
                        [],
                        []
                      |),
                      [
                        M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |);
                        M.read (| nrows |)
                      ]
                    |)
                  |) in
                let~ inv_twiddles :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "core::cell::Ref")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "core::cell::Ref")
                        []
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_associated_function (|
                        Ty.apply
                          (Ty.path "core::cell::RefCell")
                          []
                          [
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        "borrow",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "p3_monty_31::dft::RecursiveDft",
                            "inv_twiddles"
                          |)
                        |)
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'3",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::idft_batch::__CALLSITE'3",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'3",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              let~ iter :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [ Ty.path "tracing_core::field::Iter" ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.path "tracing_core::field::Iter",
                                                    M.get_associated_function (|
                                                      Ty.path "tracing_core::field::FieldSet",
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::field::FieldSet"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::metadata::Metadata",
                                                              "fields",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| meta |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Value.Array
                                                              [
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::field::Field",
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::field::Field"
                                                                              ],
                                                                            "expect",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.path
                                                                                  "tracing_core::field::Iter",
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                mk_str (|
                                                                                  "FieldSet corrupted (this is a bug)"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      nrows
                                                                                    |)
                                                                                  |)
                                                                                |))
                                                                            |))
                                                                        |)
                                                                      ]
                                                                  ];
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::field::Field",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::Field"
                                                                                  ],
                                                                                "expect",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.path
                                                                                      "tracing_core::field::Iter",
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    mk_str (|
                                                                                      "FieldSet corrupted (this is a bug)"
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            ncols
                                                                                          |)
                                                                                        |)
                                                                                      |))
                                                                                  |))
                                                                              |)
                                                                            |)
                                                                          |))
                                                                      ]
                                                                  ]
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE'3",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_function (|
                                              "transpose::out_of_place::transpose",
                                              [],
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ]
                                              ]
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              mat,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::DerefMut",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref_mut",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.SubPointer.get_struct_record_field (|
                                                              scratch,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.read (| ncols |);
                                              M.read (| nrows |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'4",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::idft_batch::__CALLSITE'4",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'4",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              let~ iter :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [ Ty.path "tracing_core::field::Iter" ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.path "tracing_core::field::Iter",
                                                    M.get_associated_function (|
                                                      Ty.path "tracing_core::field::FieldSet",
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::field::FieldSet"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::metadata::Metadata",
                                                              "fields",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| meta |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Value.Array
                                                              [
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::field::Field",
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::field::Field"
                                                                              ],
                                                                            "expect",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.path
                                                                                  "tracing_core::field::Iter",
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                mk_str (|
                                                                                  "FieldSet corrupted (this is a bug)"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      ncols
                                                                                    |)
                                                                                  |)
                                                                                |))
                                                                            |))
                                                                        |)
                                                                      ]
                                                                  ];
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::field::Field",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::Field"
                                                                                  ],
                                                                                "expect",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.path
                                                                                      "tracing_core::field::Iter",
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    mk_str (|
                                                                                      "FieldSet corrupted (this is a bug)"
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            nrows
                                                                                          |)
                                                                                        |)
                                                                                      |))
                                                                                  |))
                                                                              |)
                                                                            |)
                                                                          |))
                                                                      ]
                                                                  ]
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE'4",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "p3_monty_31::dft::RecursiveDft")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ]
                                                ],
                                              "decimation_in_time_dft",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::DerefMut",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref_mut",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.SubPointer.get_struct_record_field (|
                                                              scratch,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.read (| nrows |);
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                  []
                                                                  [ MP ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path "alloc::vec::Vec")
                                                            []
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                []
                                                                [ MP ];
                                                              Ty.path "alloc::alloc::Global"
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "alloc::vec::Vec")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_monty_31::monty_31::MontyField31")
                                                                          []
                                                                          [ MP ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "core::cell::Ref")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "p3_monty_31::monty_31::MontyField31")
                                                                            []
                                                                            [ MP ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ]
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    inv_twiddles
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'5",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::idft_batch::__CALLSITE'5",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'5",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              let~ iter :
                                                  Ty.apply
                                                    (Ty.path "*")
                                                    []
                                                    [ Ty.path "tracing_core::field::Iter" ] :=
                                                M.alloc (|
                                                  M.call_closure (|
                                                    Ty.path "tracing_core::field::Iter",
                                                    M.get_associated_function (|
                                                      Ty.path "tracing_core::field::FieldSet",
                                                      "iter",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.path
                                                                  "tracing_core::field::FieldSet"
                                                              ],
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::metadata::Metadata",
                                                              "fields",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (| M.read (| meta |) |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |) in
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 2 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (|
                                                            Value.Array
                                                              [
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.alloc (|
                                                                        M.call_closure (|
                                                                          Ty.path
                                                                            "tracing_core::field::Field",
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              []
                                                                              [
                                                                                Ty.path
                                                                                  "tracing_core::field::Field"
                                                                              ],
                                                                            "expect",
                                                                            [],
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::option::Option")
                                                                                []
                                                                                [
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field"
                                                                                ],
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.path
                                                                                  "tracing_core::field::Iter",
                                                                                [],
                                                                                [],
                                                                                "next",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.borrow (|
                                                                                  Pointer.Kind.MutRef,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      iter
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                mk_str (|
                                                                                  "FieldSet corrupted (this is a bug)"
                                                                                |)
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              (* Unsize *)
                                                                              M.pointer_coercion
                                                                                (M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      ncols
                                                                                    |)
                                                                                  |)
                                                                                |))
                                                                            |))
                                                                        |)
                                                                      ]
                                                                  ];
                                                                Value.Tuple
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.borrow (|
                                                                          Pointer.Kind.Ref,
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              Ty.path
                                                                                "tracing_core::field::Field",
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::option::Option")
                                                                                  []
                                                                                  [
                                                                                    Ty.path
                                                                                      "tracing_core::field::Field"
                                                                                  ],
                                                                                "expect",
                                                                                [],
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::option::Option")
                                                                                    []
                                                                                    [
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field"
                                                                                    ],
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.path
                                                                                      "tracing_core::field::Iter",
                                                                                    [],
                                                                                    [],
                                                                                    "next",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.MutRef,
                                                                                      M.deref (|
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          iter
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |);
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.deref (|
                                                                                    mk_str (|
                                                                                      "FieldSet corrupted (this is a bug)"
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    |);
                                                                    Value.StructTuple
                                                                      "core::option::Option::Some"
                                                                      [
                                                                        (* Unsize *)
                                                                        M.pointer_coercion
                                                                          (M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            M.deref (|
                                                                              M.read (|
                                                                                M.use
                                                                                  (M.alloc (|
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.borrow (|
                                                                                        Pointer.Kind.Ref,
                                                                                        M.deref (|
                                                                                          M.borrow (|
                                                                                            Pointer.Kind.Ref,
                                                                                            nrows
                                                                                          |)
                                                                                        |)
                                                                                      |))
                                                                                  |))
                                                                              |)
                                                                            |)
                                                                          |))
                                                                      ]
                                                                  ]
                                                              ]
                                                          |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE'5",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_function (|
                                              "transpose::out_of_place::transpose",
                                              [],
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ]
                                              ]
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::Deref",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.SubPointer.get_struct_record_field (|
                                                              scratch,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.borrow (|
                                                Pointer.Kind.MutRef,
                                                M.deref (|
                                                  M.call_closure (|
                                                    Ty.apply
                                                      (Ty.path "&mut")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          []
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "p3_monty_31::monty_31::MontyField31")
                                                              []
                                                              [ MP ]
                                                          ]
                                                      ],
                                                    M.get_trait_method (|
                                                      "core::ops::deref::DerefMut",
                                                      Ty.apply
                                                        (Ty.path "alloc::vec::Vec")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      [],
                                                      [],
                                                      "deref_mut",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.borrow (|
                                                            Pointer.Kind.MutRef,
                                                            M.SubPointer.get_struct_record_field (|
                                                              mat,
                                                              "p3_matrix::dense::DenseMatrix",
                                                              "values"
                                                            |)
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)
                                                |)
                                              |);
                                              M.read (| nrows |);
                                              M.read (| ncols |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                let~ log_rows : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_function (| "p3_util::log2_ceil_usize", [], [] |),
                      [ M.read (| nrows |) ]
                    |)
                  |) in
                let~ inv_len :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ],
                      M.get_trait_method (|
                        "p3_field::field::Field",
                        Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ],
                        [],
                        [],
                        "div_2exp_u64",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          get_constant (|
                            "p3_field::field::PrimeCharacteristicRing::ONE",
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                          |)
                        |);
                        M.cast (Ty.path "u64") (M.read (| log_rows |))
                      ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple [],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'6",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::idft_batch::__CALLSITE'6",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::idft_batch::__CALLSITE'6",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 0 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (| Value.Array [] |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::idft_batch::__CALLSITE'6",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.call_closure (|
                                            Ty.tuple [],
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              "scale",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (| Pointer.Kind.MutRef, mat |);
                                              M.read (| inv_len |)
                                            ]
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |) in
                mat
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    (*     #[instrument(skip_all, fields(dims = %mat.dimensions(), added_bits))] *)
    Definition coset_lde_batch
        (MP : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      let Self : Ty.t := Self MP in
      match ε, τ, α with
      | [], [], [ self; mat; added_bits; shift ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let mat := M.alloc (| mat |) in
          let added_bits := M.alloc (| added_bits |) in
          let shift := M.alloc (| shift |) in
          M.catch_return
            (Ty.associated_in_trait
              "p3_dft::traits::TwoAdicSubgroupDft"
              []
              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ]
              (Ty.apply
                (Ty.path "p3_monty_31::dft::RecursiveDft")
                []
                [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ])
              "Evaluations") (|
            ltac:(M.monadic
              (M.read (|
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.alloc (| Value.Tuple [] |) in
                let __tracing_attr_span := M.copy (| Value.DeclaredButUndefined |) in
                let __tracing_attr_guard := M.copy (| Value.DeclaredButUndefined |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                LogicalOp.or (|
                                  LogicalOp.and (|
                                    M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialOrd",
                                        Ty.path "tracing_core::metadata::Level",
                                        [],
                                        [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                        "le",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_associated_constant (|
                                            Ty.path "tracing_core::metadata::Level",
                                            "INFO",
                                            Ty.path "tracing_core::metadata::Level"
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          get_constant (|
                                            "tracing::level_filters::STATIC_MAX_LEVEL",
                                            Ty.path "tracing_core::metadata::LevelFilter"
                                          |)
                                        |)
                                      ]
                                    |),
                                    ltac:(M.monadic
                                      (M.call_closure (|
                                        Ty.path "bool",
                                        M.get_trait_method (|
                                          "core::cmp::PartialOrd",
                                          Ty.path "tracing_core::metadata::Level",
                                          [],
                                          [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                          "le",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            get_associated_constant (|
                                              Ty.path "tracing_core::metadata::Level",
                                              "INFO",
                                              Ty.path "tracing_core::metadata::Level"
                                            |)
                                          |);
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing_core::metadata::LevelFilter",
                                                M.get_associated_function (|
                                                  Ty.path "tracing_core::metadata::LevelFilter",
                                                  "current",
                                                  [],
                                                  []
                                                |),
                                                []
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)))
                                  |),
                                  ltac:(M.monadic (Value.Bool false))
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_span,
                                M.read (|
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "INFO",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "INFO",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::coset_lde_batch::__CALLSITE",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              M.alloc (|
                                                                                                M.call_closure (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "tracing_core::field::DisplayValue")
                                                                                                    []
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions"
                                                                                                        ]
                                                                                                    ],
                                                                                                  M.get_function (|
                                                                                                    "tracing_core::field::display",
                                                                                                    [],
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "&")
                                                                                                        []
                                                                                                        [
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions"
                                                                                                        ]
                                                                                                    ]
                                                                                                  |),
                                                                                                  [
                                                                                                    M.borrow (|
                                                                                                      Pointer.Kind.Ref,
                                                                                                      M.alloc (|
                                                                                                        M.call_closure (|
                                                                                                          Ty.path
                                                                                                            "p3_matrix::Dimensions",
                                                                                                          M.get_trait_method (|
                                                                                                            "p3_matrix::Matrix",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "p3_matrix::dense::DenseMatrix")
                                                                                                              []
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    MP
                                                                                                                  ];
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "alloc::vec::Vec")
                                                                                                                  []
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                                                                      []
                                                                                                                      [
                                                                                                                        MP
                                                                                                                      ];
                                                                                                                    Ty.path
                                                                                                                      "alloc::alloc::Global"
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "p3_monty_31::monty_31::MontyField31")
                                                                                                                []
                                                                                                                [
                                                                                                                  MP
                                                                                                                ]
                                                                                                            ],
                                                                                                            "dimensions",
                                                                                                            [],
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.borrow (|
                                                                                                              Pointer.Kind.Ref,
                                                                                                              mat
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  ]
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    M.alloc (|
                                                                                                      Value.StructTuple
                                                                                                        "tracing_core::field::Empty"
                                                                                                        []
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |)
                              |)
                            |) in
                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                            M.alloc (|
                              M.write (|
                                __tracing_attr_guard,
                                M.call_closure (|
                                  Ty.path "tracing::span::Entered",
                                  M.get_associated_function (|
                                    Ty.path "tracing::span::Span",
                                    "enter",
                                    [],
                                    []
                                  |),
                                  [ M.borrow (| Pointer.Kind.Ref, __tracing_attr_span |) ]
                                |)
                              |)
                            |) in
                          M.alloc (| Value.Tuple [] |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ := M.use (M.alloc (| Value.Bool false |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                let~ __tracing_attr_fake_return :
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path
                                            "p3_matrix::row_index_mapped::RowIndexMappedView")
                                          []
                                          [
                                            Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                            Ty.apply
                                              (Ty.path "p3_matrix::dense::DenseMatrix")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ]
                                      ] :=
                                  M.alloc (|
                                    M.never_to_any (|
                                      M.read (|
                                        M.loop (|
                                          Ty.apply (Ty.path "*") [] [ Ty.path "never" ],
                                          ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                        |)
                                      |)
                                    |)
                                  |) in
                                M.return_ (| M.read (| __tracing_attr_fake_return |) |)
                              |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ nrows : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "height",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                    |)
                  |) in
                let~ ncols : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "width",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, mat |) ]
                    |)
                  |) in
                let~ result_nrows : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      BinOp.Wrap.shl,
                      [ M.read (| nrows |); M.read (| added_bits |) ]
                    |)
                  |) in
                let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                  M.match_operator (|
                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  BinOp.eq,
                                  [ M.read (| nrows |); Value.Integer IntegerKind.Usize 1 ]
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                let~ dupd_rows :
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ]
                                      ] :=
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ],
                                      M.get_trait_method (|
                                        "core::iter::traits::iterator::Iterator",
                                        Ty.apply
                                          (Ty.path "core::iter::adapters::flatten::Flatten")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "core::iter::sources::repeat_n::RepeatN")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ]
                                          ],
                                        [],
                                        [],
                                        "collect",
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ]
                                      |),
                                      [
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "core::iter::adapters::flatten::Flatten")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "core::iter::sources::repeat_n::RepeatN")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                            ],
                                          M.get_trait_method (|
                                            "core::iter::traits::iterator::Iterator",
                                            Ty.apply
                                              (Ty.path "core::iter::sources::repeat_n::RepeatN")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "alloc::vec::Vec")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ];
                                                    Ty.path "alloc::alloc::Global"
                                                  ]
                                              ],
                                            [],
                                            [],
                                            "flatten",
                                            [],
                                            []
                                          |),
                                          [
                                            M.call_closure (|
                                              Ty.apply
                                                (Ty.path "core::iter::sources::repeat_n::RepeatN")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ],
                                              M.get_function (|
                                                "core::iter::sources::repeat_n::repeat_n",
                                                [],
                                                [
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ]
                                                ]
                                              |),
                                              [
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    mat,
                                                    "p3_matrix::dense::DenseMatrix",
                                                    "values"
                                                  |)
                                                |);
                                                M.read (| result_nrows |)
                                              ]
                                            |)
                                          ]
                                        |)
                                      ]
                                    |)
                                  |) in
                                M.return_ (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                                      []
                                      [
                                        Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ]
                                      ],
                                    M.get_trait_method (|
                                      "p3_matrix::bitrev::BitReversibleMatrix",
                                      Ty.apply
                                        (Ty.path "p3_matrix::dense::DenseMatrix")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.apply
                                            (Ty.path "alloc::vec::Vec")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.path "alloc::alloc::Global"
                                            ]
                                        ],
                                      [],
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ]
                                      ],
                                      "bit_reverse_rows",
                                      [],
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "p3_matrix::dense::DenseMatrix")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.apply
                                              (Ty.path "alloc::vec::Vec")
                                              []
                                              [
                                                Ty.apply
                                                  (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                  []
                                                  [ MP ];
                                                Ty.path "alloc::alloc::Global"
                                              ]
                                          ],
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "p3_matrix::dense::DenseMatrix")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ],
                                          "new",
                                          [],
                                          []
                                        |),
                                        [ M.read (| dupd_rows |); M.read (| ncols |) ]
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ input_size : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      BinOp.Wrap.mul,
                      [ M.read (| nrows |); M.read (| ncols |) ]
                    |)
                  |) in
                let~ output_size : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      BinOp.Wrap.mul,
                      [ M.read (| result_nrows |); M.read (| ncols |) ]
                    |)
                  |) in
                let~ mat :
                    Ty.apply
                      (Ty.path "*")
                      []
                      [
                        Ty.apply
                          (Ty.path "p3_matrix::dense::DenseMatrix")
                          []
                          [
                            Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                            Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.path "alloc::alloc::Global"
                              ]
                          ]
                      ] :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "p3_matrix::dense::DenseMatrix")
                        []
                        [
                          Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_trait_method (|
                        "p3_matrix::Matrix",
                        Ty.apply
                          (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                          []
                          [
                            Ty.path "p3_matrix::bitrev::BitReversalPerm";
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]
                          ],
                        [],
                        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                        "to_row_major_matrix",
                        [],
                        []
                      |),
                      [
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                            []
                            [
                              Ty.path "p3_matrix::bitrev::BitReversalPerm";
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ]
                            ],
                          M.get_trait_method (|
                            "p3_matrix::bitrev::BitReversibleMatrix",
                            Ty.apply
                              (Ty.path "p3_matrix::dense::DenseMatrix")
                              []
                              [
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ],
                            [],
                            [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ],
                            "bit_reverse_rows",
                            [],
                            []
                          |),
                          [ M.read (| mat |) ]
                        |)
                      ]
                    |)
                  |) in
                M.match_operator (|
                  Ty.apply
                    (Ty.path "*")
                    []
                    [
                      Ty.apply
                        (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                        []
                        [
                          Ty.path "p3_matrix::bitrev::BitReversalPerm";
                          Ty.apply
                            (Ty.path "p3_matrix::dense::DenseMatrix")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                    ],
                  M.alloc (|
                    M.call_closure (|
                      Ty.tuple
                        [
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ];
                          Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            []
                            [
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ];
                              Ty.path "alloc::alloc::Global"
                            ]
                        ],
                      M.get_associated_function (|
                        Ty.path "tracing::span::Span",
                        "in_scope",
                        [],
                        [
                          Ty.function
                            [ Ty.tuple [] ]
                            (Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ];
                                Ty.apply
                                  (Ty.path "alloc::vec::Vec")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.path "alloc::alloc::Global"
                                  ]
                              ]);
                          Ty.tuple
                            [
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ];
                              Ty.apply
                                (Ty.path "alloc::vec::Vec")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.path "alloc::alloc::Global"
                                ]
                            ]
                        ]
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          let~ interest :
                              Ty.apply
                                (Ty.path "*")
                                []
                                [ Ty.path "tracing_core::subscriber::Interest" ] :=
                            M.alloc (|
                              M.call_closure (|
                                Ty.path "tracing_core::subscriber::Interest",
                                M.get_associated_function (|
                                  Ty.path "tracing_core::subscriber::Interest",
                                  "never",
                                  [],
                                  []
                                |),
                                []
                              |)
                            |) in
                          M.match_operator (|
                            Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                            M.alloc (| Value.Tuple [] |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let γ :=
                                    M.use
                                      (M.alloc (|
                                        LogicalOp.and (|
                                          LogicalOp.and (|
                                            LogicalOp.and (|
                                              M.call_closure (|
                                                Ty.path "bool",
                                                M.get_trait_method (|
                                                  "core::cmp::PartialOrd",
                                                  Ty.path "tracing_core::metadata::Level",
                                                  [],
                                                  [ Ty.path "tracing_core::metadata::LevelFilter" ],
                                                  "le",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_associated_constant (|
                                                      Ty.path "tracing_core::metadata::Level",
                                                      "DEBUG",
                                                      Ty.path "tracing_core::metadata::Level"
                                                    |)
                                                  |);
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    get_constant (|
                                                      "tracing::level_filters::STATIC_MAX_LEVEL",
                                                      Ty.path "tracing_core::metadata::LevelFilter"
                                                    |)
                                                  |)
                                                ]
                                              |),
                                              ltac:(M.monadic
                                                (M.call_closure (|
                                                  Ty.path "bool",
                                                  M.get_trait_method (|
                                                    "core::cmp::PartialOrd",
                                                    Ty.path "tracing_core::metadata::Level",
                                                    [],
                                                    [ Ty.path "tracing_core::metadata::LevelFilter"
                                                    ],
                                                    "le",
                                                    [],
                                                    []
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      get_associated_constant (|
                                                        Ty.path "tracing_core::metadata::Level",
                                                        "DEBUG",
                                                        Ty.path "tracing_core::metadata::Level"
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path
                                                            "tracing_core::metadata::LevelFilter",
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter",
                                                            "current",
                                                            [],
                                                            []
                                                          |),
                                                          []
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)))
                                            |),
                                            ltac:(M.monadic
                                              (M.read (|
                                                let~ _ :
                                                    Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                                  M.alloc (|
                                                    M.write (|
                                                      interest,
                                                      M.call_closure (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        M.get_associated_function (|
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          "interest",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE'1",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |) in
                                                M.alloc (|
                                                  UnOp.not (|
                                                    M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_associated_function (|
                                                        Ty.path
                                                          "tracing_core::subscriber::Interest",
                                                        "is_never",
                                                        [],
                                                        []
                                                      |),
                                                      [ M.borrow (| Pointer.Kind.Ref, interest |) ]
                                                    |)
                                                  |)
                                                |)
                                              |)))
                                          |),
                                          ltac:(M.monadic
                                            (M.call_closure (|
                                              Ty.path "bool",
                                              M.get_function (|
                                                "tracing::__macro_support::__is_enabled",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.call_closure (|
                                                      Ty.apply
                                                        (Ty.path "&")
                                                        []
                                                        [ Ty.path "tracing_core::metadata::Metadata"
                                                        ],
                                                      M.get_trait_method (|
                                                        "tracing_core::callsite::Callsite",
                                                        Ty.path
                                                          "tracing_core::callsite::DefaultCallsite",
                                                        [],
                                                        [],
                                                        "metadata",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.read (|
                                                              get_constant (|
                                                                "p3_monty_31::dft::coset_lde_batch::__CALLSITE'1",
                                                                Ty.apply
                                                                  (Ty.path "&")
                                                                  []
                                                                  [
                                                                    Ty.path
                                                                      "tracing_core::callsite::DefaultCallsite"
                                                                  ]
                                                              |)
                                                            |)
                                                          |)
                                                        |)
                                                      ]
                                                    |)
                                                  |)
                                                |);
                                                M.read (| interest |)
                                              ]
                                            |)))
                                        |)
                                      |)) in
                                  let _ :=
                                    is_constant_or_break_match (|
                                      M.read (| γ |),
                                      Value.Bool true
                                    |) in
                                  let~ meta :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "tracing_core::metadata::Metadata" ]
                                        ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "tracing_core::metadata::Metadata" ],
                                        M.get_trait_method (|
                                          "tracing_core::callsite::Callsite",
                                          Ty.path "tracing_core::callsite::DefaultCallsite",
                                          [],
                                          [],
                                          "metadata",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.read (|
                                                get_constant (|
                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE'1",
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [
                                                      Ty.path
                                                        "tracing_core::callsite::DefaultCallsite"
                                                    ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  M.alloc (|
                                    M.call_closure (|
                                      Ty.path "tracing::span::Span",
                                      M.get_associated_function (|
                                        Ty.path "tracing::span::Span",
                                        "new",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (| M.read (| meta |) |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.path "tracing_core::field::ValueSet",
                                                  M.get_associated_function (|
                                                    Ty.path "tracing_core::field::FieldSet",
                                                    "value_set",
                                                    [],
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [ Value.Integer IntegerKind.Usize 0 ]
                                                        [
                                                          Ty.tuple
                                                            [
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::field::Field"
                                                                ];
                                                              Ty.apply
                                                                (Ty.path "core::option::Option")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.dyn
                                                                        [
                                                                          ("tracing_core::field::Value::Trait",
                                                                            [])
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                        ]
                                                    ]
                                                  |),
                                                  [
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.call_closure (|
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::field::FieldSet"
                                                            ],
                                                          M.get_associated_function (|
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata",
                                                            "fields",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (| M.read (| meta |) |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |);
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      M.deref (|
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.alloc (| Value.Array [] |)
                                                        |)
                                                      |)
                                                    |)
                                                  ]
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  |)));
                              fun γ =>
                                ltac:(M.monadic
                                  (let~ span :
                                      Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing::span::Span",
                                        M.get_function (|
                                          "tracing::__macro_support::__disabled_span",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'1",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)
                                        ]
                                      |)
                                    |) in
                                  let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                    M.alloc (| Value.Tuple [] |) in
                                  span))
                            ]
                          |)
                        |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                ltac:(M.monadic
                                  (M.match_operator (|
                                    Ty.apply
                                      (Ty.path "*")
                                      []
                                      [
                                        Ty.function
                                          [ Ty.tuple [] ]
                                          (Ty.tuple
                                            [
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.path "alloc::alloc::Global"
                                                ];
                                              Ty.apply
                                                (Ty.path "alloc::vec::Vec")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                    []
                                                    [ MP ];
                                                  Ty.path "alloc::alloc::Global"
                                                ]
                                            ])
                                      ],
                                    M.alloc (| α0 |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.read (|
                                            let~ output :
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ],
                                                  M.get_trait_method (|
                                                    "p3_field::field::PrimeCharacteristicRing",
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ],
                                                    [],
                                                    [],
                                                    "zero_vec",
                                                    [],
                                                    []
                                                  |),
                                                  [ M.read (| output_size |) ]
                                                |)
                                              |) in
                                            let~ padded :
                                                Ty.apply
                                                  (Ty.path "*")
                                                  []
                                                  [
                                                    Ty.apply
                                                      (Ty.path "alloc::vec::Vec")
                                                      []
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ];
                                                        Ty.path "alloc::alloc::Global"
                                                      ]
                                                  ] :=
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "alloc::vec::Vec")
                                                    []
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "p3_monty_31::monty_31::MontyField31")
                                                        []
                                                        [ MP ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ],
                                                  M.get_trait_method (|
                                                    "p3_field::field::PrimeCharacteristicRing",
                                                    Ty.apply
                                                      (Ty.path
                                                        "p3_monty_31::monty_31::MontyField31")
                                                      []
                                                      [ MP ],
                                                    [],
                                                    [],
                                                    "zero_vec",
                                                    [],
                                                    []
                                                  |),
                                                  [ M.read (| output_size |) ]
                                                |)
                                              |) in
                                            M.alloc (|
                                              Value.Tuple
                                                [ M.read (| output |); M.read (| padded |) ]
                                            |)
                                          |)))
                                    ]
                                  |)))
                              | _ => M.impossible "wrong number of arguments"
                              end))
                      ]
                    |)
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let output := M.copy (| γ0_0 |) in
                        let padded := M.copy (| γ0_1 |) in
                        let~ coeffs :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "slice")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ]
                                      ]
                                  ]
                              ] :=
                          M.alloc (|
                            M.borrow (|
                              Pointer.Kind.MutRef,
                              M.deref (|
                                M.call_closure (|
                                  Ty.apply
                                    (Ty.path "&mut")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "slice")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ]
                                        ]
                                    ],
                                  M.get_trait_method (|
                                    "core::ops::index::IndexMut",
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ],
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "core::ops::range::RangeTo")
                                        []
                                        [ Ty.path "usize" ]
                                    ],
                                    "index_mut",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (| Pointer.Kind.MutRef, output |);
                                    Value.StructRecord
                                      "core::ops::range::RangeTo"
                                      [ ("end_", M.read (| input_size |)) ]
                                  ]
                                |)
                              |)
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_associated_function (|
                                Ty.path "tracing::span::Span",
                                "in_scope",
                                [],
                                [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "DEBUG",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "DEBUG",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'2",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::coset_lde_batch::__CALLSITE'2",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'2",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              nrows
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    ncols
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE'2",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.tuple [],
                                                    M.get_function (|
                                                      "transpose::out_of_place::transpose",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ]
                                                      ]
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                    []
                                                                    [ MP ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.SubPointer.get_struct_record_field (|
                                                                      mat,
                                                                      "p3_matrix::dense::DenseMatrix",
                                                                      "values"
                                                                    |)
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (| M.read (| coeffs |) |)
                                                      |);
                                                      M.read (| ncols |);
                                                      M.read (| nrows |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "p3_monty_31::dft::RecursiveDft")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ]
                                  ],
                                "update_twiddles",
                                [],
                                []
                              |),
                              [
                                M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |);
                                M.read (| result_nrows |)
                              ]
                            |)
                          |) in
                        let~ inv_twiddles :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::cell::Ref")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::cell::Ref")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "core::cell::RefCell")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                "borrow",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "p3_monty_31::dft::RecursiveDft",
                                    "inv_twiddles"
                                  |)
                                |)
                              ]
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_associated_function (|
                                Ty.path "tracing::span::Span",
                                "in_scope",
                                [],
                                [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "DEBUG",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "DEBUG",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'3",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::coset_lde_batch::__CALLSITE'3",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'3",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              ncols
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    nrows
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE'3",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.tuple [],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "p3_monty_31::dft::RecursiveDft")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ]
                                                        ],
                                                      "decimation_in_time_dft",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (| M.read (| coeffs |) |)
                                                      |);
                                                      M.read (| nrows |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_monty_31::monty_31::MontyField31")
                                                                          []
                                                                          [ MP ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                  []
                                                                                  [ MP ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::ops::deref::Deref",
                                                                      Ty.apply
                                                                        (Ty.path "core::cell::Ref")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                                    []
                                                                                    [ MP ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "deref",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            inv_twiddles
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          |) in
                        let~ log_rows : Ty.apply (Ty.path "*") [] [ Ty.path "usize" ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.path "usize",
                              M.get_function (| "p3_util::log2_ceil_usize", [], [] |),
                              [ M.read (| nrows |) ]
                            |)
                          |) in
                        let~ inv_len :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ],
                              M.get_trait_method (|
                                "p3_field::field::Field",
                                Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ],
                                [],
                                [],
                                "div_2exp_u64",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  get_constant (|
                                    "p3_field::field::PrimeCharacteristicRing::ONE",
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ]
                                  |)
                                |);
                                M.cast (Ty.path "u64") (M.read (| log_rows |))
                              ]
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_function (|
                                "p3_monty_31::dft::coset_shift_and_scale_rows",
                                [],
                                [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                                ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.MutRef,
                                  M.deref (|
                                    M.call_closure (|
                                      Ty.apply
                                        (Ty.path "&mut")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "slice")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "p3_monty_31::monty_31::MontyField31")
                                                []
                                                [ MP ]
                                            ]
                                        ],
                                      M.get_trait_method (|
                                        "core::ops::deref::DerefMut",
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ],
                                        [],
                                        [],
                                        "deref_mut",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.MutRef,
                                          M.deref (| M.borrow (| Pointer.Kind.MutRef, padded |) |)
                                        |)
                                      ]
                                    |)
                                  |)
                                |);
                                M.read (| result_nrows |);
                                M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| coeffs |) |) |);
                                M.read (| nrows |);
                                M.read (| shift |);
                                M.read (| inv_len |)
                              ]
                            |)
                          |) in
                        let~ twiddles :
                            Ty.apply
                              (Ty.path "*")
                              []
                              [
                                Ty.apply
                                  (Ty.path "core::cell::Ref")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "core::cell::Ref")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ],
                              M.get_associated_function (|
                                Ty.apply
                                  (Ty.path "core::cell::RefCell")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "alloc::vec::Vec")
                                          []
                                          [
                                            Ty.apply
                                              (Ty.path "p3_monty_31::monty_31::MontyField31")
                                              []
                                              [ MP ];
                                            Ty.path "alloc::alloc::Global"
                                          ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                "borrow",
                                [],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.SubPointer.get_struct_record_field (|
                                    M.deref (| M.read (| self |) |),
                                    "p3_monty_31::dft::RecursiveDft",
                                    "twiddles"
                                  |)
                                |)
                              ]
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_associated_function (|
                                Ty.path "tracing::span::Span",
                                "in_scope",
                                [],
                                [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "DEBUG",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "DEBUG",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'4",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::coset_lde_batch::__CALLSITE'4",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'4",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              ncols
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    result_nrows
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE'4",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.tuple [],
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "p3_monty_31::dft::RecursiveDft")
                                                        []
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "p3_monty_31::monty_31::MontyField31")
                                                            []
                                                            [ MP ]
                                                        ],
                                                      "decimation_in_freq_dft",
                                                      [],
                                                      []
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&mut")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::DerefMut",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                    []
                                                                    [ MP ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref_mut",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    padded
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.read (| result_nrows |);
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "alloc::vec::Vec")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "p3_monty_31::monty_31::MontyField31")
                                                                          []
                                                                          [ MP ];
                                                                        Ty.path
                                                                          "alloc::alloc::Global"
                                                                      ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    []
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "p3_monty_31::monty_31::MontyField31")
                                                                        []
                                                                        [ MP ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          []
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              []
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "p3_monty_31::monty_31::MontyField31")
                                                                                  []
                                                                                  [ MP ];
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ],
                                                                    M.get_trait_method (|
                                                                      "core::ops::deref::Deref",
                                                                      Ty.apply
                                                                        (Ty.path "core::cell::Ref")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "alloc::vec::Vec")
                                                                            []
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                []
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                                    []
                                                                                    [ MP ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "alloc::alloc::Global"
                                                                            ]
                                                                        ],
                                                                      [],
                                                                      [],
                                                                      "deref",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.borrow (|
                                                                            Pointer.Kind.Ref,
                                                                            twiddles
                                                                          |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          |) in
                        let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                          M.alloc (|
                            M.call_closure (|
                              Ty.tuple [],
                              M.get_associated_function (|
                                Ty.path "tracing::span::Span",
                                "in_scope",
                                [],
                                [ Ty.function [ Ty.tuple [] ] (Ty.tuple []); Ty.tuple [] ]
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  let~ interest :
                                      Ty.apply
                                        (Ty.path "*")
                                        []
                                        [ Ty.path "tracing_core::subscriber::Interest" ] :=
                                    M.alloc (|
                                      M.call_closure (|
                                        Ty.path "tracing_core::subscriber::Interest",
                                        M.get_associated_function (|
                                          Ty.path "tracing_core::subscriber::Interest",
                                          "never",
                                          [],
                                          []
                                        |),
                                        []
                                      |)
                                    |) in
                                  M.match_operator (|
                                    Ty.apply (Ty.path "*") [] [ Ty.path "tracing::span::Span" ],
                                    M.alloc (| Value.Tuple [] |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ :=
                                            M.use
                                              (M.alloc (|
                                                LogicalOp.and (|
                                                  LogicalOp.and (|
                                                    LogicalOp.and (|
                                                      M.call_closure (|
                                                        Ty.path "bool",
                                                        M.get_trait_method (|
                                                          "core::cmp::PartialOrd",
                                                          Ty.path "tracing_core::metadata::Level",
                                                          [],
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::LevelFilter"
                                                          ],
                                                          "le",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_associated_constant (|
                                                              Ty.path
                                                                "tracing_core::metadata::Level",
                                                              "DEBUG",
                                                              Ty.path
                                                                "tracing_core::metadata::Level"
                                                            |)
                                                          |);
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            get_constant (|
                                                              "tracing::level_filters::STATIC_MAX_LEVEL",
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            |)
                                                          |)
                                                        ]
                                                      |),
                                                      ltac:(M.monadic
                                                        (M.call_closure (|
                                                          Ty.path "bool",
                                                          M.get_trait_method (|
                                                            "core::cmp::PartialOrd",
                                                            Ty.path "tracing_core::metadata::Level",
                                                            [],
                                                            [
                                                              Ty.path
                                                                "tracing_core::metadata::LevelFilter"
                                                            ],
                                                            "le",
                                                            [],
                                                            []
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              get_associated_constant (|
                                                                Ty.path
                                                                  "tracing_core::metadata::Level",
                                                                "DEBUG",
                                                                Ty.path
                                                                  "tracing_core::metadata::Level"
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.alloc (|
                                                                M.call_closure (|
                                                                  Ty.path
                                                                    "tracing_core::metadata::LevelFilter",
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::LevelFilter",
                                                                    "current",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  []
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)))
                                                    |),
                                                    ltac:(M.monadic
                                                      (M.read (|
                                                        let~ _ :
                                                            Ty.apply
                                                              (Ty.path "*")
                                                              []
                                                              [ Ty.tuple [] ] :=
                                                          M.alloc (|
                                                            M.write (|
                                                              interest,
                                                              M.call_closure (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                M.get_associated_function (|
                                                                  Ty.path
                                                                    "tracing_core::callsite::DefaultCallsite",
                                                                  "interest",
                                                                  [],
                                                                  []
                                                                |),
                                                                [
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    M.deref (|
                                                                      M.read (|
                                                                        get_constant (|
                                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'5",
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.path
                                                                                "tracing_core::callsite::DefaultCallsite"
                                                                            ]
                                                                        |)
                                                                      |)
                                                                    |)
                                                                  |)
                                                                ]
                                                              |)
                                                            |)
                                                          |) in
                                                        M.alloc (|
                                                          UnOp.not (|
                                                            M.call_closure (|
                                                              Ty.path "bool",
                                                              M.get_associated_function (|
                                                                Ty.path
                                                                  "tracing_core::subscriber::Interest",
                                                                "is_never",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  interest
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)
                                                      |)))
                                                  |),
                                                  ltac:(M.monadic
                                                    (M.call_closure (|
                                                      Ty.path "bool",
                                                      M.get_function (|
                                                        "tracing::__macro_support::__is_enabled",
                                                        [],
                                                        []
                                                      |),
                                                      [
                                                        M.borrow (|
                                                          Pointer.Kind.Ref,
                                                          M.deref (|
                                                            M.call_closure (|
                                                              Ty.apply
                                                                (Ty.path "&")
                                                                []
                                                                [
                                                                  Ty.path
                                                                    "tracing_core::metadata::Metadata"
                                                                ],
                                                              M.get_trait_method (|
                                                                "tracing_core::callsite::Callsite",
                                                                Ty.path
                                                                  "tracing_core::callsite::DefaultCallsite",
                                                                [],
                                                                [],
                                                                "metadata",
                                                                [],
                                                                []
                                                              |),
                                                              [
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.deref (|
                                                                    M.read (|
                                                                      get_constant (|
                                                                        "p3_monty_31::dft::coset_lde_batch::__CALLSITE'5",
                                                                        Ty.apply
                                                                          (Ty.path "&")
                                                                          []
                                                                          [
                                                                            Ty.path
                                                                              "tracing_core::callsite::DefaultCallsite"
                                                                          ]
                                                                      |)
                                                                    |)
                                                                  |)
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |);
                                                        M.read (| interest |)
                                                      ]
                                                    |)))
                                                |)
                                              |)) in
                                          let _ :=
                                            is_constant_or_break_match (|
                                              M.read (| γ |),
                                              Value.Bool true
                                            |) in
                                          let~ meta :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [
                                                  Ty.apply
                                                    (Ty.path "&")
                                                    []
                                                    [ Ty.path "tracing_core::metadata::Metadata" ]
                                                ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "&")
                                                  []
                                                  [ Ty.path "tracing_core::metadata::Metadata" ],
                                                M.get_trait_method (|
                                                  "tracing_core::callsite::Callsite",
                                                  Ty.path "tracing_core::callsite::DefaultCallsite",
                                                  [],
                                                  [],
                                                  "metadata",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.read (|
                                                        get_constant (|
                                                          "p3_monty_31::dft::coset_lde_batch::__CALLSITE'5",
                                                          Ty.apply
                                                            (Ty.path "&")
                                                            []
                                                            [
                                                              Ty.path
                                                                "tracing_core::callsite::DefaultCallsite"
                                                            ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          M.alloc (|
                                            M.call_closure (|
                                              Ty.path "tracing::span::Span",
                                              M.get_associated_function (|
                                                Ty.path "tracing::span::Span",
                                                "new",
                                                [],
                                                []
                                              |),
                                              [
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (| M.read (| meta |) |)
                                                |);
                                                M.borrow (|
                                                  Pointer.Kind.Ref,
                                                  M.deref (|
                                                    M.borrow (|
                                                      Pointer.Kind.Ref,
                                                      let~ iter :
                                                          Ty.apply
                                                            (Ty.path "*")
                                                            []
                                                            [ Ty.path "tracing_core::field::Iter"
                                                            ] :=
                                                        M.alloc (|
                                                          M.call_closure (|
                                                            Ty.path "tracing_core::field::Iter",
                                                            M.get_associated_function (|
                                                              Ty.path
                                                                "tracing_core::field::FieldSet",
                                                              "iter",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.call_closure (|
                                                                    Ty.apply
                                                                      (Ty.path "&")
                                                                      []
                                                                      [
                                                                        Ty.path
                                                                          "tracing_core::field::FieldSet"
                                                                      ],
                                                                    M.get_associated_function (|
                                                                      Ty.path
                                                                        "tracing_core::metadata::Metadata",
                                                                      "fields",
                                                                      [],
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.borrow (|
                                                                        Pointer.Kind.Ref,
                                                                        M.deref (|
                                                                          M.read (| meta |)
                                                                        |)
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |) in
                                                      M.alloc (|
                                                        M.call_closure (|
                                                          Ty.path "tracing_core::field::ValueSet",
                                                          M.get_associated_function (|
                                                            Ty.path "tracing_core::field::FieldSet",
                                                            "value_set",
                                                            [],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "array")
                                                                [ Value.Integer IntegerKind.Usize 2
                                                                ]
                                                                [
                                                                  Ty.tuple
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        []
                                                                        [
                                                                          Ty.path
                                                                            "tracing_core::field::Field"
                                                                        ];
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::option::Option")
                                                                        []
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "&")
                                                                            []
                                                                            [
                                                                              Ty.dyn
                                                                                [
                                                                                  ("tracing_core::field::Value::Trait",
                                                                                    [])
                                                                                ]
                                                                            ]
                                                                        ]
                                                                    ]
                                                                ]
                                                            ]
                                                          |),
                                                          [
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.call_closure (|
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::field::FieldSet"
                                                                    ],
                                                                  M.get_associated_function (|
                                                                    Ty.path
                                                                      "tracing_core::metadata::Metadata",
                                                                    "fields",
                                                                    [],
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.borrow (|
                                                                      Pointer.Kind.Ref,
                                                                      M.deref (|
                                                                        M.read (| meta |)
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |)
                                                              |)
                                                            |);
                                                            M.borrow (|
                                                              Pointer.Kind.Ref,
                                                              M.deref (|
                                                                M.borrow (|
                                                                  Pointer.Kind.Ref,
                                                                  M.alloc (|
                                                                    Value.Array
                                                                      [
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  Ty.path
                                                                                    "tracing_core::field::Field",
                                                                                  M.get_associated_function (|
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::option::Option")
                                                                                      []
                                                                                      [
                                                                                        Ty.path
                                                                                          "tracing_core::field::Field"
                                                                                      ],
                                                                                    "expect",
                                                                                    [],
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "core::option::Option")
                                                                                        []
                                                                                        [
                                                                                          Ty.path
                                                                                            "tracing_core::field::Field"
                                                                                        ],
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::iterator::Iterator",
                                                                                        Ty.path
                                                                                          "tracing_core::field::Iter",
                                                                                        [],
                                                                                        [],
                                                                                        "next",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.MutRef,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              iter
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |);
                                                                                    M.borrow (|
                                                                                      Pointer.Kind.Ref,
                                                                                      M.deref (|
                                                                                        mk_str (|
                                                                                          "FieldSet corrupted (this is a bug)"
                                                                                        |)
                                                                                      |)
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      (* Unsize *)
                                                                                      M.pointer_coercion
                                                                                        (M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.Ref,
                                                                                              ncols
                                                                                            |)
                                                                                          |)
                                                                                        |))
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                          ];
                                                                        Value.Tuple
                                                                          [
                                                                            M.borrow (|
                                                                              Pointer.Kind.Ref,
                                                                              M.deref (|
                                                                                M.borrow (|
                                                                                  Pointer.Kind.Ref,
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      Ty.path
                                                                                        "tracing_core::field::Field",
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::option::Option")
                                                                                          []
                                                                                          [
                                                                                            Ty.path
                                                                                              "tracing_core::field::Field"
                                                                                          ],
                                                                                        "expect",
                                                                                        [],
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::option::Option")
                                                                                            []
                                                                                            [
                                                                                              Ty.path
                                                                                                "tracing_core::field::Field"
                                                                                            ],
                                                                                          M.get_trait_method (|
                                                                                            "core::iter::traits::iterator::Iterator",
                                                                                            Ty.path
                                                                                              "tracing_core::field::Iter",
                                                                                            [],
                                                                                            [],
                                                                                            "next",
                                                                                            [],
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.borrow (|
                                                                                              Pointer.Kind.MutRef,
                                                                                              M.deref (|
                                                                                                M.borrow (|
                                                                                                  Pointer.Kind.MutRef,
                                                                                                  iter
                                                                                                |)
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |);
                                                                                        M.borrow (|
                                                                                          Pointer.Kind.Ref,
                                                                                          M.deref (|
                                                                                            mk_str (|
                                                                                              "FieldSet corrupted (this is a bug)"
                                                                                            |)
                                                                                          |)
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |)
                                                                                |)
                                                                              |)
                                                                            |);
                                                                            Value.StructTuple
                                                                              "core::option::Option::Some"
                                                                              [
                                                                                (* Unsize *)
                                                                                M.pointer_coercion
                                                                                  (M.borrow (|
                                                                                    Pointer.Kind.Ref,
                                                                                    M.deref (|
                                                                                      M.read (|
                                                                                        M.use
                                                                                          (M.alloc (|
                                                                                            (* Unsize *)
                                                                                            M.pointer_coercion
                                                                                              (M.borrow (|
                                                                                                Pointer.Kind.Ref,
                                                                                                M.deref (|
                                                                                                  M.borrow (|
                                                                                                    Pointer.Kind.Ref,
                                                                                                    result_nrows
                                                                                                  |)
                                                                                                |)
                                                                                              |))
                                                                                          |))
                                                                                      |)
                                                                                    |)
                                                                                  |))
                                                                              ]
                                                                          ]
                                                                      ]
                                                                  |)
                                                                |)
                                                              |)
                                                            |)
                                                          ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)
                                              ]
                                            |)
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let~ span :
                                              Ty.apply
                                                (Ty.path "*")
                                                []
                                                [ Ty.path "tracing::span::Span" ] :=
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.path "tracing::span::Span",
                                                M.get_function (|
                                                  "tracing::__macro_support::__disabled_span",
                                                  [],
                                                  []
                                                |),
                                                [
                                                  M.borrow (|
                                                    Pointer.Kind.Ref,
                                                    M.deref (|
                                                      M.call_closure (|
                                                        Ty.apply
                                                          (Ty.path "&")
                                                          []
                                                          [
                                                            Ty.path
                                                              "tracing_core::metadata::Metadata"
                                                          ],
                                                        M.get_trait_method (|
                                                          "tracing_core::callsite::Callsite",
                                                          Ty.path
                                                            "tracing_core::callsite::DefaultCallsite",
                                                          [],
                                                          [],
                                                          "metadata",
                                                          [],
                                                          []
                                                        |),
                                                        [
                                                          M.borrow (|
                                                            Pointer.Kind.Ref,
                                                            M.deref (|
                                                              M.read (|
                                                                get_constant (|
                                                                  "p3_monty_31::dft::coset_lde_batch::__CALLSITE'5",
                                                                  Ty.apply
                                                                    (Ty.path "&")
                                                                    []
                                                                    [
                                                                      Ty.path
                                                                        "tracing_core::callsite::DefaultCallsite"
                                                                    ]
                                                                |)
                                                              |)
                                                            |)
                                                          |)
                                                        ]
                                                      |)
                                                    |)
                                                  |)
                                                ]
                                              |)
                                            |) in
                                          let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                                            M.alloc (| Value.Tuple [] |) in
                                          span))
                                    ]
                                  |)
                                |);
                                M.closure
                                  (fun γ =>
                                    ltac:(M.monadic
                                      match γ with
                                      | [ α0 ] =>
                                        ltac:(M.monadic
                                          (M.match_operator (|
                                            Ty.apply
                                              (Ty.path "*")
                                              []
                                              [ Ty.function [ Ty.tuple [] ] (Ty.tuple []) ],
                                            M.alloc (| α0 |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (M.call_closure (|
                                                    Ty.tuple [],
                                                    M.get_function (|
                                                      "transpose::out_of_place::transpose",
                                                      [],
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "p3_monty_31::monty_31::MontyField31")
                                                          []
                                                          [ MP ]
                                                      ]
                                                    |),
                                                    [
                                                      M.borrow (|
                                                        Pointer.Kind.Ref,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::Deref",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                    []
                                                                    [ MP ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.Ref,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.Ref,
                                                                    padded
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.borrow (|
                                                        Pointer.Kind.MutRef,
                                                        M.deref (|
                                                          M.call_closure (|
                                                            Ty.apply
                                                              (Ty.path "&mut")
                                                              []
                                                              [
                                                                Ty.apply
                                                                  (Ty.path "slice")
                                                                  []
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "p3_monty_31::monty_31::MontyField31")
                                                                      []
                                                                      [ MP ]
                                                                  ]
                                                              ],
                                                            M.get_trait_method (|
                                                              "core::ops::deref::DerefMut",
                                                              Ty.apply
                                                                (Ty.path "alloc::vec::Vec")
                                                                []
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "p3_monty_31::monty_31::MontyField31")
                                                                    []
                                                                    [ MP ];
                                                                  Ty.path "alloc::alloc::Global"
                                                                ],
                                                              [],
                                                              [],
                                                              "deref_mut",
                                                              [],
                                                              []
                                                            |),
                                                            [
                                                              M.borrow (|
                                                                Pointer.Kind.MutRef,
                                                                M.deref (|
                                                                  M.borrow (|
                                                                    Pointer.Kind.MutRef,
                                                                    output
                                                                  |)
                                                                |)
                                                              |)
                                                            ]
                                                          |)
                                                        |)
                                                      |);
                                                      M.read (| result_nrows |);
                                                      M.read (| ncols |)
                                                    ]
                                                  |)))
                                            ]
                                          |)))
                                      | _ => M.impossible "wrong number of arguments"
                                      end))
                              ]
                            |)
                          |) in
                        M.alloc (|
                          M.call_closure (|
                            Ty.apply
                              (Ty.path "p3_matrix::row_index_mapped::RowIndexMappedView")
                              []
                              [
                                Ty.path "p3_matrix::bitrev::BitReversalPerm";
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ]
                              ],
                            M.get_trait_method (|
                              "p3_matrix::bitrev::BitReversibleMatrix",
                              Ty.apply
                                (Ty.path "p3_matrix::dense::DenseMatrix")
                                []
                                [
                                  Ty.apply
                                    (Ty.path "p3_monty_31::monty_31::MontyField31")
                                    []
                                    [ MP ];
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.path "alloc::alloc::Global"
                                    ]
                                ],
                              [],
                              [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ]
                              ],
                              "bit_reverse_rows",
                              [],
                              []
                            |),
                            [
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "p3_matrix::dense::DenseMatrix")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "p3_monty_31::monty_31::MontyField31")
                                      []
                                      [ MP ];
                                    Ty.apply
                                      (Ty.path "alloc::vec::Vec")
                                      []
                                      [
                                        Ty.apply
                                          (Ty.path "p3_monty_31::monty_31::MontyField31")
                                          []
                                          [ MP ];
                                        Ty.path "alloc::alloc::Global"
                                      ]
                                  ],
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "p3_matrix::dense::DenseMatrix")
                                    []
                                    [
                                      Ty.apply
                                        (Ty.path "p3_monty_31::monty_31::MontyField31")
                                        []
                                        [ MP ];
                                      Ty.apply
                                        (Ty.path "alloc::vec::Vec")
                                        []
                                        [
                                          Ty.apply
                                            (Ty.path "p3_monty_31::monty_31::MontyField31")
                                            []
                                            [ MP ];
                                          Ty.path "alloc::alloc::Global"
                                        ]
                                    ],
                                  "new",
                                  [],
                                  []
                                |),
                                [ M.read (| output |); M.read (| ncols |) ]
                              |)
                            ]
                          |)
                        |)))
                  ]
                |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (MP : Ty.t),
      M.IsTraitInstance
        "p3_dft::traits::TwoAdicSubgroupDft"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *)
        [ Ty.apply (Ty.path "p3_monty_31::monty_31::MontyField31") [] [ MP ] ]
        (Self MP)
        (* Instance *)
        [
          ("Evaluations", InstanceField.Ty (_Evaluations MP));
          ("dft_batch", InstanceField.Method (dft_batch MP));
          ("idft_batch", InstanceField.Method (idft_batch MP));
          ("coset_lde_batch", InstanceField.Method (coset_lde_batch MP))
        ].
  End Impl_p3_dft_traits_TwoAdicSubgroupDft_where_p3_monty_31_data_traits_MontyParameters_MP_where_p3_monty_31_data_traits_FieldParameters_MP_where_p3_monty_31_data_traits_TwoAdicData_MP_p3_monty_31_monty_31_MontyField31_MP_for_p3_monty_31_dft_RecursiveDft_p3_monty_31_monty_31_MontyField31_MP.
End dft.
