(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module round_numbers.
  (*
  pub const fn poseidon2_round_numbers_128<F: PrimeField64>(
      width: usize,
      d: u64,
  ) -> Result<(usize, usize), &'static str> {
      // Start by checking that d is a valid permutation.
      if !relatively_prime_u64(d, F::ORDER_U64 - 1) {
          return Err("Invalid permutation: gcd(d, F::ORDER_U64 - 1) must be 1");
      }
  
      // Next compute the number of bits in p.
      let prime_bit_number = F::ORDER_U64.ilog2() + 1;
  
      match prime_bit_number {
          31 => match (width, d) {
              (16, 3) => Ok((8, 20)),
              (16, 5) => Ok((8, 14)),
              (16, 7) => Ok((8, 13)),
              (16, 9) => Ok((8, 13)),
              (16, 11) => Ok((8, 13)),
              (24, 3) => Ok((8, 23)),
              (24, 5) => Ok((8, 22)),
              (24, 7) => Ok((8, 21)),
              (24, 9) => Ok((8, 21)),
              (24, 11) => Ok((8, 21)),
              _ => Err("The given pair of width and D has not been checked for these fields"),
          },
          64 => match (width, d) {
              (8, 3) => Ok((8, 41)),
              (8, 5) => Ok((8, 27)),
              (8, 7) => Ok((8, 22)),
              (8, 9) => Ok((8, 19)),
              (8, 11) => Ok((8, 17)),
              (12, 3) => Ok((8, 42)),
              (12, 5) => Ok((8, 27)),
              (12, 7) => Ok((8, 22)),
              (12, 9) => Ok((8, 20)),
              (12, 11) => Ok((8, 18)),
              (16, 3) => Ok((8, 42)),
              (16, 5) => Ok((8, 27)),
              (16, 7) => Ok((8, 22)),
              (16, 9) => Ok((8, 20)),
              (16, 11) => Ok((8, 18)),
              _ => Err("The given pair of width and D has not been checked for these fields"),
          },
          _ => Err("The optimal parameters for that size of prime have not been computed."),
      }
  }
  *)
  Definition poseidon2_round_numbers_128
      (ε : list Value.t)
      (τ : list Ty.t)
      (α : list Value.t)
      : M :=
    match ε, τ, α with
    | [], [ F ], [ width; d ] =>
      ltac:(M.monadic
        (let width := M.alloc (| width |) in
        let d := M.alloc (| d |) in
        M.catch_return
          (Ty.apply
            (Ty.path "core::result::Result")
            []
            [
              Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
              Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
            ]) (|
          ltac:(M.monadic
            (M.read (|
              let~ _ : Ty.apply (Ty.path "*") [] [ Ty.tuple [] ] :=
                M.match_operator (|
                  Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                  M.alloc (| Value.Tuple [] |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ :=
                          M.use
                            (M.alloc (|
                              UnOp.not (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  M.get_function (| "p3_util::relatively_prime_u64", [], [] |),
                                  [
                                    M.read (| d |);
                                    M.call_closure (|
                                      Ty.path "u64",
                                      BinOp.Wrap.sub,
                                      [
                                        M.read (|
                                          get_constant (|
                                            "p3_field::field::PrimeField64::ORDER_U64",
                                            Ty.path "u64"
                                          |)
                                        |);
                                        Value.Integer IntegerKind.U64 1
                                      ]
                                    |)
                                  ]
                                |)
                              |)
                            |)) in
                        let _ := is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                        M.alloc (|
                          M.never_to_any (|
                            M.read (|
                              M.return_ (|
                                Value.StructTuple
                                  "core::result::Result::Err"
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        mk_str (|
                                          "Invalid permutation: gcd(d, F::ORDER_U64 - 1) must be 1"
                                        |)
                                      |)
                                    |)
                                  ]
                              |)
                            |)
                          |)
                        |)));
                    fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                  ]
                |) in
              let~ prime_bit_number : Ty.apply (Ty.path "*") [] [ Ty.path "u32" ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.path "u32",
                    BinOp.Wrap.add,
                    [
                      M.call_closure (|
                        Ty.path "u32",
                        M.get_associated_function (| Ty.path "u64", "ilog2", [], [] |),
                        [
                          M.read (|
                            get_constant (|
                              "p3_field::field::PrimeField64::ORDER_U64",
                              Ty.path "u64"
                            |)
                          |)
                        ]
                      |);
                      Value.Integer IntegerKind.U32 1
                    ]
                  |)
                |) in
              M.match_operator (|
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "core::result::Result")
                      []
                      [
                        Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
                        Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                      ]
                  ],
                prime_bit_number,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let _ :=
                        is_constant_or_break_match (|
                          M.read (| γ |),
                          Value.Integer IntegerKind.U32 31
                        |) in
                      M.match_operator (|
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
                                Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                              ]
                          ],
                        M.alloc (| Value.Tuple [ M.read (| width |); M.read (| d |) ] |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 3
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 20
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 5
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 14
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 7
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 13
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 9
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 13
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 11
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 13
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 24
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 3
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 23
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 24
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 5
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 22
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 24
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 7
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 21
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 24
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 9
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 21
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 24
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 11
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 21
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Err"
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        mk_str (|
                                          "The given pair of width and D has not been checked for these fields"
                                        |)
                                      |)
                                    |)
                                  ]
                              |)))
                        ]
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let _ :=
                        is_constant_or_break_match (|
                          M.read (| γ |),
                          Value.Integer IntegerKind.U32 64
                        |) in
                      M.match_operator (|
                        Ty.apply
                          (Ty.path "*")
                          []
                          [
                            Ty.apply
                              (Ty.path "core::result::Result")
                              []
                              [
                                Ty.tuple [ Ty.path "usize"; Ty.path "usize" ];
                                Ty.apply (Ty.path "&") [] [ Ty.path "str" ]
                              ]
                          ],
                        M.alloc (| Value.Tuple [ M.read (| width |); M.read (| d |) ] |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 8
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 3
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 41
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 8
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 5
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 27
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 8
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 7
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 22
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 8
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 9
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 19
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 8
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 11
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 17
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 12
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 3
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 42
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 12
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 5
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 27
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 12
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 7
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 22
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 12
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 9
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 20
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 12
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 11
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 18
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 3
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 42
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 5
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 27
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 7
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 22
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 9
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 20
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_0 |),
                                  Value.Integer IntegerKind.Usize 16
                                |) in
                              let _ :=
                                is_constant_or_break_match (|
                                  M.read (| γ0_1 |),
                                  Value.Integer IntegerKind.U64 11
                                |) in
                              M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Ok"
                                  [
                                    Value.Tuple
                                      [
                                        Value.Integer IntegerKind.Usize 8;
                                        Value.Integer IntegerKind.Usize 18
                                      ]
                                  ]
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (M.alloc (|
                                Value.StructTuple
                                  "core::result::Result::Err"
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        mk_str (|
                                          "The given pair of width and D has not been checked for these fields"
                                        |)
                                      |)
                                    |)
                                  ]
                              |)))
                        ]
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (M.alloc (|
                        Value.StructTuple
                          "core::result::Result::Err"
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (|
                                mk_str (|
                                  "The optimal parameters for that size of prime have not been computed."
                                |)
                              |)
                            |)
                          ]
                      |)))
                ]
              |)
            |)))
        |)))
    | _, _, _ => M.impossible "wrong number of arguments"
    end.
  
  Global Instance Instance_IsFunction_poseidon2_round_numbers_128 :
    M.IsFunction.C
      "p3_poseidon2::round_numbers::poseidon2_round_numbers_128"
      poseidon2_round_numbers_128.
  Admitted.
  Global Typeclasses Opaque poseidon2_round_numbers_128.
End round_numbers.
