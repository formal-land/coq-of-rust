(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module interpreter_action.
  Module create_inputs.
    (* StructRecord
      {
        name := "CreateInputs";
        ty_params := [];
        fields :=
          [
            ("caller", Ty.path "alloy_primitives::bits::address::Address");
            ("scheme", Ty.path "revm_primitives::env::CreateScheme");
            ("value", Ty.path "ruint::Uint");
            ("init_code", Ty.path "alloy_primitives::bytes_::Bytes");
            ("gas_limit", Ty.path "u64")
          ];
      } *)
    
    Module Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      (* Clone *)
      Definition clone (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "revm_interpreter::interpreter_action::create_inputs::CreateInputs"
              [
                ("caller",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "alloy_primitives::bits::address::Address",
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "caller"
                      |)
                    ]
                  |));
                ("scheme",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "revm_primitives::env::CreateScheme",
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "scheme"
                      |)
                    ]
                  |));
                ("value",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "ruint::Uint",
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "value"
                      |)
                    ]
                  |));
                ("init_code",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "alloy_primitives::bytes_::Bytes",
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "init_code"
                      |)
                    ]
                  |));
                ("gas_limit",
                  M.call_closure (|
                    M.get_trait_method (| "core::clone::Clone", Ty.path "u64", [], "clone", [] |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "gas_limit"
                      |)
                    ]
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      (* Debug *)
      Definition fmt (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field5_finish",
                []
              |),
              [
                M.read (| f |);
                M.read (| Value.String "CreateInputs" |);
                M.read (| Value.String "caller" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                    "caller"
                  |));
                M.read (| Value.String "scheme" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                    "scheme"
                  |));
                M.read (| Value.String "value" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                    "value"
                  |));
                M.read (| Value.String "init_code" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.SubPointer.get_struct_record_field (|
                    M.read (| self |),
                    "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                    "init_code"
                  |));
                M.read (| Value.String "gas_limit" |);
                (* Unsize *)
                M.pointer_coercion
                  (M.alloc (|
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                      "gas_limit"
                    |)
                  |))
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralPartialEq"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [].
    End Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_core_cmp_PartialEq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      (* PartialEq *)
      Definition eq (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; other ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let other := M.alloc (| other |) in
            LogicalOp.and (|
              LogicalOp.and (|
                LogicalOp.and (|
                  LogicalOp.and (|
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::cmp::PartialEq",
                        Ty.path "alloy_primitives::bits::address::Address",
                        [ Ty.path "alloy_primitives::bits::address::Address" ],
                        "eq",
                        []
                      |),
                      [
                        M.SubPointer.get_struct_record_field (|
                          M.read (| self |),
                          "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                          "caller"
                        |);
                        M.SubPointer.get_struct_record_field (|
                          M.read (| other |),
                          "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                          "caller"
                        |)
                      ]
                    |),
                    ltac:(M.monadic
                      (M.call_closure (|
                        M.get_trait_method (|
                          "core::cmp::PartialEq",
                          Ty.path "revm_primitives::env::CreateScheme",
                          [ Ty.path "revm_primitives::env::CreateScheme" ],
                          "eq",
                          []
                        |),
                        [
                          M.SubPointer.get_struct_record_field (|
                            M.read (| self |),
                            "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                            "scheme"
                          |);
                          M.SubPointer.get_struct_record_field (|
                            M.read (| other |),
                            "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                            "scheme"
                          |)
                        ]
                      |)))
                  |),
                  ltac:(M.monadic
                    (M.call_closure (|
                      M.get_trait_method (|
                        "core::cmp::PartialEq",
                        Ty.path "ruint::Uint",
                        [ Ty.path "ruint::Uint" ],
                        "eq",
                        []
                      |),
                      [
                        M.SubPointer.get_struct_record_field (|
                          M.read (| self |),
                          "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                          "value"
                        |);
                        M.SubPointer.get_struct_record_field (|
                          M.read (| other |),
                          "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                          "value"
                        |)
                      ]
                    |)))
                |),
                ltac:(M.monadic
                  (M.call_closure (|
                    M.get_trait_method (|
                      "core::cmp::PartialEq",
                      Ty.path "alloy_primitives::bytes_::Bytes",
                      [ Ty.path "alloy_primitives::bytes_::Bytes" ],
                      "eq",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "init_code"
                      |);
                      M.SubPointer.get_struct_record_field (|
                        M.read (| other |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "init_code"
                      |)
                    ]
                  |)))
              |),
              ltac:(M.monadic
                (BinOp.Pure.eq
                  (M.read (|
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                      "gas_limit"
                    |)
                  |))
                  (M.read (|
                    M.SubPointer.get_struct_record_field (|
                      M.read (| other |),
                      "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                      "gas_limit"
                    |)
                  |))))
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::PartialEq"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("eq", InstanceField.Method eq) ].
    End Impl_core_cmp_PartialEq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_core_marker_StructuralEq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralEq"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [].
    End Impl_core_marker_StructuralEq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      (* Eq *)
      Definition assert_receiver_is_total_eq (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Value.DeclaredButUndefined,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (M.match_operator (|
                        Value.DeclaredButUndefined,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (M.match_operator (|
                                Value.DeclaredButUndefined,
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Value.DeclaredButUndefined,
                                        [
                                          fun γ =>
                                            ltac:(M.monadic
                                              (M.match_operator (|
                                                Value.DeclaredButUndefined,
                                                [
                                                  fun γ =>
                                                    ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                                                ]
                                              |)))
                                        ]
                                      |)))
                                ]
                              |)))
                        ]
                      |)))
                ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::Eq"
          Self
          (* Trait polymorphic types *) []
          (* Instance *)
          [ ("assert_receiver_is_total_eq", InstanceField.Method assert_receiver_is_total_eq) ].
    End Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_core_hash_Hash_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      (* Hash *)
      Definition hash (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [ __H ], [ self; state ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let state := M.alloc (| state |) in
            M.read (|
              let~ _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::hash::Hash",
                      Ty.path "alloy_primitives::bits::address::Address",
                      [],
                      "hash",
                      [ __H ]
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "caller"
                      |);
                      M.read (| state |)
                    ]
                  |)
                |) in
              let~ _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::hash::Hash",
                      Ty.path "revm_primitives::env::CreateScheme",
                      [],
                      "hash",
                      [ __H ]
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "scheme"
                      |);
                      M.read (| state |)
                    ]
                  |)
                |) in
              let~ _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::hash::Hash",
                      Ty.path "ruint::Uint",
                      [],
                      "hash",
                      [ __H ]
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "value"
                      |);
                      M.read (| state |)
                    ]
                  |)
                |) in
              let~ _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::hash::Hash",
                      Ty.path "alloy_primitives::bytes_::Bytes",
                      [],
                      "hash",
                      [ __H ]
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                        "init_code"
                      |);
                      M.read (| state |)
                    ]
                  |)
                |) in
              M.alloc (|
                M.call_closure (|
                  M.get_trait_method (| "core::hash::Hash", Ty.path "u64", [], "hash", [ __H ] |),
                  [
                    M.SubPointer.get_struct_record_field (|
                      M.read (| self |),
                      "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                      "gas_limit"
                    |);
                    M.read (| state |)
                  ]
                |)
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::hash::Hash"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("hash", InstanceField.Method hash) ].
    End Impl_core_hash_Hash_for_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
    
    Module Impl_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs".
      
      (*
          pub fn new(tx_env: &TxEnv, gas_limit: u64) -> Option<Self> {
              let TransactTo::Create = tx_env.transact_to else {
                  return None;
              };
      
              Some(CreateInputs {
                  caller: tx_env.caller,
                  scheme: CreateScheme::Create,
                  value: tx_env.value,
                  init_code: tx_env.data.clone(),
                  gas_limit,
              })
          }
      *)
      Definition new (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ tx_env; gas_limit ] =>
          ltac:(M.monadic
            (let tx_env := M.alloc (| tx_env |) in
            let gas_limit := M.alloc (| gas_limit |) in
            M.read (|
              M.match_operator (|
                M.SubPointer.get_struct_record_field (|
                  M.read (| tx_env |),
                  "revm_primitives::env::TxEnv",
                  "transact_to"
                |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let _ :=
                        M.is_struct_tuple (| γ, "revm_primitives::env::TransactTo::Create" |) in
                      M.alloc (|
                        Value.StructTuple
                          "core::option::Option::Some"
                          [
                            Value.StructRecord
                              "revm_interpreter::interpreter_action::create_inputs::CreateInputs"
                              [
                                ("caller",
                                  M.read (|
                                    M.SubPointer.get_struct_record_field (|
                                      M.read (| tx_env |),
                                      "revm_primitives::env::TxEnv",
                                      "caller"
                                    |)
                                  |));
                                ("scheme",
                                  Value.StructTuple
                                    "revm_primitives::env::CreateScheme::Create"
                                    []);
                                ("value",
                                  M.read (|
                                    M.SubPointer.get_struct_record_field (|
                                      M.read (| tx_env |),
                                      "revm_primitives::env::TxEnv",
                                      "value"
                                    |)
                                  |));
                                ("init_code",
                                  M.call_closure (|
                                    M.get_trait_method (|
                                      "core::clone::Clone",
                                      Ty.path "alloy_primitives::bytes_::Bytes",
                                      [],
                                      "clone",
                                      []
                                    |),
                                    [
                                      M.SubPointer.get_struct_record_field (|
                                        M.read (| tx_env |),
                                        "revm_primitives::env::TxEnv",
                                        "data"
                                      |)
                                    ]
                                  |));
                                ("gas_limit", M.read (| gas_limit |))
                              ]
                          ]
                      |)))
                ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_new : M.IsAssociatedFunction Self "new" new.
      
      (*
          pub fn new_boxed(tx_env: &TxEnv, gas_limit: u64) -> Option<Box<Self>> {
              Self::new(tx_env, gas_limit).map(Box::new)
          }
      *)
      Definition new_boxed (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ tx_env; gas_limit ] =>
          ltac:(M.monadic
            (let tx_env := M.alloc (| tx_env |) in
            let gas_limit := M.alloc (| gas_limit |) in
            M.call_closure (|
              M.get_associated_function (|
                Ty.apply
                  (Ty.path "core::option::Option")
                  [ Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs" ],
                "map",
                [
                  Ty.apply
                    (Ty.path "alloc::boxed::Box")
                    [
                      Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs";
                      Ty.path "alloc::alloc::Global"
                    ];
                  Ty.function
                    [ Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs" ]
                    (Ty.apply
                      (Ty.path "alloc::boxed::Box")
                      [
                        Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs";
                        Ty.path "alloc::alloc::Global"
                      ])
                ]
              |),
              [
                M.call_closure (|
                  M.get_associated_function (|
                    Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                    "new",
                    []
                  |),
                  [ M.read (| tx_env |); M.read (| gas_limit |) ]
                |);
                M.get_associated_function (|
                  Ty.apply
                    (Ty.path "alloc::boxed::Box")
                    [
                      Ty.path "revm_interpreter::interpreter_action::create_inputs::CreateInputs";
                      Ty.path "alloc::alloc::Global"
                    ],
                  "new",
                  []
                |)
              ]
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_new_boxed : M.IsAssociatedFunction Self "new_boxed" new_boxed.
      
      (*
          pub fn created_address(&self, nonce: u64) -> Address {
              match self.scheme {
                  CreateScheme::Create => self.caller.create(nonce),
                  CreateScheme::Create2 { salt } => self
                      .caller
                      .create2_from_code(salt.to_be_bytes(), &self.init_code),
              }
          }
      *)
      Definition created_address (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; nonce ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let nonce := M.alloc (| nonce |) in
            M.read (|
              M.match_operator (|
                M.SubPointer.get_struct_record_field (|
                  M.read (| self |),
                  "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                  "scheme"
                |),
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let _ :=
                        M.is_struct_tuple (| γ, "revm_primitives::env::CreateScheme::Create" |) in
                      M.alloc (|
                        M.call_closure (|
                          M.get_associated_function (|
                            Ty.path "alloy_primitives::bits::address::Address",
                            "create",
                            []
                          |),
                          [
                            M.SubPointer.get_struct_record_field (|
                              M.read (| self |),
                              "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                              "caller"
                            |);
                            M.read (| nonce |)
                          ]
                        |)
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let γ0_0 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_primitives::env::CreateScheme::Create2",
                          "salt"
                        |) in
                      let salt := M.copy (| γ0_0 |) in
                      M.alloc (|
                        M.call_closure (|
                          M.get_associated_function (|
                            Ty.path "alloy_primitives::bits::address::Address",
                            "create2_from_code",
                            [
                              Ty.apply (Ty.path "array") [ Ty.path "u8" ];
                              Ty.apply (Ty.path "&") [ Ty.path "alloy_primitives::bytes_::Bytes" ]
                            ]
                          |),
                          [
                            M.SubPointer.get_struct_record_field (|
                              M.read (| self |),
                              "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                              "caller"
                            |);
                            M.call_closure (|
                              M.get_associated_function (|
                                Ty.path "ruint::Uint",
                                "to_be_bytes",
                                []
                              |),
                              [ salt ]
                            |);
                            M.SubPointer.get_struct_record_field (|
                              M.read (| self |),
                              "revm_interpreter::interpreter_action::create_inputs::CreateInputs",
                              "init_code"
                            |)
                          ]
                        |)
                      |)))
                ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_created_address :
        M.IsAssociatedFunction Self "created_address" created_address.
    End Impl_revm_interpreter_interpreter_action_create_inputs_CreateInputs.
  End create_inputs.
End interpreter_action.
