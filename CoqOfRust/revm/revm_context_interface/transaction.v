(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module transaction.
  (* Trait *)
  (* Empty module 'TransactionError' *)
  
  (* Trait *)
  Module Transaction.
    Definition legacy (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.never_to_any (|
            M.call_closure (|
              Ty.path "never",
              M.get_function (| "core::panicking::panic_fmt", [], [] |),
              [
                M.call_closure (|
                  Ty.path "core::fmt::Arguments",
                  M.get_associated_function (|
                    Ty.path "core::fmt::Arguments",
                    "new_v1",
                    [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.Usize 0 ],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Value.Array
                              [ M.read (| Value.String "not implemented: legacy tx not supported" |)
                              ]
                          |)
                        |)
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "array")
                                [ Value.Integer IntegerKind.Usize 0 ]
                                [ Ty.path "core::fmt::rt::Argument" ],
                              M.get_associated_function (|
                                Ty.path "core::fmt::rt::Argument",
                                "none",
                                [],
                                []
                              |),
                              []
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_legacy :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "legacy" legacy.
    Definition eip2930 (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.never_to_any (|
            M.call_closure (|
              Ty.path "never",
              M.get_function (| "core::panicking::panic_fmt", [], [] |),
              [
                M.call_closure (|
                  Ty.path "core::fmt::Arguments",
                  M.get_associated_function (|
                    Ty.path "core::fmt::Arguments",
                    "new_v1",
                    [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.Usize 0 ],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Value.Array
                              [
                                M.read (|
                                  Value.String "not implemented: Eip2930 tx not supported"
                                |)
                              ]
                          |)
                        |)
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "array")
                                [ Value.Integer IntegerKind.Usize 0 ]
                                [ Ty.path "core::fmt::rt::Argument" ],
                              M.get_associated_function (|
                                Ty.path "core::fmt::rt::Argument",
                                "none",
                                [],
                                []
                              |),
                              []
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_eip2930 :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "eip2930" eip2930.
    Definition eip1559 (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.never_to_any (|
            M.call_closure (|
              Ty.path "never",
              M.get_function (| "core::panicking::panic_fmt", [], [] |),
              [
                M.call_closure (|
                  Ty.path "core::fmt::Arguments",
                  M.get_associated_function (|
                    Ty.path "core::fmt::Arguments",
                    "new_v1",
                    [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.Usize 0 ],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Value.Array
                              [
                                M.read (|
                                  Value.String "not implemented: Eip1559 tx not supported"
                                |)
                              ]
                          |)
                        |)
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "array")
                                [ Value.Integer IntegerKind.Usize 0 ]
                                [ Ty.path "core::fmt::rt::Argument" ],
                              M.get_associated_function (|
                                Ty.path "core::fmt::rt::Argument",
                                "none",
                                [],
                                []
                              |),
                              []
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_eip1559 :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "eip1559" eip1559.
    Definition eip4844 (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.never_to_any (|
            M.call_closure (|
              Ty.path "never",
              M.get_function (| "core::panicking::panic_fmt", [], [] |),
              [
                M.call_closure (|
                  Ty.path "core::fmt::Arguments",
                  M.get_associated_function (|
                    Ty.path "core::fmt::Arguments",
                    "new_v1",
                    [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.Usize 0 ],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Value.Array
                              [
                                M.read (|
                                  Value.String "not implemented: Eip4844 tx not supported"
                                |)
                              ]
                          |)
                        |)
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "array")
                                [ Value.Integer IntegerKind.Usize 0 ]
                                [ Ty.path "core::fmt::rt::Argument" ],
                              M.get_associated_function (|
                                Ty.path "core::fmt::rt::Argument",
                                "none",
                                [],
                                []
                              |),
                              []
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_eip4844 :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "eip4844" eip4844.
    Definition eip7702 (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.never_to_any (|
            M.call_closure (|
              Ty.path "never",
              M.get_function (| "core::panicking::panic_fmt", [], [] |),
              [
                M.call_closure (|
                  Ty.path "core::fmt::Arguments",
                  M.get_associated_function (|
                    Ty.path "core::fmt::Arguments",
                    "new_v1",
                    [ Value.Integer IntegerKind.Usize 1; Value.Integer IntegerKind.Usize 0 ],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            Value.Array
                              [
                                M.read (|
                                  Value.String "not implemented: Eip7702 tx not supported"
                                |)
                              ]
                          |)
                        |)
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.alloc (|
                            M.call_closure (|
                              Ty.apply
                                (Ty.path "array")
                                [ Value.Integer IntegerKind.Usize 0 ]
                                [ Ty.path "core::fmt::rt::Argument" ],
                              M.get_associated_function (|
                                Ty.path "core::fmt::rt::Argument",
                                "none",
                                [],
                                []
                              |),
                              []
                            |)
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_eip7702 :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "eip7702" eip7702.
    Definition common_fields
        (Self : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.borrow (|
            Pointer.Kind.Ref,
            M.deref (|
              M.borrow (|
                Pointer.Kind.Ref,
                M.deref (|
                  M.read (|
                    M.match_operator (|
                      M.alloc (|
                        M.call_closure (|
                          Ty.path
                            "revm_context_interface::transaction::transaction_type::TransactionType",
                          M.get_trait_method (|
                            "core::convert::Into",
                            Ty.associated_in_trait
                              "revm_context_interface::transaction::Transaction"
                              []
                              []
                              Self
                              "TransactionType",
                            [],
                            [
                              Ty.path
                                "revm_context_interface::transaction::transaction_type::TransactionType"
                            ],
                            "into",
                            [],
                            []
                          |),
                          [
                            M.call_closure (|
                              Ty.associated_in_trait
                                "revm_context_interface::transaction::Transaction"
                                []
                                []
                                Self
                                "TransactionType",
                              M.get_trait_method (|
                                "revm_context_interface::transaction::Transaction",
                                Self,
                                [],
                                [],
                                "tx_type",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                            |)
                          ]
                        |)
                      |),
                      [
                        fun γ =>
                          ltac:(M.monadic
                            (let _ :=
                              M.is_struct_tuple (|
                                γ,
                                "revm_context_interface::transaction::transaction_type::TransactionType::Legacy"
                              |) in
                            M.alloc (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Legacy"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "legacy",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let _ :=
                              M.is_struct_tuple (|
                                γ,
                                "revm_context_interface::transaction::transaction_type::TransactionType::Eip2930"
                              |) in
                            M.alloc (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Eip2930"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "eip2930",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let _ :=
                              M.is_struct_tuple (|
                                γ,
                                "revm_context_interface::transaction::transaction_type::TransactionType::Eip1559"
                              |) in
                            M.alloc (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Eip1559"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "eip1559",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let _ :=
                              M.is_struct_tuple (|
                                γ,
                                "revm_context_interface::transaction::transaction_type::TransactionType::Eip4844"
                              |) in
                            M.alloc (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Eip4844"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "eip4844",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let _ :=
                              M.is_struct_tuple (|
                                γ,
                                "revm_context_interface::transaction::transaction_type::TransactionType::Eip7702"
                              |) in
                            M.alloc (|
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Eip7702"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "eip7702",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)));
                        fun γ =>
                          ltac:(M.monadic
                            (let _ :=
                              M.is_struct_tuple (|
                                γ,
                                "revm_context_interface::transaction::transaction_type::TransactionType::Custom"
                              |) in
                            M.alloc (|
                              M.never_to_any (|
                                M.call_closure (|
                                  Ty.path "never",
                                  M.get_function (| "core::panicking::panic_fmt", [], [] |),
                                  [
                                    M.call_closure (|
                                      Ty.path "core::fmt::Arguments",
                                      M.get_associated_function (|
                                        Ty.path "core::fmt::Arguments",
                                        "new_v1",
                                        [
                                          Value.Integer IntegerKind.Usize 1;
                                          Value.Integer IntegerKind.Usize 0
                                        ],
                                        []
                                      |),
                                      [
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                Value.Array
                                                  [
                                                    M.read (|
                                                      Value.String
                                                        "not implemented: Custom tx not supported"
                                                    |)
                                                  ]
                                              |)
                                            |)
                                          |)
                                        |);
                                        M.borrow (|
                                          Pointer.Kind.Ref,
                                          M.deref (|
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.alloc (|
                                                M.call_closure (|
                                                  Ty.apply
                                                    (Ty.path "array")
                                                    [ Value.Integer IntegerKind.Usize 0 ]
                                                    [ Ty.path "core::fmt::rt::Argument" ],
                                                  M.get_associated_function (|
                                                    Ty.path "core::fmt::rt::Argument",
                                                    "none",
                                                    [],
                                                    []
                                                  |),
                                                  []
                                                |)
                                              |)
                                            |)
                                          |)
                                        |)
                                      ]
                                    |)
                                  ]
                                |)
                              |)
                            |)))
                      ]
                    |)
                  |)
                |)
              |)
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_common_fields :
      M.IsProvidedMethod
        "revm_context_interface::transaction::Transaction"
        "common_fields"
        common_fields.
    Definition max_fee (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.read (|
            M.match_operator (|
              M.alloc (|
                M.call_closure (|
                  Ty.path "revm_context_interface::transaction::transaction_type::TransactionType",
                  M.get_trait_method (|
                    "core::convert::Into",
                    Ty.associated_in_trait
                      "revm_context_interface::transaction::Transaction"
                      []
                      []
                      Self
                      "TransactionType",
                    [],
                    [
                      Ty.path
                        "revm_context_interface::transaction::transaction_type::TransactionType"
                    ],
                    "into",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        Self
                        "TransactionType",
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        Self,
                        [],
                        [],
                        "tx_type",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  ]
                |)
              |),
              [
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Legacy"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "u128",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::legacy::LegacyTx",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Legacy",
                          [],
                          [],
                          "gas_price",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Legacy"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "legacy",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip2930"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "u128",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::eip2930::Eip2930Tx",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Eip2930",
                          [],
                          [],
                          "gas_price",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip2930"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "eip2930",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip1559"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "u128",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Eip1559",
                          [],
                          [],
                          "max_fee_per_gas",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip1559"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "eip1559",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip4844"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "u128",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Eip4844",
                          [],
                          [],
                          "max_fee_per_gas",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip4844"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "eip4844",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip7702"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "u128",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Eip7702",
                          [],
                          [],
                          "max_fee_per_gas",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip7702"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "eip7702",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Custom"
                      |) in
                    M.alloc (|
                      M.never_to_any (|
                        M.call_closure (|
                          Ty.path "never",
                          M.get_function (| "core::panicking::panic_fmt", [], [] |),
                          [
                            M.call_closure (|
                              Ty.path "core::fmt::Arguments",
                              M.get_associated_function (|
                                Ty.path "core::fmt::Arguments",
                                "new_v1",
                                [
                                  Value.Integer IntegerKind.Usize 1;
                                  Value.Integer IntegerKind.Usize 0
                                ],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Value.Array
                                          [
                                            M.read (|
                                              Value.String
                                                "not implemented: Custom tx not supported"
                                            |)
                                          ]
                                      |)
                                    |)
                                  |)
                                |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "array")
                                            [ Value.Integer IntegerKind.Usize 0 ]
                                            [ Ty.path "core::fmt::rt::Argument" ],
                                          M.get_associated_function (|
                                            Ty.path "core::fmt::rt::Argument",
                                            "none",
                                            [],
                                            []
                                          |),
                                          []
                                        |)
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |)
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_max_fee :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "max_fee" max_fee.
    Definition effective_gas_price
        (Self : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      match ε, τ, α with
      | [], [], [ self; base_fee ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let base_fee := M.alloc (| base_fee |) in
          M.catch_return (|
            ltac:(M.monadic
              (M.read (|
                let~ tx_type :
                    Ty.path
                      "revm_context_interface::transaction::transaction_type::TransactionType" :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path
                        "revm_context_interface::transaction::transaction_type::TransactionType",
                      M.get_trait_method (|
                        "core::convert::Into",
                        Ty.associated_in_trait
                          "revm_context_interface::transaction::Transaction"
                          []
                          []
                          Self
                          "TransactionType",
                        [],
                        [
                          Ty.path
                            "revm_context_interface::transaction::transaction_type::TransactionType"
                        ],
                        "into",
                        [],
                        []
                      |),
                      [
                        M.call_closure (|
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "TransactionType",
                          M.get_trait_method (|
                            "revm_context_interface::transaction::Transaction",
                            Self,
                            [],
                            [],
                            "tx_type",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      ]
                    |)
                  |) in
                M.match_operator (|
                  M.match_operator (|
                    tx_type,
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let _ :=
                            M.is_struct_tuple (|
                              γ,
                              "revm_context_interface::transaction::transaction_type::TransactionType::Legacy"
                            |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                M.return_ (|
                                  M.call_closure (|
                                    Ty.path "u128",
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::legacy::LegacyTx",
                                      Ty.associated_in_trait
                                        "revm_context_interface::transaction::Transaction"
                                        []
                                        []
                                        Self
                                        "Legacy",
                                      [],
                                      [],
                                      "gas_price",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (|
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "revm_context_interface::transaction::Transaction"
                                                  []
                                                  []
                                                  Self
                                                  "Legacy"
                                              ],
                                            M.get_trait_method (|
                                              "revm_context_interface::transaction::Transaction",
                                              Self,
                                              [],
                                              [],
                                              "legacy",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| self |) |)
                                              |)
                                            ]
                                          |)
                                        |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let _ :=
                            M.is_struct_tuple (|
                              γ,
                              "revm_context_interface::transaction::transaction_type::TransactionType::Eip2930"
                            |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (|
                                M.return_ (|
                                  M.call_closure (|
                                    Ty.path "u128",
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::eip2930::Eip2930Tx",
                                      Ty.associated_in_trait
                                        "revm_context_interface::transaction::Transaction"
                                        []
                                        []
                                        Self
                                        "Eip2930",
                                      [],
                                      [],
                                      "gas_price",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (|
                                          M.call_closure (|
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [
                                                Ty.associated_in_trait
                                                  "revm_context_interface::transaction::Transaction"
                                                  []
                                                  []
                                                  Self
                                                  "Eip2930"
                                              ],
                                            M.get_trait_method (|
                                              "revm_context_interface::transaction::Transaction",
                                              Self,
                                              [],
                                              [],
                                              "eip2930",
                                              [],
                                              []
                                            |),
                                            [
                                              M.borrow (|
                                                Pointer.Kind.Ref,
                                                M.deref (| M.read (| self |) |)
                                              |)
                                            ]
                                          |)
                                        |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            |)
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let _ :=
                            M.is_struct_tuple (|
                              γ,
                              "revm_context_interface::transaction::transaction_type::TransactionType::Eip1559"
                            |) in
                          M.alloc (|
                            Value.Tuple
                              [
                                M.call_closure (|
                                  Ty.path "u128",
                                  M.get_trait_method (|
                                    "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip1559",
                                    [],
                                    [],
                                    "max_fee_per_gas",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "revm_context_interface::transaction::Transaction"
                                                []
                                                []
                                                Self
                                                "Eip1559"
                                            ],
                                          M.get_trait_method (|
                                            "revm_context_interface::transaction::Transaction",
                                            Self,
                                            [],
                                            [],
                                            "eip1559",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.path "u128",
                                  M.get_trait_method (|
                                    "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip1559",
                                    [],
                                    [],
                                    "max_priority_fee_per_gas",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "revm_context_interface::transaction::Transaction"
                                                []
                                                []
                                                Self
                                                "Eip1559"
                                            ],
                                          M.get_trait_method (|
                                            "revm_context_interface::transaction::Transaction",
                                            Self,
                                            [],
                                            [],
                                            "eip1559",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |)
                              ]
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let _ :=
                            M.is_struct_tuple (|
                              γ,
                              "revm_context_interface::transaction::transaction_type::TransactionType::Eip4844"
                            |) in
                          M.alloc (|
                            Value.Tuple
                              [
                                M.call_closure (|
                                  Ty.path "u128",
                                  M.get_trait_method (|
                                    "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip4844",
                                    [],
                                    [],
                                    "max_fee_per_gas",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "revm_context_interface::transaction::Transaction"
                                                []
                                                []
                                                Self
                                                "Eip4844"
                                            ],
                                          M.get_trait_method (|
                                            "revm_context_interface::transaction::Transaction",
                                            Self,
                                            [],
                                            [],
                                            "eip4844",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.path "u128",
                                  M.get_trait_method (|
                                    "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip4844",
                                    [],
                                    [],
                                    "max_priority_fee_per_gas",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "revm_context_interface::transaction::Transaction"
                                                []
                                                []
                                                Self
                                                "Eip4844"
                                            ],
                                          M.get_trait_method (|
                                            "revm_context_interface::transaction::Transaction",
                                            Self,
                                            [],
                                            [],
                                            "eip4844",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |)
                              ]
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let _ :=
                            M.is_struct_tuple (|
                              γ,
                              "revm_context_interface::transaction::transaction_type::TransactionType::Eip7702"
                            |) in
                          M.alloc (|
                            Value.Tuple
                              [
                                M.call_closure (|
                                  Ty.path "u128",
                                  M.get_trait_method (|
                                    "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip7702",
                                    [],
                                    [],
                                    "max_fee_per_gas",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "revm_context_interface::transaction::Transaction"
                                                []
                                                []
                                                Self
                                                "Eip7702"
                                            ],
                                          M.get_trait_method (|
                                            "revm_context_interface::transaction::Transaction",
                                            Self,
                                            [],
                                            [],
                                            "eip7702",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |);
                                M.call_closure (|
                                  Ty.path "u128",
                                  M.get_trait_method (|
                                    "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip7702",
                                    [],
                                    [],
                                    "max_priority_fee_per_gas",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.deref (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.associated_in_trait
                                                "revm_context_interface::transaction::Transaction"
                                                []
                                                []
                                                Self
                                                "Eip7702"
                                            ],
                                          M.get_trait_method (|
                                            "revm_context_interface::transaction::Transaction",
                                            Self,
                                            [],
                                            [],
                                            "eip7702",
                                            [],
                                            []
                                          |),
                                          [
                                            M.borrow (|
                                              Pointer.Kind.Ref,
                                              M.deref (| M.read (| self |) |)
                                            |)
                                          ]
                                        |)
                                      |)
                                    |)
                                  ]
                                |)
                              ]
                          |)));
                      fun γ =>
                        ltac:(M.monadic
                          (let _ :=
                            M.is_struct_tuple (|
                              γ,
                              "revm_context_interface::transaction::transaction_type::TransactionType::Custom"
                            |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.call_closure (|
                                Ty.path "never",
                                M.get_function (| "core::panicking::panic_fmt", [], [] |),
                                [
                                  M.call_closure (|
                                    Ty.path "core::fmt::Arguments",
                                    M.get_associated_function (|
                                      Ty.path "core::fmt::Arguments",
                                      "new_v1",
                                      [
                                        Value.Integer IntegerKind.Usize 1;
                                        Value.Integer IntegerKind.Usize 0
                                      ],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (|
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.alloc (|
                                              Value.Array
                                                [
                                                  M.read (|
                                                    Value.String
                                                      "not implemented: Custom tx not supported"
                                                  |)
                                                ]
                                            |)
                                          |)
                                        |)
                                      |);
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (|
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.alloc (|
                                              M.call_closure (|
                                                Ty.apply
                                                  (Ty.path "array")
                                                  [ Value.Integer IntegerKind.Usize 0 ]
                                                  [ Ty.path "core::fmt::rt::Argument" ],
                                                M.get_associated_function (|
                                                  Ty.path "core::fmt::rt::Argument",
                                                  "none",
                                                  [],
                                                  []
                                                |),
                                                []
                                              |)
                                            |)
                                          |)
                                        |)
                                      |)
                                    ]
                                  |)
                                ]
                              |)
                            |)
                          |)))
                    ]
                  |),
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                        let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                        let max_fee := M.copy (| γ0_0 |) in
                        let max_priority_fee := M.copy (| γ0_1 |) in
                        M.alloc (|
                          M.call_closure (|
                            Ty.path "u128",
                            M.get_function (| "core::cmp::min", [], [ Ty.path "u128" ] |),
                            [
                              M.read (| max_fee |);
                              M.call_closure (|
                                Ty.path "u128",
                                M.get_associated_function (|
                                  Ty.path "u128",
                                  "saturating_add",
                                  [],
                                  []
                                |),
                                [ M.read (| base_fee |); M.read (| max_priority_fee |) ]
                              |)
                            ]
                          |)
                        |)))
                  ]
                |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_effective_gas_price :
      M.IsProvidedMethod
        "revm_context_interface::transaction::Transaction"
        "effective_gas_price"
        effective_gas_price.
    Definition kind (Self : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.read (|
            let~ tx_type :
                Ty.path "revm_context_interface::transaction::transaction_type::TransactionType" :=
              M.alloc (|
                M.call_closure (|
                  Ty.path "revm_context_interface::transaction::transaction_type::TransactionType",
                  M.get_trait_method (|
                    "core::convert::Into",
                    Ty.associated_in_trait
                      "revm_context_interface::transaction::Transaction"
                      []
                      []
                      Self
                      "TransactionType",
                    [],
                    [
                      Ty.path
                        "revm_context_interface::transaction::transaction_type::TransactionType"
                    ],
                    "into",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        Self
                        "TransactionType",
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        Self,
                        [],
                        [],
                        "tx_type",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  ]
                |)
              |) in
            M.match_operator (|
              tx_type,
              [
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Legacy"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "alloy_primitives::common::TxKind",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::legacy::LegacyTx",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Legacy",
                          [],
                          [],
                          "kind",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Legacy"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "legacy",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip2930"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "alloy_primitives::common::TxKind",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::eip2930::Eip2930Tx",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Eip2930",
                          [],
                          [],
                          "kind",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip2930"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "eip2930",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip1559"
                      |) in
                    M.alloc (|
                      M.call_closure (|
                        Ty.path "alloy_primitives::common::TxKind",
                        M.get_trait_method (|
                          "revm_context_interface::transaction::eip1559::Eip1559Tx",
                          Ty.associated_in_trait
                            "revm_context_interface::transaction::Transaction"
                            []
                            []
                            Self
                            "Eip1559",
                          [],
                          [],
                          "kind",
                          [],
                          []
                        |),
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "Eip1559"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::Transaction",
                                  Self,
                                  [],
                                  [],
                                  "eip1559",
                                  [],
                                  []
                                |),
                                [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                              |)
                            |)
                          |)
                        ]
                      |)
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip4844"
                      |) in
                    M.alloc (|
                      Value.StructTuple
                        "alloy_primitives::common::TxKind::Call"
                        [
                          M.call_closure (|
                            Ty.path "alloy_primitives::bits::address::Address",
                            M.get_trait_method (|
                              "revm_context_interface::transaction::eip4844::Eip4844Tx",
                              Ty.associated_in_trait
                                "revm_context_interface::transaction::Transaction"
                                []
                                []
                                Self
                                "Eip4844",
                              [],
                              [],
                              "destination",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Eip4844"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "eip4844",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            ]
                          |)
                        ]
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip7702"
                      |) in
                    M.alloc (|
                      Value.StructTuple
                        "alloy_primitives::common::TxKind::Call"
                        [
                          M.call_closure (|
                            Ty.path "alloy_primitives::bits::address::Address",
                            M.get_trait_method (|
                              "revm_context_interface::transaction::eip7702::Eip7702Tx",
                              Ty.associated_in_trait
                                "revm_context_interface::transaction::Transaction"
                                []
                                []
                                Self
                                "Eip7702",
                              [],
                              [],
                              "destination",
                              [],
                              []
                            |),
                            [
                              M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (|
                                  M.call_closure (|
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [
                                        Ty.associated_in_trait
                                          "revm_context_interface::transaction::Transaction"
                                          []
                                          []
                                          Self
                                          "Eip7702"
                                      ],
                                    M.get_trait_method (|
                                      "revm_context_interface::transaction::Transaction",
                                      Self,
                                      [],
                                      [],
                                      "eip7702",
                                      [],
                                      []
                                    |),
                                    [
                                      M.borrow (|
                                        Pointer.Kind.Ref,
                                        M.deref (| M.read (| self |) |)
                                      |)
                                    ]
                                  |)
                                |)
                              |)
                            ]
                          |)
                        ]
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Custom"
                      |) in
                    M.alloc (|
                      M.never_to_any (|
                        M.call_closure (|
                          Ty.path "never",
                          M.get_function (| "core::panicking::panic_fmt", [], [] |),
                          [
                            M.call_closure (|
                              Ty.path "core::fmt::Arguments",
                              M.get_associated_function (|
                                Ty.path "core::fmt::Arguments",
                                "new_v1",
                                [
                                  Value.Integer IntegerKind.Usize 1;
                                  Value.Integer IntegerKind.Usize 0
                                ],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Value.Array
                                          [
                                            M.read (|
                                              Value.String
                                                "not implemented: Custom tx not supported"
                                            |)
                                          ]
                                      |)
                                    |)
                                  |)
                                |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "array")
                                            [ Value.Integer IntegerKind.Usize 0 ]
                                            [ Ty.path "core::fmt::rt::Argument" ],
                                          M.get_associated_function (|
                                            Ty.path "core::fmt::rt::Argument",
                                            "none",
                                            [],
                                            []
                                          |),
                                          []
                                        |)
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |)
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_kind :
      M.IsProvidedMethod "revm_context_interface::transaction::Transaction" "kind" kind.
    Definition access_list
        (Self : Ty.t)
        (ε : list Value.t)
        (τ : list Ty.t)
        (α : list Value.t)
        : M :=
      match ε, τ, α with
      | [], [], [ self ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          M.read (|
            let~ tx_type :
                Ty.path "revm_context_interface::transaction::transaction_type::TransactionType" :=
              M.alloc (|
                M.call_closure (|
                  Ty.path "revm_context_interface::transaction::transaction_type::TransactionType",
                  M.get_trait_method (|
                    "core::convert::Into",
                    Ty.associated_in_trait
                      "revm_context_interface::transaction::Transaction"
                      []
                      []
                      Self
                      "TransactionType",
                    [],
                    [
                      Ty.path
                        "revm_context_interface::transaction::transaction_type::TransactionType"
                    ],
                    "into",
                    [],
                    []
                  |),
                  [
                    M.call_closure (|
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        Self
                        "TransactionType",
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        Self,
                        [],
                        [],
                        "tx_type",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  ]
                |)
              |) in
            M.match_operator (|
              tx_type,
              [
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Legacy"
                      |) in
                    M.alloc (| Value.StructTuple "core::option::Option::None" [] |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip2930"
                      |) in
                    M.alloc (|
                      Value.StructTuple
                        "core::option::Option::Some"
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "AccessList"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::eip2930::Eip2930Tx",
                                  Ty.associated_in_trait
                                    "revm_context_interface::transaction::Transaction"
                                    []
                                    []
                                    Self
                                    "Eip2930",
                                  [],
                                  [],
                                  "access_list",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "revm_context_interface::transaction::Transaction"
                                              []
                                              []
                                              Self
                                              "Eip2930"
                                          ],
                                        M.get_trait_method (|
                                          "revm_context_interface::transaction::Transaction",
                                          Self,
                                          [],
                                          [],
                                          "eip2930",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| self |) |)
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            |)
                          |)
                        ]
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip1559"
                      |) in
                    M.alloc (|
                      Value.StructTuple
                        "core::option::Option::Some"
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "AccessList"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                  Ty.associated_in_trait
                                    "revm_context_interface::transaction::Transaction"
                                    []
                                    []
                                    Self
                                    "Eip1559",
                                  [],
                                  [],
                                  "access_list",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "revm_context_interface::transaction::Transaction"
                                              []
                                              []
                                              Self
                                              "Eip1559"
                                          ],
                                        M.get_trait_method (|
                                          "revm_context_interface::transaction::Transaction",
                                          Self,
                                          [],
                                          [],
                                          "eip1559",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| self |) |)
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            |)
                          |)
                        ]
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip4844"
                      |) in
                    M.alloc (|
                      Value.StructTuple
                        "core::option::Option::Some"
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "AccessList"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                  Ty.associated_in_trait
                                    "revm_context_interface::transaction::Transaction"
                                    []
                                    []
                                    Self
                                    "Eip4844",
                                  [],
                                  [],
                                  "access_list",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "revm_context_interface::transaction::Transaction"
                                              []
                                              []
                                              Self
                                              "Eip4844"
                                          ],
                                        M.get_trait_method (|
                                          "revm_context_interface::transaction::Transaction",
                                          Self,
                                          [],
                                          [],
                                          "eip4844",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| self |) |)
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            |)
                          |)
                        ]
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Eip7702"
                      |) in
                    M.alloc (|
                      Value.StructTuple
                        "core::option::Option::Some"
                        [
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.deref (|
                              M.call_closure (|
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.associated_in_trait
                                      "revm_context_interface::transaction::Transaction"
                                      []
                                      []
                                      Self
                                      "AccessList"
                                  ],
                                M.get_trait_method (|
                                  "revm_context_interface::transaction::eip1559::Eip1559CommonTxFields",
                                  Ty.associated_in_trait
                                    "revm_context_interface::transaction::Transaction"
                                    []
                                    []
                                    Self
                                    "Eip7702",
                                  [],
                                  [],
                                  "access_list",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.call_closure (|
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [
                                            Ty.associated_in_trait
                                              "revm_context_interface::transaction::Transaction"
                                              []
                                              []
                                              Self
                                              "Eip7702"
                                          ],
                                        M.get_trait_method (|
                                          "revm_context_interface::transaction::Transaction",
                                          Self,
                                          [],
                                          [],
                                          "eip7702",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (|
                                            Pointer.Kind.Ref,
                                            M.deref (| M.read (| self |) |)
                                          |)
                                        ]
                                      |)
                                    |)
                                  |)
                                ]
                              |)
                            |)
                          |)
                        ]
                    |)));
                fun γ =>
                  ltac:(M.monadic
                    (let _ :=
                      M.is_struct_tuple (|
                        γ,
                        "revm_context_interface::transaction::transaction_type::TransactionType::Custom"
                      |) in
                    M.alloc (|
                      M.never_to_any (|
                        M.call_closure (|
                          Ty.path "never",
                          M.get_function (| "core::panicking::panic_fmt", [], [] |),
                          [
                            M.call_closure (|
                              Ty.path "core::fmt::Arguments",
                              M.get_associated_function (|
                                Ty.path "core::fmt::Arguments",
                                "new_v1",
                                [
                                  Value.Integer IntegerKind.Usize 1;
                                  Value.Integer IntegerKind.Usize 0
                                ],
                                []
                              |),
                              [
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        Value.Array
                                          [
                                            M.read (|
                                              Value.String
                                                "not implemented: Custom tx not supported"
                                            |)
                                          ]
                                      |)
                                    |)
                                  |)
                                |);
                                M.borrow (|
                                  Pointer.Kind.Ref,
                                  M.deref (|
                                    M.borrow (|
                                      Pointer.Kind.Ref,
                                      M.alloc (|
                                        M.call_closure (|
                                          Ty.apply
                                            (Ty.path "array")
                                            [ Value.Integer IntegerKind.Usize 0 ]
                                            [ Ty.path "core::fmt::rt::Argument" ],
                                          M.get_associated_function (|
                                            Ty.path "core::fmt::rt::Argument",
                                            "none",
                                            [],
                                            []
                                          |),
                                          []
                                        |)
                                      |)
                                    |)
                                  |)
                                |)
                              ]
                            |)
                          ]
                        |)
                      |)
                    |)))
              ]
            |)
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom ProvidedMethod_access_list :
      M.IsProvidedMethod
        "revm_context_interface::transaction::Transaction"
        "access_list"
        access_list.
  End Transaction.
  
  Module underscore.
    Module Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_ref__T.
      Definition Self (T : Ty.t) : Ty.t := Ty.apply (Ty.path "&") [] [ T ].
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionError (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionError".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionType (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionType".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _AccessList (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "AccessList".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Legacy (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Legacy".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip2930 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip2930".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip1559 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip1559".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip4844 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip4844".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip7702 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip7702".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition tx_type (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.associated_in_trait
                "revm_context_interface::transaction::Transaction"
                []
                []
                T
                "TransactionType",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "tx_type",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition legacy (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Legacy"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "legacy",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip2930 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip2930"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip2930",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip1559 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip1559"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip1559",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip4844 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip4844"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip4844",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip7702 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip7702"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip7702",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition common_fields
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.dyn
                            [
                              ("revm_context_interface::transaction::common::CommonTxFields::Trait",
                                [])
                            ]
                        ],
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        T,
                        [],
                        [],
                        "common_fields",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                        |)
                      ]
                    |)
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition max_fee (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "max_fee",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition effective_gas_price
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self; base_fee ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let base_fee := M.alloc (| base_fee |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "effective_gas_price",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |);
                M.read (| base_fee |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition kind (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "alloy_primitives::common::TxKind",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "kind",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition access_list (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "AccessList"
                    ]
                ],
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "access_list",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::Transaction"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [
            ("TransactionError", InstanceField.Ty (_TransactionError T));
            ("TransactionType", InstanceField.Ty (_TransactionType T));
            ("AccessList", InstanceField.Ty (_AccessList T));
            ("Legacy", InstanceField.Ty (_Legacy T));
            ("Eip2930", InstanceField.Ty (_Eip2930 T));
            ("Eip1559", InstanceField.Ty (_Eip1559 T));
            ("Eip4844", InstanceField.Ty (_Eip4844 T));
            ("Eip7702", InstanceField.Ty (_Eip7702 T));
            ("tx_type", InstanceField.Method (tx_type T));
            ("legacy", InstanceField.Method (legacy T));
            ("eip2930", InstanceField.Method (eip2930 T));
            ("eip1559", InstanceField.Method (eip1559 T));
            ("eip4844", InstanceField.Method (eip4844 T));
            ("eip7702", InstanceField.Method (eip7702 T));
            ("common_fields", InstanceField.Method (common_fields T));
            ("max_fee", InstanceField.Method (max_fee T));
            ("effective_gas_price", InstanceField.Method (effective_gas_price T));
            ("kind", InstanceField.Method (kind T));
            ("access_list", InstanceField.Method (access_list T))
          ].
    End Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_ref__T.
    Module Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_alloc_boxed_Box_T_alloc_alloc_Global.
      Definition Self (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "alloc::boxed::Box") [] [ T; Ty.path "alloc::alloc::Global" ].
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionError (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionError".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionType (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionType".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _AccessList (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "AccessList".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Legacy (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Legacy".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip2930 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip2930".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip1559 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip1559".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip4844 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip4844".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip7702 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip7702".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition tx_type (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.associated_in_trait
                "revm_context_interface::transaction::Transaction"
                []
                []
                T
                "TransactionType",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "tx_type",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition legacy (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Legacy"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "legacy",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip2930 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip2930"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip2930",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip1559 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip1559"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip1559",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip4844 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip4844"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip4844",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip7702 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip7702"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip7702",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition common_fields
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.dyn
                            [
                              ("revm_context_interface::transaction::common::CommonTxFields::Trait",
                                [])
                            ]
                        ],
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        T,
                        [],
                        [],
                        "common_fields",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                        |)
                      ]
                    |)
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition max_fee (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "max_fee",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition effective_gas_price
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self; base_fee ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let base_fee := M.alloc (| base_fee |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "effective_gas_price",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |);
                M.read (| base_fee |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition kind (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "alloy_primitives::common::TxKind",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "kind",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition access_list (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "AccessList"
                    ]
                ],
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "access_list",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::Transaction"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [
            ("TransactionError", InstanceField.Ty (_TransactionError T));
            ("TransactionType", InstanceField.Ty (_TransactionType T));
            ("AccessList", InstanceField.Ty (_AccessList T));
            ("Legacy", InstanceField.Ty (_Legacy T));
            ("Eip2930", InstanceField.Ty (_Eip2930 T));
            ("Eip1559", InstanceField.Ty (_Eip1559 T));
            ("Eip4844", InstanceField.Ty (_Eip4844 T));
            ("Eip7702", InstanceField.Ty (_Eip7702 T));
            ("tx_type", InstanceField.Method (tx_type T));
            ("legacy", InstanceField.Method (legacy T));
            ("eip2930", InstanceField.Method (eip2930 T));
            ("eip1559", InstanceField.Method (eip1559 T));
            ("eip4844", InstanceField.Method (eip4844 T));
            ("eip7702", InstanceField.Method (eip7702 T));
            ("common_fields", InstanceField.Method (common_fields T));
            ("max_fee", InstanceField.Method (max_fee T));
            ("effective_gas_price", InstanceField.Method (effective_gas_price T));
            ("kind", InstanceField.Method (kind T));
            ("access_list", InstanceField.Method (access_list T))
          ].
    End Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_alloc_boxed_Box_T_alloc_alloc_Global.
    Module Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_alloc_sync_Arc_T_alloc_alloc_Global.
      Definition Self (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "alloc::sync::Arc") [] [ T; Ty.path "alloc::alloc::Global" ].
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionError (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionError".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionType (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionType".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _AccessList (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "AccessList".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Legacy (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Legacy".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip2930 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip2930".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip1559 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip1559".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip4844 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip4844".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip7702 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip7702".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition tx_type (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.associated_in_trait
                "revm_context_interface::transaction::Transaction"
                []
                []
                T
                "TransactionType",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "tx_type",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition legacy (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Legacy"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "legacy",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip2930 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip2930"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip2930",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip1559 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip1559"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip1559",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip4844 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip4844"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip4844",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip7702 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip7702"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip7702",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition common_fields
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.dyn
                            [
                              ("revm_context_interface::transaction::common::CommonTxFields::Trait",
                                [])
                            ]
                        ],
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        T,
                        [],
                        [],
                        "common_fields",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply (Ty.path "&") [] [ T ],
                              M.get_trait_method (|
                                "core::ops::deref::Deref",
                                Ty.apply
                                  (Ty.path "alloc::sync::Arc")
                                  []
                                  [ T; Ty.path "alloc::alloc::Global" ],
                                [],
                                [],
                                "deref",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                            |)
                          |)
                        |)
                      ]
                    |)
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition max_fee (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "max_fee",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition effective_gas_price
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self; base_fee ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let base_fee := M.alloc (| base_fee |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "effective_gas_price",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |);
                M.read (| base_fee |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition kind (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "alloy_primitives::common::TxKind",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "kind",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition access_list (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "AccessList"
                    ]
                ],
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "access_list",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply
                          (Ty.path "alloc::sync::Arc")
                          []
                          [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::Transaction"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [
            ("TransactionError", InstanceField.Ty (_TransactionError T));
            ("TransactionType", InstanceField.Ty (_TransactionType T));
            ("AccessList", InstanceField.Ty (_AccessList T));
            ("Legacy", InstanceField.Ty (_Legacy T));
            ("Eip2930", InstanceField.Ty (_Eip2930 T));
            ("Eip1559", InstanceField.Ty (_Eip1559 T));
            ("Eip4844", InstanceField.Ty (_Eip4844 T));
            ("Eip7702", InstanceField.Ty (_Eip7702 T));
            ("tx_type", InstanceField.Method (tx_type T));
            ("legacy", InstanceField.Method (legacy T));
            ("eip2930", InstanceField.Method (eip2930 T));
            ("eip1559", InstanceField.Method (eip1559 T));
            ("eip4844", InstanceField.Method (eip4844 T));
            ("eip7702", InstanceField.Method (eip7702 T));
            ("common_fields", InstanceField.Method (common_fields T));
            ("max_fee", InstanceField.Method (max_fee T));
            ("effective_gas_price", InstanceField.Method (effective_gas_price T));
            ("kind", InstanceField.Method (kind T));
            ("access_list", InstanceField.Method (access_list T))
          ].
    End Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_alloc_sync_Arc_T_alloc_alloc_Global.
    Module Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_alloc_rc_Rc_T_alloc_alloc_Global.
      Definition Self (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "alloc::rc::Rc") [] [ T; Ty.path "alloc::alloc::Global" ].
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionError (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionError".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _TransactionType (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "TransactionType".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _AccessList (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::Transaction"
          []
          []
          T
          "AccessList".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Legacy (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Legacy".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip2930 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip2930".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip1559 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip1559".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip4844 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip4844".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition _Eip7702 (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait "revm_context_interface::transaction::Transaction" [] [] T "Eip7702".
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition tx_type (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.associated_in_trait
                "revm_context_interface::transaction::Transaction"
                []
                []
                T
                "TransactionType",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "tx_type",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply (Ty.path "alloc::rc::Rc") [] [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition legacy (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Legacy"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "legacy",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::rc::Rc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip2930 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip2930"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip2930",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::rc::Rc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip1559 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip1559"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip1559",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::rc::Rc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip4844 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip4844"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip4844",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::rc::Rc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition eip7702 (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "Eip7702"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::Transaction",
                    T,
                    [],
                    [],
                    "eip7702",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::rc::Rc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition common_fields
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply
                        (Ty.path "&")
                        []
                        [
                          Ty.dyn
                            [
                              ("revm_context_interface::transaction::common::CommonTxFields::Trait",
                                [])
                            ]
                        ],
                      M.get_trait_method (|
                        "revm_context_interface::transaction::Transaction",
                        T,
                        [],
                        [],
                        "common_fields",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.deref (|
                            M.call_closure (|
                              Ty.apply (Ty.path "&") [] [ T ],
                              M.get_trait_method (|
                                "core::ops::deref::Deref",
                                Ty.apply
                                  (Ty.path "alloc::rc::Rc")
                                  []
                                  [ T; Ty.path "alloc::alloc::Global" ],
                                [],
                                [],
                                "deref",
                                [],
                                []
                              |),
                              [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                            |)
                          |)
                        |)
                      ]
                    |)
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition max_fee (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "max_fee",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply (Ty.path "alloc::rc::Rc") [] [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition effective_gas_price
          (T : Ty.t)
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self; base_fee ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let base_fee := M.alloc (| base_fee |) in
            M.call_closure (|
              Ty.path "u128",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "effective_gas_price",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply (Ty.path "alloc::rc::Rc") [] [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |);
                M.read (| base_fee |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition kind (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.path "alloy_primitives::common::TxKind",
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "kind",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply (Ty.path "alloc::rc::Rc") [] [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      (* #[auto_impl(&, Box, Arc, Rc)] *)
      Definition access_list (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::Transaction"
                        []
                        []
                        T
                        "AccessList"
                    ]
                ],
              M.get_trait_method (|
                "revm_context_interface::transaction::Transaction",
                T,
                [],
                [],
                "access_list",
                [],
                []
              |),
              [
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (|
                    M.call_closure (|
                      Ty.apply (Ty.path "&") [] [ T ],
                      M.get_trait_method (|
                        "core::ops::deref::Deref",
                        Ty.apply (Ty.path "alloc::rc::Rc") [] [ T; Ty.path "alloc::alloc::Global" ],
                        [],
                        [],
                        "deref",
                        [],
                        []
                      |),
                      [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                    |)
                  |)
                |)
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::Transaction"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [
            ("TransactionError", InstanceField.Ty (_TransactionError T));
            ("TransactionType", InstanceField.Ty (_TransactionType T));
            ("AccessList", InstanceField.Ty (_AccessList T));
            ("Legacy", InstanceField.Ty (_Legacy T));
            ("Eip2930", InstanceField.Ty (_Eip2930 T));
            ("Eip1559", InstanceField.Ty (_Eip1559 T));
            ("Eip4844", InstanceField.Ty (_Eip4844 T));
            ("Eip7702", InstanceField.Ty (_Eip7702 T));
            ("tx_type", InstanceField.Method (tx_type T));
            ("legacy", InstanceField.Method (legacy T));
            ("eip2930", InstanceField.Method (eip2930 T));
            ("eip1559", InstanceField.Method (eip1559 T));
            ("eip4844", InstanceField.Method (eip4844 T));
            ("eip7702", InstanceField.Method (eip7702 T));
            ("common_fields", InstanceField.Method (common_fields T));
            ("max_fee", InstanceField.Method (max_fee T));
            ("effective_gas_price", InstanceField.Method (effective_gas_price T));
            ("kind", InstanceField.Method (kind T));
            ("access_list", InstanceField.Method (access_list T))
          ].
    End Impl_revm_context_interface_transaction_Transaction_where_revm_context_interface_transaction_Transaction_T_where_core_marker_Sized_T_for_alloc_rc_Rc_T_alloc_alloc_Global.
    Module Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_ref__T.
      Definition Self (T : Ty.t) : Ty.t := Ty.apply (Ty.path "&") [] [ T ].
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition _Transaction (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::TransactionGetter"
          []
          []
          T
          "Transaction".
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition tx (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::TransactionGetter"
                        []
                        []
                        T
                        "Transaction"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::TransactionGetter",
                    T,
                    [],
                    [],
                    "tx",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::TransactionGetter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [ ("Transaction", InstanceField.Ty (_Transaction T)); ("tx", InstanceField.Method (tx T))
          ].
    End Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_ref__T.
    Module Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_ref_mut_T.
      Definition Self (T : Ty.t) : Ty.t := Ty.apply (Ty.path "&mut") [] [ T ].
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition _Transaction (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::TransactionGetter"
          []
          []
          T
          "Transaction".
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition tx (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::TransactionGetter"
                        []
                        []
                        T
                        "Transaction"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::TransactionGetter",
                    T,
                    [],
                    [],
                    "tx",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::TransactionGetter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [ ("Transaction", InstanceField.Ty (_Transaction T)); ("tx", InstanceField.Method (tx T))
          ].
    End Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_ref_mut_T.
    Module Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_alloc_boxed_Box_T_alloc_alloc_Global.
      Definition Self (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "alloc::boxed::Box") [] [ T; Ty.path "alloc::alloc::Global" ].
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition _Transaction (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::TransactionGetter"
          []
          []
          T
          "Transaction".
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition tx (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::TransactionGetter"
                        []
                        []
                        T
                        "Transaction"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::TransactionGetter",
                    T,
                    [],
                    [],
                    "tx",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::TransactionGetter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [ ("Transaction", InstanceField.Ty (_Transaction T)); ("tx", InstanceField.Method (tx T))
          ].
    End Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_alloc_boxed_Box_T_alloc_alloc_Global.
    Module Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_alloc_sync_Arc_T_alloc_alloc_Global.
      Definition Self (T : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "alloc::sync::Arc") [] [ T; Ty.path "alloc::alloc::Global" ].
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition _Transaction (T : Ty.t) : Ty.t :=
        Ty.associated_in_trait
          "revm_context_interface::transaction::TransactionGetter"
          []
          []
          T
          "Transaction".
      
      (* #[auto_impl(&, &mut, Box, Arc)] *)
      Definition tx (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self T in
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply
                    (Ty.path "&")
                    []
                    [
                      Ty.associated_in_trait
                        "revm_context_interface::transaction::TransactionGetter"
                        []
                        []
                        T
                        "Transaction"
                    ],
                  M.get_trait_method (|
                    "revm_context_interface::transaction::TransactionGetter",
                    T,
                    [],
                    [],
                    "tx",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.call_closure (|
                          Ty.apply (Ty.path "&") [] [ T ],
                          M.get_trait_method (|
                            "core::ops::deref::Deref",
                            Ty.apply
                              (Ty.path "alloc::sync::Arc")
                              []
                              [ T; Ty.path "alloc::alloc::Global" ],
                            [],
                            [],
                            "deref",
                            [],
                            []
                          |),
                          [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        forall (T : Ty.t),
        M.IsTraitInstance
          "revm_context_interface::transaction::TransactionGetter"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          (Self T)
          (* Instance *)
          [ ("Transaction", InstanceField.Ty (_Transaction T)); ("tx", InstanceField.Method (tx T))
          ].
    End Impl_revm_context_interface_transaction_TransactionGetter_where_revm_context_interface_transaction_TransactionGetter_T_where_core_marker_Sized_T_for_alloc_sync_Arc_T_alloc_alloc_Global.
  End underscore.
  
  
  
  
  (* Trait *)
  (* Empty module 'TransactionGetter' *)
  
  
  
  
  
  (* Trait *)
  (* Empty module 'TransactionSetter' *)
  
  Module Impl_revm_context_interface_transaction_TransactionSetter_where_revm_context_interface_transaction_TransactionSetter_T_for_ref_mut_T.
    Definition Self (T : Ty.t) : Ty.t := Ty.apply (Ty.path "&mut") [] [ T ].
    
    (*
        fn set_tx(&mut self, block: <Self as TransactionGetter>::Transaction) {
            ( **self).set_tx(block)
        }
    *)
    Definition set_tx (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self T in
      match ε, τ, α with
      | [], [], [ self; block ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let block := M.alloc (| block |) in
          M.call_closure (|
            Ty.tuple [],
            M.get_trait_method (|
              "revm_context_interface::transaction::TransactionSetter",
              T,
              [],
              [],
              "set_tx",
              [],
              []
            |),
            [
              M.borrow (|
                Pointer.Kind.MutRef,
                M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
              |);
              M.read (| block |)
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (T : Ty.t),
      M.IsTraitInstance
        "revm_context_interface::transaction::TransactionSetter"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self T)
        (* Instance *) [ ("set_tx", InstanceField.Method (set_tx T)) ].
  End Impl_revm_context_interface_transaction_TransactionSetter_where_revm_context_interface_transaction_TransactionSetter_T_for_ref_mut_T.
  
  Module Impl_revm_context_interface_transaction_TransactionSetter_where_revm_context_interface_transaction_TransactionSetter_T_for_alloc_boxed_Box_T_alloc_alloc_Global.
    Definition Self (T : Ty.t) : Ty.t :=
      Ty.apply (Ty.path "alloc::boxed::Box") [] [ T; Ty.path "alloc::alloc::Global" ].
    
    (*
        fn set_tx(&mut self, block: <Self as TransactionGetter>::Transaction) {
            ( **self).set_tx(block)
        }
    *)
    Definition set_tx (T : Ty.t) (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self T in
      match ε, τ, α with
      | [], [], [ self; block ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let block := M.alloc (| block |) in
          M.call_closure (|
            Ty.tuple [],
            M.get_trait_method (|
              "revm_context_interface::transaction::TransactionSetter",
              T,
              [],
              [],
              "set_tx",
              [],
              []
            |),
            [
              M.borrow (|
                Pointer.Kind.MutRef,
                M.deref (| M.read (| M.deref (| M.read (| self |) |) |) |)
              |);
              M.read (| block |)
            ]
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Axiom Implements :
      forall (T : Ty.t),
      M.IsTraitInstance
        "revm_context_interface::transaction::TransactionSetter"
        (* Trait polymorphic consts *) []
        (* Trait polymorphic types *) []
        (Self T)
        (* Instance *) [ ("set_tx", InstanceField.Method (set_tx T)) ].
  End Impl_revm_context_interface_transaction_TransactionSetter_where_revm_context_interface_transaction_TransactionSetter_T_for_alloc_boxed_Box_T_alloc_alloc_Global.
End transaction.
