(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module interpreter_action.
  Module create_outcome.
    (* StructRecord
      {
        name := "CreateOutcome";
        const_params := [];
        ty_params := [];
        fields :=
          [
            ("result", Ty.path "revm_interpreter::interpreter::InterpreterResult");
            ("address",
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [ Ty.path "alloy_primitives::bits::address::Address" ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field2_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "CreateOutcome" |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "result" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                          "result"
                        |)
                      |)
                    |)
                  |));
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "address" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.alloc (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                              "address"
                            |)
                          |)
                        |)
                      |)
                    |)
                  |))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
    
    Module Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "revm_interpreter::interpreter_action::create_outcome::CreateOutcome"
              []
              []
              [
                ("result",
                  M.call_closure (|
                    Ty.path "revm_interpreter::interpreter::InterpreterResult",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "revm_interpreter::interpreter::InterpreterResult",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                              "result"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("address",
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [ Ty.path "alloy_primitives::bits::address::Address" ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                              "address"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
    
    Module Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralPartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [].
    End Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
    
    Module Impl_core_cmp_PartialEq_revm_interpreter_interpreter_action_create_outcome_CreateOutcome_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome".
      
      (* PartialEq *)
      Definition eq (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; other ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let other := M.alloc (| other |) in
            LogicalOp.and (|
              M.call_closure (|
                Ty.path "bool",
                M.get_trait_method (|
                  "core::cmp::PartialEq",
                  Ty.path "revm_interpreter::interpreter::InterpreterResult",
                  [],
                  [ Ty.path "revm_interpreter::interpreter::InterpreterResult" ],
                  "eq",
                  [],
                  []
                |),
                [
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                      "result"
                    |)
                  |);
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| other |) |),
                      "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                      "result"
                    |)
                  |)
                ]
              |),
              ltac:(M.monadic
                (M.call_closure (|
                  Ty.path "bool",
                  M.get_trait_method (|
                    "core::cmp::PartialEq",
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                    [],
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [ Ty.path "alloy_primitives::bits::address::Address" ]
                    ],
                    "eq",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                        "address"
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| other |) |),
                        "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                        "address"
                      |)
                    |)
                  ]
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::PartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome" ]
          Self
          (* Instance *) [ ("eq", InstanceField.Method eq) ].
    End Impl_core_cmp_PartialEq_revm_interpreter_interpreter_action_create_outcome_CreateOutcome_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
    
    Module Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome".
      
      (* Eq *)
      Definition assert_receiver_is_total_eq
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                Value.DeclaredButUndefined,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (M.match_operator (|
                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                        Value.DeclaredButUndefined,
                        [ fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |))) ]
                      |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::Eq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *)
          [ ("assert_receiver_is_total_eq", InstanceField.Method assert_receiver_is_total_eq) ].
    End Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
    
    Module Impl_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::create_outcome::CreateOutcome".
      
      (*
          pub fn new(result: InterpreterResult, address: Option<Address>) -> Self {
              Self { result, address }
          }
      *)
      Definition new (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ result; address ] =>
          ltac:(M.monadic
            (let result := M.alloc (| result |) in
            let address := M.alloc (| address |) in
            Value.StructRecord
              "revm_interpreter::interpreter_action::create_outcome::CreateOutcome"
              []
              []
              [ ("result", M.read (| result |)); ("address", M.read (| address |)) ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new : M.IsAssociatedFunction.C Self "new" new.
      Admitted.
      Global Typeclasses Opaque new.
      
      (*
          pub fn instruction_result(&self) -> &InstructionResult {
              &self.result.result
          }
      *)
      Definition instruction_result (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.SubPointer.get_struct_record_field (|
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                      "result"
                    |),
                    "revm_interpreter::interpreter::InterpreterResult",
                    "result"
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_instruction_result :
        M.IsAssociatedFunction.C Self "instruction_result" instruction_result.
      Admitted.
      Global Typeclasses Opaque instruction_result.
      
      (*
          pub fn output(&self) -> &Bytes {
              &self.result.output
          }
      *)
      Definition output (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.SubPointer.get_struct_record_field (|
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                      "result"
                    |),
                    "revm_interpreter::interpreter::InterpreterResult",
                    "output"
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_output : M.IsAssociatedFunction.C Self "output" output.
      Admitted.
      Global Typeclasses Opaque output.
      
      (*
          pub fn gas(&self) -> &Gas {
              &self.result.gas
          }
      *)
      Definition gas (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.SubPointer.get_struct_record_field (|
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "revm_interpreter::interpreter_action::create_outcome::CreateOutcome",
                      "result"
                    |),
                    "revm_interpreter::interpreter::InterpreterResult",
                    "gas"
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_gas : M.IsAssociatedFunction.C Self "gas" gas.
      Admitted.
      Global Typeclasses Opaque gas.
    End Impl_revm_interpreter_interpreter_action_create_outcome_CreateOutcome.
  End create_outcome.
End interpreter_action.
