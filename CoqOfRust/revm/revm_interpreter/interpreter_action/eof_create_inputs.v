(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module interpreter_action.
  Module eof_create_inputs.
    (*
    Enum EOFCreateKind
    {
      const_params := [];
      ty_params := [];
      variants :=
        [
          {
            name := "Tx";
            item := StructRecord [ ("initdata", Ty.path "alloy_primitives::bytes_::Bytes") ];
          };
          {
            name := "Opcode";
            item :=
              StructRecord
                [
                  ("initcode", Ty.path "revm_bytecode::eof::Eof");
                  ("input", Ty.path "alloy_primitives::bytes_::Bytes");
                  ("created_address", Ty.path "alloy_primitives::bits::address::Address")
                ];
          }
        ];
    }
    *)
    
    Axiom IsDiscriminant_EOFCreateKind_Tx :
      M.IsDiscriminant
        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx"
        0.
    Axiom IsDiscriminant_EOFCreateKind_Opcode :
      M.IsDiscriminant
        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode"
        1.
    
    Module Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.read (|
              M.match_operator (|
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "core::result::Result")
                      []
                      [ Ty.tuple []; Ty.path "core::fmt::Error" ]
                  ],
                self,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx",
                          "initdata"
                        |) in
                      let __self_0 := M.alloc (| γ1_0 |) in
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::result::Result")
                            []
                            [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                          M.get_associated_function (|
                            Ty.path "core::fmt::Formatter",
                            "debug_struct_field1_finish",
                            [],
                            []
                          |),
                          [
                            M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "Tx" |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "initdata" |) |) |);
                            (* Unsize *)
                            M.pointer_coercion
                              (M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.borrow (| Pointer.Kind.Ref, __self_0 |) |)
                              |))
                          ]
                        |)
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "initcode"
                        |) in
                      let γ1_1 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "input"
                        |) in
                      let γ1_2 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "created_address"
                        |) in
                      let __self_0 := M.alloc (| γ1_0 |) in
                      let __self_1 := M.alloc (| γ1_1 |) in
                      let __self_2 := M.alloc (| γ1_2 |) in
                      M.alloc (|
                        M.call_closure (|
                          Ty.apply
                            (Ty.path "core::result::Result")
                            []
                            [ Ty.tuple []; Ty.path "core::fmt::Error" ],
                          M.get_associated_function (|
                            Ty.path "core::fmt::Formatter",
                            "debug_struct_field3_finish",
                            [],
                            []
                          |),
                          [
                            M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "Opcode" |) |) |);
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "initcode" |) |) |);
                            (* Unsize *)
                            M.pointer_coercion
                              (M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.read (| __self_0 |) |)
                              |));
                            M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "input" |) |) |);
                            (* Unsize *)
                            M.pointer_coercion
                              (M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.read (| __self_1 |) |)
                              |));
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (| mk_str (| "created_address" |) |)
                            |);
                            (* Unsize *)
                            M.pointer_coercion
                              (M.borrow (|
                                Pointer.Kind.Ref,
                                M.deref (| M.borrow (| Pointer.Kind.Ref, __self_2 |) |)
                              |))
                          ]
                        |)
                      |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    Module Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Ty.apply
                  (Ty.path "*")
                  []
                  [ Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind"
                  ],
                self,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx",
                          "initdata"
                        |) in
                      let __self_0 := M.alloc (| γ1_0 |) in
                      M.alloc (|
                        Value.StructRecord
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx"
                          [
                            ("initdata",
                              M.call_closure (|
                                Ty.path "alloy_primitives::bytes_::Bytes",
                                M.get_trait_method (|
                                  "core::clone::Clone",
                                  Ty.path "alloy_primitives::bytes_::Bytes",
                                  [],
                                  [],
                                  "clone",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (| M.read (| __self_0 |) |)
                                  |)
                                ]
                              |))
                          ]
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "initcode"
                        |) in
                      let γ1_1 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "input"
                        |) in
                      let γ1_2 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "created_address"
                        |) in
                      let __self_0 := M.alloc (| γ1_0 |) in
                      let __self_1 := M.alloc (| γ1_1 |) in
                      let __self_2 := M.alloc (| γ1_2 |) in
                      M.alloc (|
                        Value.StructRecord
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode"
                          [
                            ("initcode",
                              M.call_closure (|
                                Ty.path "revm_bytecode::eof::Eof",
                                M.get_trait_method (|
                                  "core::clone::Clone",
                                  Ty.path "revm_bytecode::eof::Eof",
                                  [],
                                  [],
                                  "clone",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (| M.read (| __self_0 |) |)
                                  |)
                                ]
                              |));
                            ("input",
                              M.call_closure (|
                                Ty.path "alloy_primitives::bytes_::Bytes",
                                M.get_trait_method (|
                                  "core::clone::Clone",
                                  Ty.path "alloy_primitives::bytes_::Bytes",
                                  [],
                                  [],
                                  "clone",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (| M.read (| __self_1 |) |)
                                  |)
                                ]
                              |));
                            ("created_address",
                              M.call_closure (|
                                Ty.path "alloy_primitives::bits::address::Address",
                                M.get_trait_method (|
                                  "core::clone::Clone",
                                  Ty.path "alloy_primitives::bits::address::Address",
                                  [],
                                  [],
                                  "clone",
                                  [],
                                  []
                                |),
                                [
                                  M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (| M.read (| __self_2 |) |)
                                  |)
                                ]
                              |))
                          ]
                      |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    Module Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralPartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [].
    End Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    Module Impl_core_cmp_PartialEq_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      (* PartialEq *)
      Definition eq (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; other ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let other := M.alloc (| other |) in
            M.read (|
              let~ __self_discr : Ty.apply (Ty.path "*") [] [ Ty.path "isize" ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.path "isize",
                    M.get_function (|
                      "core::intrinsics::discriminant_value",
                      [],
                      [
                        Ty.path
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind"
                      ]
                    |),
                    [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| self |) |) |) ]
                  |)
                |) in
              let~ __arg1_discr : Ty.apply (Ty.path "*") [] [ Ty.path "isize" ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.path "isize",
                    M.get_function (|
                      "core::intrinsics::discriminant_value",
                      [],
                      [
                        Ty.path
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind"
                      ]
                    |),
                    [ M.borrow (| Pointer.Kind.Ref, M.deref (| M.read (| other |) |) |) ]
                  |)
                |) in
              M.alloc (|
                LogicalOp.and (|
                  M.call_closure (|
                    Ty.path "bool",
                    BinOp.eq,
                    [ M.read (| __self_discr |); M.read (| __arg1_discr |) ]
                  |),
                  ltac:(M.monadic
                    (M.read (|
                      M.match_operator (|
                        Ty.apply (Ty.path "*") [] [ Ty.path "bool" ],
                        M.alloc (| Value.Tuple [ M.read (| self |); M.read (| other |) ] |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let γ0_0 := M.read (| γ0_0 |) in
                              let γ2_0 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_0,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx",
                                  "initdata"
                                |) in
                              let __self_0 := M.alloc (| γ2_0 |) in
                              let γ0_1 := M.read (| γ0_1 |) in
                              let γ2_0 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_1,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx",
                                  "initdata"
                                |) in
                              let __arg1_0 := M.alloc (| γ2_0 |) in
                              M.alloc (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  M.get_trait_method (|
                                    "core::cmp::PartialEq",
                                    Ty.apply
                                      (Ty.path "&")
                                      []
                                      [ Ty.path "alloy_primitives::bytes_::Bytes" ],
                                    [],
                                    [
                                      Ty.apply
                                        (Ty.path "&")
                                        []
                                        [ Ty.path "alloy_primitives::bytes_::Bytes" ]
                                    ],
                                    "eq",
                                    [],
                                    []
                                  |),
                                  [
                                    M.borrow (| Pointer.Kind.Ref, __self_0 |);
                                    M.borrow (| Pointer.Kind.Ref, __arg1_0 |)
                                  ]
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let γ0_0 := M.read (| γ0_0 |) in
                              let γ2_0 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_0,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                                  "initcode"
                                |) in
                              let γ2_1 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_0,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                                  "input"
                                |) in
                              let γ2_2 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_0,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                                  "created_address"
                                |) in
                              let __self_0 := M.alloc (| γ2_0 |) in
                              let __self_1 := M.alloc (| γ2_1 |) in
                              let __self_2 := M.alloc (| γ2_2 |) in
                              let γ0_1 := M.read (| γ0_1 |) in
                              let γ2_0 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_1,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                                  "initcode"
                                |) in
                              let γ2_1 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_1,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                                  "input"
                                |) in
                              let γ2_2 :=
                                M.SubPointer.get_struct_record_field (|
                                  γ0_1,
                                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                                  "created_address"
                                |) in
                              let __arg1_0 := M.alloc (| γ2_0 |) in
                              let __arg1_1 := M.alloc (| γ2_1 |) in
                              let __arg1_2 := M.alloc (| γ2_2 |) in
                              M.alloc (|
                                LogicalOp.and (|
                                  LogicalOp.and (|
                                    M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialEq",
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "revm_bytecode::eof::Eof" ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "revm_bytecode::eof::Eof" ]
                                        ],
                                        "eq",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (| Pointer.Kind.Ref, __self_0 |);
                                        M.borrow (| Pointer.Kind.Ref, __arg1_0 |)
                                      ]
                                    |),
                                    ltac:(M.monadic
                                      (M.call_closure (|
                                        Ty.path "bool",
                                        M.get_trait_method (|
                                          "core::cmp::PartialEq",
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "alloy_primitives::bytes_::Bytes" ],
                                          [],
                                          [
                                            Ty.apply
                                              (Ty.path "&")
                                              []
                                              [ Ty.path "alloy_primitives::bytes_::Bytes" ]
                                          ],
                                          "eq",
                                          [],
                                          []
                                        |),
                                        [
                                          M.borrow (| Pointer.Kind.Ref, __self_1 |);
                                          M.borrow (| Pointer.Kind.Ref, __arg1_1 |)
                                        ]
                                      |)))
                                  |),
                                  ltac:(M.monadic
                                    (M.call_closure (|
                                      Ty.path "bool",
                                      M.get_trait_method (|
                                        "core::cmp::PartialEq",
                                        Ty.apply
                                          (Ty.path "&")
                                          []
                                          [ Ty.path "alloy_primitives::bits::address::Address" ],
                                        [],
                                        [
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [ Ty.path "alloy_primitives::bits::address::Address" ]
                                        ],
                                        "eq",
                                        [],
                                        []
                                      |),
                                      [
                                        M.borrow (| Pointer.Kind.Ref, __self_2 |);
                                        M.borrow (| Pointer.Kind.Ref, __arg1_2 |)
                                      ]
                                    |)))
                                |)
                              |)));
                          fun γ =>
                            ltac:(M.monadic
                              (M.alloc (|
                                M.never_to_any (|
                                  M.call_closure (|
                                    Ty.path "never",
                                    M.get_function (| "core::intrinsics::unreachable", [], [] |),
                                    []
                                  |)
                                |)
                              |)))
                        ]
                      |)
                    |)))
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::PartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind" ]
          Self
          (* Instance *) [ ("eq", InstanceField.Method eq) ].
    End Impl_core_cmp_PartialEq_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    Module Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      (* Eq *)
      Definition assert_receiver_is_total_eq
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                Value.DeclaredButUndefined,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (M.match_operator (|
                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                        Value.DeclaredButUndefined,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (M.match_operator (|
                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                Value.DeclaredButUndefined,
                                [ fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |))) ]
                              |)))
                        ]
                      |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::Eq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *)
          [ ("assert_receiver_is_total_eq", InstanceField.Method assert_receiver_is_total_eq) ].
    End Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    Module Impl_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      (*
          pub fn created_address(&self) -> Option<&Address> {
              match self {
                  EOFCreateKind::Opcode {
                      created_address, ..
                  } => Some(created_address),
                  EOFCreateKind::Tx { .. } => None,
              }
          }
      *)
      Definition created_address (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Ty.apply
                  (Ty.path "*")
                  []
                  [
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [
                        Ty.apply
                          (Ty.path "&")
                          []
                          [ Ty.path "alloy_primitives::bits::address::Address" ]
                      ]
                  ],
                self,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_record_field (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode",
                          "created_address"
                        |) in
                      let created_address := M.alloc (| γ1_0 |) in
                      M.alloc (|
                        Value.StructTuple
                          "core::option::Option::Some"
                          [
                            M.borrow (|
                              Pointer.Kind.Ref,
                              M.deref (| M.read (| created_address |) |)
                            |)
                          ]
                      |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let _ :=
                        M.is_struct_tuple (|
                          γ,
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Tx"
                        |) in
                      M.alloc (| Value.StructTuple "core::option::Option::None" [] |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_created_address :
        M.IsAssociatedFunction.C Self "created_address" created_address.
      Admitted.
      Global Typeclasses Opaque created_address.
    End Impl_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    Module Impl_core_default_Default_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind".
      
      (*
          fn default() -> Self {
              EOFCreateKind::Opcode {
                  initcode: Eof::default(),
                  input: Bytes::default(),
                  created_address: Address::default(),
              }
          }
      *)
      Definition default (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [] =>
          ltac:(M.monadic
            (Value.StructRecord
              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode"
              [
                ("initcode",
                  M.call_closure (|
                    Ty.path "revm_bytecode::eof::Eof",
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.path "revm_bytecode::eof::Eof",
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |));
                ("input",
                  M.call_closure (|
                    Ty.path "alloy_primitives::bytes_::Bytes",
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.path "alloy_primitives::bytes_::Bytes",
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |));
                ("created_address",
                  M.call_closure (|
                    Ty.path "alloy_primitives::bits::address::Address",
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.path "alloy_primitives::bits::address::Address",
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::default::Default"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("default", InstanceField.Method default) ].
    End Impl_core_default_Default_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateKind.
    
    (* StructRecord
      {
        name := "EOFCreateInputs";
        const_params := [];
        ty_params := [];
        fields :=
          [
            ("caller", Ty.path "alloy_primitives::bits::address::Address");
            ("value",
              Ty.apply
                (Ty.path "ruint::Uint")
                [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4 ]
                []);
            ("gas_limit", Ty.path "u64");
            ("kind",
              Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind")
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field4_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "EOFCreateInputs" |) |) |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "caller" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "caller"
                        |)
                      |)
                    |)
                  |));
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "value" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "value"
                        |)
                      |)
                    |)
                  |));
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "gas_limit" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "gas_limit"
                        |)
                      |)
                    |)
                  |));
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "kind" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.alloc (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                              "kind"
                            |)
                          |)
                        |)
                      |)
                    |)
                  |))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
    
    Module Impl_core_default_Default_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      (* Default *)
      Definition default (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [] =>
          ltac:(M.monadic
            (Value.StructRecord
              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs"
              [
                ("caller",
                  M.call_closure (|
                    Ty.path "alloy_primitives::bits::address::Address",
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.path "alloy_primitives::bits::address::Address",
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |));
                ("value",
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "ruint::Uint")
                      [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4 ]
                      [],
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.apply
                        (Ty.path "ruint::Uint")
                        [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4 ]
                        [],
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |));
                ("gas_limit",
                  M.call_closure (|
                    Ty.path "u64",
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.path "u64",
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |));
                ("kind",
                  M.call_closure (|
                    Ty.path
                      "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind",
                    M.get_trait_method (|
                      "core::default::Default",
                      Ty.path
                        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind",
                      [],
                      [],
                      "default",
                      [],
                      []
                    |),
                    []
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::default::Default"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("default", InstanceField.Method default) ].
    End Impl_core_default_Default_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
    
    Module Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs"
              [
                ("caller",
                  M.call_closure (|
                    Ty.path "alloy_primitives::bits::address::Address",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "alloy_primitives::bits::address::Address",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                              "caller"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("value",
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "ruint::Uint")
                      [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4 ]
                      [],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "ruint::Uint")
                        [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4 ]
                        [],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                              "value"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("gas_limit",
                  M.call_closure (|
                    Ty.path "u64",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "u64",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                              "gas_limit"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("kind",
                  M.call_closure (|
                    Ty.path
                      "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path
                        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                              "kind"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
    
    Module Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralPartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [].
    End Impl_core_marker_StructuralPartialEq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
    
    Module Impl_core_cmp_PartialEq_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      (* PartialEq *)
      Definition eq (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; other ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let other := M.alloc (| other |) in
            LogicalOp.and (|
              LogicalOp.and (|
                LogicalOp.and (|
                  M.call_closure (|
                    Ty.path "bool",
                    M.get_trait_method (|
                      "core::cmp::PartialEq",
                      Ty.path "alloy_primitives::bits::address::Address",
                      [],
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                      "eq",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "caller"
                        |)
                      |);
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| other |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "caller"
                        |)
                      |)
                    ]
                  |),
                  ltac:(M.monadic
                    (M.call_closure (|
                      Ty.path "bool",
                      M.get_trait_method (|
                        "core::cmp::PartialEq",
                        Ty.apply
                          (Ty.path "ruint::Uint")
                          [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4 ]
                          [],
                        [],
                        [
                          Ty.apply
                            (Ty.path "ruint::Uint")
                            [ Value.Integer IntegerKind.Usize 256; Value.Integer IntegerKind.Usize 4
                            ]
                            []
                        ],
                        "eq",
                        [],
                        []
                      |),
                      [
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                            "value"
                          |)
                        |);
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| other |) |),
                            "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                            "value"
                          |)
                        |)
                      ]
                    |)))
                |),
                ltac:(M.monadic
                  (M.call_closure (|
                    Ty.path "bool",
                    BinOp.eq,
                    [
                      M.read (|
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "gas_limit"
                        |)
                      |);
                      M.read (|
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| other |) |),
                          "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                          "gas_limit"
                        |)
                      |)
                    ]
                  |)))
              |),
              ltac:(M.monadic
                (M.call_closure (|
                  Ty.path "bool",
                  M.get_trait_method (|
                    "core::cmp::PartialEq",
                    Ty.path
                      "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind",
                    [],
                    [
                      Ty.path
                        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind"
                    ],
                    "eq",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                        "kind"
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| other |) |),
                        "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                        "kind"
                      |)
                    |)
                  ]
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::PartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs" ]
          Self
          (* Instance *) [ ("eq", InstanceField.Method eq) ].
    End Impl_core_cmp_PartialEq_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
    
    Module Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      (* Eq *)
      Definition assert_receiver_is_total_eq
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                Value.DeclaredButUndefined,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (M.match_operator (|
                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                        Value.DeclaredButUndefined,
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (M.match_operator (|
                                Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                Value.DeclaredButUndefined,
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (M.match_operator (|
                                        Ty.apply (Ty.path "*") [] [ Ty.tuple [] ],
                                        Value.DeclaredButUndefined,
                                        [ fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |))) ]
                                      |)))
                                ]
                              |)))
                        ]
                      |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::Eq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *)
          [ ("assert_receiver_is_total_eq", InstanceField.Method assert_receiver_is_total_eq) ].
    End Impl_core_cmp_Eq_for_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
    
    Module Impl_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
      Definition Self : Ty.t :=
        Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs".
      
      (*
          pub fn new(caller: Address, value: U256, gas_limit: u64, kind: EOFCreateKind) -> Self {
              //let (eof_init_code, input) = Eof::decode_dangling(tx.data.clone())?;
              EOFCreateInputs {
                  caller,
                  value,
                  gas_limit,
                  kind,
              }
          }
      *)
      Definition new (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ caller; value; gas_limit; kind ] =>
          ltac:(M.monadic
            (let caller := M.alloc (| caller |) in
            let value := M.alloc (| value |) in
            let gas_limit := M.alloc (| gas_limit |) in
            let kind := M.alloc (| kind |) in
            Value.StructRecord
              "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs"
              [
                ("caller", M.read (| caller |));
                ("value", M.read (| value |));
                ("gas_limit", M.read (| gas_limit |));
                ("kind", M.read (| kind |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new : M.IsAssociatedFunction.C Self "new" new.
      Admitted.
      Global Typeclasses Opaque new.
      
      (*
          pub fn new_opcode(
              caller: Address,
              created_address: Address,
              value: U256,
              eof_init_code: Eof,
              gas_limit: u64,
              input: Bytes,
          ) -> EOFCreateInputs {
              EOFCreateInputs::new(
                  caller,
                  value,
                  gas_limit,
                  EOFCreateKind::Opcode {
                      initcode: eof_init_code,
                      input,
                      created_address,
                  },
              )
          }
      *)
      Definition new_opcode (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ caller; created_address; value; eof_init_code; gas_limit; input ] =>
          ltac:(M.monadic
            (let caller := M.alloc (| caller |) in
            let created_address := M.alloc (| created_address |) in
            let value := M.alloc (| value |) in
            let eof_init_code := M.alloc (| eof_init_code |) in
            let gas_limit := M.alloc (| gas_limit |) in
            let input := M.alloc (| input |) in
            M.call_closure (|
              Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
              M.get_associated_function (|
                Ty.path "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateInputs",
                "new",
                [],
                []
              |),
              [
                M.read (| caller |);
                M.read (| value |);
                M.read (| gas_limit |);
                Value.StructRecord
                  "revm_interpreter::interpreter_action::eof_create_inputs::EOFCreateKind::Opcode"
                  [
                    ("initcode", M.read (| eof_init_code |));
                    ("input", M.read (| input |));
                    ("created_address", M.read (| created_address |))
                  ]
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new_opcode :
        M.IsAssociatedFunction.C Self "new_opcode" new_opcode.
      Admitted.
      Global Typeclasses Opaque new_opcode.
    End Impl_revm_interpreter_interpreter_action_eof_create_inputs_EOFCreateInputs.
  End eof_create_inputs.
End interpreter_action.
