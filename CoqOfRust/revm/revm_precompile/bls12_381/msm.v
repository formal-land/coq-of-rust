(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module bls12_381.
  Module msm.
    Definition value_MSM_MULTIPLIER (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      ltac:(M.monadic (M.alloc (| Value.Integer IntegerKind.U64 1000 |))).
    
    Global Instance Instance_IsConstant_value_MSM_MULTIPLIER :
      M.IsFunction.C "revm_precompile::bls12_381::msm::MSM_MULTIPLIER" value_MSM_MULTIPLIER.
    Admitted.
    Global Typeclasses Opaque value_MSM_MULTIPLIER.
    
    Definition value_MSM_DISCOUNT_TABLE (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      ltac:(M.monadic
        (M.alloc (|
          M.alloc (|
            Value.Array
              [
                Value.Integer IntegerKind.U16 1200;
                Value.Integer IntegerKind.U16 888;
                Value.Integer IntegerKind.U16 764;
                Value.Integer IntegerKind.U16 641;
                Value.Integer IntegerKind.U16 594;
                Value.Integer IntegerKind.U16 547;
                Value.Integer IntegerKind.U16 500;
                Value.Integer IntegerKind.U16 453;
                Value.Integer IntegerKind.U16 438;
                Value.Integer IntegerKind.U16 423;
                Value.Integer IntegerKind.U16 408;
                Value.Integer IntegerKind.U16 394;
                Value.Integer IntegerKind.U16 379;
                Value.Integer IntegerKind.U16 364;
                Value.Integer IntegerKind.U16 349;
                Value.Integer IntegerKind.U16 334;
                Value.Integer IntegerKind.U16 330;
                Value.Integer IntegerKind.U16 326;
                Value.Integer IntegerKind.U16 322;
                Value.Integer IntegerKind.U16 318;
                Value.Integer IntegerKind.U16 314;
                Value.Integer IntegerKind.U16 310;
                Value.Integer IntegerKind.U16 306;
                Value.Integer IntegerKind.U16 302;
                Value.Integer IntegerKind.U16 298;
                Value.Integer IntegerKind.U16 294;
                Value.Integer IntegerKind.U16 289;
                Value.Integer IntegerKind.U16 285;
                Value.Integer IntegerKind.U16 281;
                Value.Integer IntegerKind.U16 277;
                Value.Integer IntegerKind.U16 273;
                Value.Integer IntegerKind.U16 269;
                Value.Integer IntegerKind.U16 268;
                Value.Integer IntegerKind.U16 266;
                Value.Integer IntegerKind.U16 265;
                Value.Integer IntegerKind.U16 263;
                Value.Integer IntegerKind.U16 262;
                Value.Integer IntegerKind.U16 260;
                Value.Integer IntegerKind.U16 259;
                Value.Integer IntegerKind.U16 257;
                Value.Integer IntegerKind.U16 256;
                Value.Integer IntegerKind.U16 254;
                Value.Integer IntegerKind.U16 253;
                Value.Integer IntegerKind.U16 251;
                Value.Integer IntegerKind.U16 250;
                Value.Integer IntegerKind.U16 248;
                Value.Integer IntegerKind.U16 247;
                Value.Integer IntegerKind.U16 245;
                Value.Integer IntegerKind.U16 244;
                Value.Integer IntegerKind.U16 242;
                Value.Integer IntegerKind.U16 241;
                Value.Integer IntegerKind.U16 239;
                Value.Integer IntegerKind.U16 238;
                Value.Integer IntegerKind.U16 236;
                Value.Integer IntegerKind.U16 235;
                Value.Integer IntegerKind.U16 233;
                Value.Integer IntegerKind.U16 232;
                Value.Integer IntegerKind.U16 231;
                Value.Integer IntegerKind.U16 229;
                Value.Integer IntegerKind.U16 228;
                Value.Integer IntegerKind.U16 226;
                Value.Integer IntegerKind.U16 225;
                Value.Integer IntegerKind.U16 223;
                Value.Integer IntegerKind.U16 222;
                Value.Integer IntegerKind.U16 221;
                Value.Integer IntegerKind.U16 220;
                Value.Integer IntegerKind.U16 219;
                Value.Integer IntegerKind.U16 219;
                Value.Integer IntegerKind.U16 218;
                Value.Integer IntegerKind.U16 217;
                Value.Integer IntegerKind.U16 216;
                Value.Integer IntegerKind.U16 216;
                Value.Integer IntegerKind.U16 215;
                Value.Integer IntegerKind.U16 214;
                Value.Integer IntegerKind.U16 213;
                Value.Integer IntegerKind.U16 213;
                Value.Integer IntegerKind.U16 212;
                Value.Integer IntegerKind.U16 211;
                Value.Integer IntegerKind.U16 211;
                Value.Integer IntegerKind.U16 210;
                Value.Integer IntegerKind.U16 209;
                Value.Integer IntegerKind.U16 208;
                Value.Integer IntegerKind.U16 208;
                Value.Integer IntegerKind.U16 207;
                Value.Integer IntegerKind.U16 206;
                Value.Integer IntegerKind.U16 205;
                Value.Integer IntegerKind.U16 205;
                Value.Integer IntegerKind.U16 204;
                Value.Integer IntegerKind.U16 203;
                Value.Integer IntegerKind.U16 202;
                Value.Integer IntegerKind.U16 202;
                Value.Integer IntegerKind.U16 201;
                Value.Integer IntegerKind.U16 200;
                Value.Integer IntegerKind.U16 199;
                Value.Integer IntegerKind.U16 199;
                Value.Integer IntegerKind.U16 198;
                Value.Integer IntegerKind.U16 197;
                Value.Integer IntegerKind.U16 196;
                Value.Integer IntegerKind.U16 196;
                Value.Integer IntegerKind.U16 195;
                Value.Integer IntegerKind.U16 194;
                Value.Integer IntegerKind.U16 193;
                Value.Integer IntegerKind.U16 193;
                Value.Integer IntegerKind.U16 192;
                Value.Integer IntegerKind.U16 191;
                Value.Integer IntegerKind.U16 191;
                Value.Integer IntegerKind.U16 190;
                Value.Integer IntegerKind.U16 189;
                Value.Integer IntegerKind.U16 188;
                Value.Integer IntegerKind.U16 188;
                Value.Integer IntegerKind.U16 187;
                Value.Integer IntegerKind.U16 186;
                Value.Integer IntegerKind.U16 185;
                Value.Integer IntegerKind.U16 185;
                Value.Integer IntegerKind.U16 184;
                Value.Integer IntegerKind.U16 183;
                Value.Integer IntegerKind.U16 182;
                Value.Integer IntegerKind.U16 182;
                Value.Integer IntegerKind.U16 181;
                Value.Integer IntegerKind.U16 180;
                Value.Integer IntegerKind.U16 179;
                Value.Integer IntegerKind.U16 179;
                Value.Integer IntegerKind.U16 178;
                Value.Integer IntegerKind.U16 177;
                Value.Integer IntegerKind.U16 176;
                Value.Integer IntegerKind.U16 176;
                Value.Integer IntegerKind.U16 175;
                Value.Integer IntegerKind.U16 174
              ]
          |)
        |))).
    
    Global Instance Instance_IsConstant_value_MSM_DISCOUNT_TABLE :
      M.IsFunction.C "revm_precompile::bls12_381::msm::MSM_DISCOUNT_TABLE" value_MSM_DISCOUNT_TABLE.
    Admitted.
    Global Typeclasses Opaque value_MSM_DISCOUNT_TABLE.
    
    (*
    pub(super) fn msm_required_gas(k: usize, multiplication_cost: u64) -> u64 {
        if k == 0 {
            return 0;
        }
    
        let index = core::cmp::min(k - 1, MSM_DISCOUNT_TABLE.len() - 1);
        let discount = MSM_DISCOUNT_TABLE[index] as u64;
    
        (k as u64 * discount * multiplication_cost) / MSM_MULTIPLIER
    }
    *)
    Definition msm_required_gas (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
      match ε, τ, α with
      | [], [], [ k; multiplication_cost ] =>
        ltac:(M.monadic
          (let k := M.alloc (| k |) in
          let multiplication_cost := M.alloc (| multiplication_cost |) in
          M.catch_return (|
            ltac:(M.monadic
              (M.read (|
                let~ _ : Ty.tuple [] :=
                  M.match_operator (|
                    Some (Ty.tuple []),
                    M.alloc (| Value.Tuple [] |),
                    [
                      fun γ =>
                        ltac:(M.monadic
                          (let γ :=
                            M.use
                              (M.alloc (|
                                M.call_closure (|
                                  Ty.path "bool",
                                  BinOp.eq,
                                  [ M.read (| k |); Value.Integer IntegerKind.Usize 0 ]
                                |)
                              |)) in
                          let _ :=
                            is_constant_or_break_match (| M.read (| γ |), Value.Bool true |) in
                          M.alloc (|
                            M.never_to_any (|
                              M.read (| M.return_ (| Value.Integer IntegerKind.U64 0 |) |)
                            |)
                          |)));
                      fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |)))
                    ]
                  |) in
                let~ index : Ty.path "usize" :=
                  M.alloc (|
                    M.call_closure (|
                      Ty.path "usize",
                      M.get_function (| "core::cmp::min", [], [ Ty.path "usize" ] |),
                      [
                        M.call_closure (|
                          Ty.path "usize",
                          BinOp.Wrap.sub,
                          [ M.read (| k |); Value.Integer IntegerKind.Usize 1 ]
                        |);
                        M.call_closure (|
                          Ty.path "usize",
                          BinOp.Wrap.sub,
                          [
                            M.call_closure (|
                              Ty.path "usize",
                              M.get_associated_function (|
                                Ty.apply (Ty.path "slice") [] [ Ty.path "u16" ],
                                "len",
                                [],
                                []
                              |),
                              [
                                (* Unsize *)
                                M.pointer_coercion
                                  (M.borrow (|
                                    Pointer.Kind.Ref,
                                    M.deref (|
                                      M.read (|
                                        get_constant (|
                                          "revm_precompile::bls12_381::msm::MSM_DISCOUNT_TABLE",
                                          Ty.apply
                                            (Ty.path "&")
                                            []
                                            [
                                              Ty.apply
                                                (Ty.path "array")
                                                [ Value.Integer IntegerKind.Usize 128 ]
                                                [ Ty.path "u16" ]
                                            ]
                                        |)
                                      |)
                                    |)
                                  |))
                              ]
                            |);
                            Value.Integer IntegerKind.Usize 1
                          ]
                        |)
                      ]
                    |)
                  |) in
                let~ discount : Ty.path "u64" :=
                  M.alloc (|
                    M.cast
                      (Ty.path "u64")
                      (M.read (|
                        M.SubPointer.get_array_field (|
                          M.deref (|
                            M.read (|
                              get_constant (|
                                "revm_precompile::bls12_381::msm::MSM_DISCOUNT_TABLE",
                                Ty.apply
                                  (Ty.path "&")
                                  []
                                  [
                                    Ty.apply
                                      (Ty.path "array")
                                      [ Value.Integer IntegerKind.Usize 128 ]
                                      [ Ty.path "u16" ]
                                  ]
                              |)
                            |)
                          |),
                          M.read (| index |)
                        |)
                      |))
                  |) in
                M.alloc (|
                  M.call_closure (|
                    Ty.path "u64",
                    BinOp.Wrap.div,
                    [
                      M.call_closure (|
                        Ty.path "u64",
                        BinOp.Wrap.mul,
                        [
                          M.call_closure (|
                            Ty.path "u64",
                            BinOp.Wrap.mul,
                            [ M.cast (Ty.path "u64") (M.read (| k |)); M.read (| discount |) ]
                          |);
                          M.read (| multiplication_cost |)
                        ]
                      |);
                      M.read (|
                        get_constant (|
                          "revm_precompile::bls12_381::msm::MSM_MULTIPLIER",
                          Ty.path "u64"
                        |)
                      |)
                    ]
                  |)
                |)
              |)))
          |)))
      | _, _, _ => M.impossible "wrong number of arguments"
      end.
    
    Global Instance Instance_IsFunction_msm_required_gas :
      M.IsFunction.C "revm_precompile::bls12_381::msm::msm_required_gas" msm_required_gas.
    Admitted.
    Global Typeclasses Opaque msm_required_gas.
  End msm.
End bls12_381.
