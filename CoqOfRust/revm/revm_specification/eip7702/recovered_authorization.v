(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module eip7702.
  Module recovered_authorization.
    (* StructRecord
      {
        name := "RecoveredAuthorization";
        const_params := [];
        ty_params := [];
        fields :=
          [
            ("inner", Ty.path "alloy_eip7702::auth_list::SignedAuthorization");
            ("authority",
              Ty.apply
                (Ty.path "core::option::Option")
                []
                [ Ty.path "alloy_primitives::bits::address::Address" ])
          ];
      } *)
    
    Module Impl_core_fmt_Debug_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (* Debug *)
      Definition fmt (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; f ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let f := M.alloc (| f |) in
            M.call_closure (|
              Ty.apply
                (Ty.path "core::result::Result")
                []
                [ Ty.tuple []; Ty.path "core::fmt::Error" ],
              M.get_associated_function (|
                Ty.path "core::fmt::Formatter",
                "debug_struct_field2_finish",
                [],
                []
              |),
              [
                M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| f |) |) |);
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.deref (| mk_str (| "RecoveredAuthorization" |) |)
                |);
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "inner" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.SubPointer.get_struct_record_field (|
                          M.deref (| M.read (| self |) |),
                          "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                          "inner"
                        |)
                      |)
                    |)
                  |));
                M.borrow (| Pointer.Kind.Ref, M.deref (| mk_str (| "authority" |) |) |);
                (* Unsize *)
                M.pointer_coercion
                  (M.borrow (|
                    Pointer.Kind.Ref,
                    M.deref (|
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.alloc (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                              "authority"
                            |)
                          |)
                        |)
                      |)
                    |)
                  |))
              ]
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::fmt::Debug"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("fmt", InstanceField.Method fmt) ].
    End Impl_core_fmt_Debug_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_clone_Clone_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (* Clone *)
      Definition clone (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization"
              [
                ("inner",
                  M.call_closure (|
                    Ty.path "alloy_eip7702::auth_list::SignedAuthorization",
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.path "alloy_eip7702::auth_list::SignedAuthorization",
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                              "inner"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |));
                ("authority",
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [ Ty.path "alloy_primitives::bits::address::Address" ],
                      [],
                      [],
                      "clone",
                      [],
                      []
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                              "authority"
                            |)
                          |)
                        |)
                      |)
                    ]
                  |))
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_hash_Hash_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (* Hash *)
      Definition hash (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [ __H ], [ self; state ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let state := M.alloc (| state |) in
            M.read (|
              let~ _ : Ty.tuple [] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.tuple [],
                    M.get_trait_method (|
                      "core::hash::Hash",
                      Ty.path "alloy_eip7702::auth_list::SignedAuthorization",
                      [],
                      [],
                      "hash",
                      [],
                      [ __H ]
                    |),
                    [
                      M.borrow (|
                        Pointer.Kind.Ref,
                        M.deref (|
                          M.borrow (|
                            Pointer.Kind.Ref,
                            M.SubPointer.get_struct_record_field (|
                              M.deref (| M.read (| self |) |),
                              "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                              "inner"
                            |)
                          |)
                        |)
                      |);
                      M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| state |) |) |)
                    ]
                  |)
                |) in
              M.alloc (|
                M.call_closure (|
                  Ty.tuple [],
                  M.get_trait_method (|
                    "core::hash::Hash",
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                    [],
                    [],
                    "hash",
                    [],
                    [ __H ]
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                            "authority"
                          |)
                        |)
                      |)
                    |);
                    M.borrow (| Pointer.Kind.MutRef, M.deref (| M.read (| state |) |) |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::hash::Hash"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [ ("hash", InstanceField.Method hash) ].
    End Impl_core_hash_Hash_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_cmp_Eq_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (* Eq *)
      Definition assert_receiver_is_total_eq
          (ε : list Value.t)
          (τ : list Ty.t)
          (α : list Value.t)
          : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                None,
                Value.DeclaredButUndefined,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (M.match_operator (|
                        None,
                        Value.DeclaredButUndefined,
                        [ fun γ => ltac:(M.monadic (M.alloc (| Value.Tuple [] |))) ]
                      |)))
                ]
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::Eq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *)
          [ ("assert_receiver_is_total_eq", InstanceField.Method assert_receiver_is_total_eq) ].
    End Impl_core_cmp_Eq_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_marker_StructuralPartialEq_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralPartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *) [].
    End Impl_core_marker_StructuralPartialEq_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_cmp_PartialEq_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (* PartialEq *)
      Definition eq (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self; other ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let other := M.alloc (| other |) in
            LogicalOp.and (|
              M.call_closure (|
                Ty.path "bool",
                M.get_trait_method (|
                  "core::cmp::PartialEq",
                  Ty.path "alloy_eip7702::auth_list::SignedAuthorization",
                  [],
                  [ Ty.path "alloy_eip7702::auth_list::SignedAuthorization" ],
                  "eq",
                  [],
                  []
                |),
                [
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| self |) |),
                      "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                      "inner"
                    |)
                  |);
                  M.borrow (|
                    Pointer.Kind.Ref,
                    M.SubPointer.get_struct_record_field (|
                      M.deref (| M.read (| other |) |),
                      "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                      "inner"
                    |)
                  |)
                ]
              |),
              ltac:(M.monadic
                (M.call_closure (|
                  Ty.path "bool",
                  M.get_trait_method (|
                    "core::cmp::PartialEq",
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                    [],
                    [
                      Ty.apply
                        (Ty.path "core::option::Option")
                        []
                        [ Ty.path "alloy_primitives::bits::address::Address" ]
                    ],
                    "eq",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| self |) |),
                        "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                        "authority"
                      |)
                    |);
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.SubPointer.get_struct_record_field (|
                        M.deref (| M.read (| other |) |),
                        "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                        "authority"
                      |)
                    |)
                  ]
                |)))
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::PartialEq"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *)
          [ Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization" ]
          Self
          (* Instance *) [ ("eq", InstanceField.Method eq) ].
    End Impl_core_cmp_PartialEq_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (*
          pub const fn new_unchecked(inner: SignedAuthorization, authority: Option<Address>) -> Self {
              Self { inner, authority }
          }
      *)
      Definition new_unchecked (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ inner; authority ] =>
          ltac:(M.monadic
            (let inner := M.alloc (| inner |) in
            let authority := M.alloc (| authority |) in
            Value.StructRecord
              "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization"
              [ ("inner", M.read (| inner |)); ("authority", M.read (| authority |)) ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_new_unchecked :
        M.IsAssociatedFunction.C Self "new_unchecked" new_unchecked.
      Admitted.
      Global Typeclasses Opaque new_unchecked.
      
      (*
          pub fn inner(&self) -> &SignedAuthorization {
              &self.inner
          }
      *)
      Definition inner (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.borrow (|
                  Pointer.Kind.Ref,
                  M.SubPointer.get_struct_record_field (|
                    M.deref (| M.read (| self |) |),
                    "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                    "inner"
                  |)
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_inner : M.IsAssociatedFunction.C Self "inner" inner.
      Admitted.
      Global Typeclasses Opaque inner.
      
      (*
          pub const fn authority(&self) -> Option<Address> {
              self.authority
          }
      *)
      Definition authority (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.SubPointer.get_struct_record_field (|
                M.deref (| M.read (| self |) |),
                "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                "authority"
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_authority :
        M.IsAssociatedFunction.C Self "authority" authority.
      Admitted.
      Global Typeclasses Opaque authority.
      
      (*
          pub const fn into_parts(self) -> (SignedAuthorization, Option<Address>) {
              (self.inner, self.authority)
          }
      *)
      Definition into_parts (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.Tuple
              [
                M.read (|
                  M.SubPointer.get_struct_record_field (|
                    self,
                    "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                    "inner"
                  |)
                |);
                M.read (|
                  M.SubPointer.get_struct_record_field (|
                    self,
                    "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                    "authority"
                  |)
                |)
              ]))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Global Instance AssociatedFunction_into_parts :
        M.IsAssociatedFunction.C Self "into_parts" into_parts.
      Admitted.
      Global Typeclasses Opaque into_parts.
    End Impl_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_convert_From_alloy_eip7702_auth_list_SignedAuthorization_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (*
          fn from(signed_auth: SignedAuthorization) -> Self {
              let authority = signed_auth.recover_authority().ok();
              Self::new_unchecked(signed_auth, authority)
          }
      *)
      Definition from (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ signed_auth ] =>
          ltac:(M.monadic
            (let signed_auth := M.alloc (| signed_auth |) in
            M.read (|
              let~ authority :
                  Ty.apply
                    (Ty.path "core::option::Option")
                    []
                    [ Ty.path "alloy_primitives::bits::address::Address" ] :=
                M.alloc (|
                  M.call_closure (|
                    Ty.apply
                      (Ty.path "core::option::Option")
                      []
                      [ Ty.path "alloy_primitives::bits::address::Address" ],
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "core::result::Result")
                        []
                        [
                          Ty.path "alloy_primitives::bits::address::Address";
                          Ty.path "alloy_primitives::signature::error::SignatureError"
                        ],
                      "ok",
                      [],
                      []
                    |),
                    [
                      M.call_closure (|
                        Ty.apply
                          (Ty.path "core::result::Result")
                          []
                          [
                            Ty.path "alloy_primitives::bits::address::Address";
                            Ty.path "alloy_primitives::signature::error::SignatureError"
                          ],
                        M.get_associated_function (|
                          Ty.path "alloy_eip7702::auth_list::SignedAuthorization",
                          "recover_authority",
                          [],
                          []
                        |),
                        [ M.borrow (| Pointer.Kind.Ref, signed_auth |) ]
                      |)
                    ]
                  |)
                |) in
              M.alloc (|
                M.call_closure (|
                  Ty.path
                    "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                  M.get_associated_function (|
                    Ty.path
                      "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                    "new_unchecked",
                    [],
                    []
                  |),
                  [ M.read (| signed_auth |); M.read (| authority |) ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::convert::From"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) [ Ty.path "alloy_eip7702::auth_list::SignedAuthorization" ]
          Self
          (* Instance *) [ ("from", InstanceField.Method from) ].
    End Impl_core_convert_From_alloy_eip7702_auth_list_SignedAuthorization_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
    
    Module Impl_core_ops_deref_Deref_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
      Definition Self : Ty.t :=
        Ty.path "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization".
      
      (*     type Target = Authorization; *)
      Definition _Target : Ty.t := Ty.path "alloy_eip7702::auth_list::Authorization".
      
      (*
          fn deref(&self) -> &Self::Target {
              &self.inner
          }
      *)
      Definition deref (ε : list Value.t) (τ : list Ty.t) (α : list Value.t) : M :=
        match ε, τ, α with
        | [], [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.borrow (|
              Pointer.Kind.Ref,
              M.deref (|
                M.call_closure (|
                  Ty.apply (Ty.path "&") [] [ Ty.path "alloy_eip7702::auth_list::Authorization" ],
                  M.get_trait_method (|
                    "core::ops::deref::Deref",
                    Ty.path "alloy_eip7702::auth_list::SignedAuthorization",
                    [],
                    [],
                    "deref",
                    [],
                    []
                  |),
                  [
                    M.borrow (|
                      Pointer.Kind.Ref,
                      M.deref (|
                        M.borrow (|
                          Pointer.Kind.Ref,
                          M.SubPointer.get_struct_record_field (|
                            M.deref (| M.read (| self |) |),
                            "revm_specification::eip7702::recovered_authorization::RecoveredAuthorization",
                            "inner"
                          |)
                        |)
                      |)
                    |)
                  ]
                |)
              |)
            |)))
        | _, _, _ => M.impossible "wrong number of arguments"
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::ops::deref::Deref"
          (* Trait polymorphic consts *) []
          (* Trait polymorphic types *) []
          Self
          (* Instance *)
          [ ("Target", InstanceField.Ty _Target); ("deref", InstanceField.Method deref) ].
    End Impl_core_ops_deref_Deref_for_revm_specification_eip7702_recovered_authorization_RecoveredAuthorization.
  End recovered_authorization.
End eip7702.
