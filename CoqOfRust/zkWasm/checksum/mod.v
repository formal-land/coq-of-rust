(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module checksum.
  (* Trait *)
  (* Empty module 'ImageCheckSum' *)
  
  Module Impl_delphinus_zkwasm_checksum_ImageCheckSum_where_pairing_bn256_arithmetic_curves_CurveAffine_C_C_alloc_vec_Vec_C_alloc_alloc_Global_for_specs_CompilationTable.
    Definition Self (C : Ty.t) : Ty.t := Ty.path "specs::CompilationTable".
    
    (*
        fn checksum(&self, k: u32, params: &Params<C>) -> Vec<C> {
            let cells = encode_compilation_table_values(
                k,
                &self.itable,
                &self.br_table,
                &self.elem_table,
                &self.static_jtable,
                &self.initialization_state,
                &self.imtable,
            )
            .plain();
    
            let c = best_multiexp_gpu_cond(&cells[..], &params.get_g_lagrange()[0..cells.len()]);
            vec![c.into()]
        }
    *)
    Definition checksum (C : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
      let Self : Ty.t := Self C in
      match τ, α with
      | [], [ self; k; params ] =>
        ltac:(M.monadic
          (let self := M.alloc (| self |) in
          let k := M.alloc (| k |) in
          let params := M.alloc (| params |) in
          M.read (|
            let cells :=
              M.alloc (|
                M.call_closure (|
                  M.get_associated_function (|
                    Ty.apply
                      (Ty.path "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                      [ Ty.associated ],
                    "plain",
                    []
                  |),
                  [
                    M.alloc (|
                      M.call_closure (|
                        M.get_function (|
                          "delphinus_zkwasm::circuits::utils::image_table::encode_compilation_table_values",
                          [ Ty.associated ]
                        |),
                        [
                          M.read (| k |);
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::itable::InstructionTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "deref",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "specs::CompilationTable",
                                "itable"
                              |)
                            ]
                          |);
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [ Ty.path "specs::brtable::BrTable"; Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "deref",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "specs::CompilationTable",
                                "br_table"
                              |)
                            ]
                          |);
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::brtable::ElemTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "deref",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "specs::CompilationTable",
                                "elem_table"
                              |)
                            ]
                          |);
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.apply
                                    (Ty.path "array")
                                    [ Ty.path "specs::jtable::StaticFrameEntry" ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "deref",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "specs::CompilationTable",
                                "static_jtable"
                              |)
                            ]
                          |);
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.apply
                                    (Ty.path "specs::state::InitializationState")
                                    [ Ty.path "u32"; Ty.path "num_bigint::biguint::BigUint" ];
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "deref",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "specs::CompilationTable",
                                "initialization_state"
                              |)
                            ]
                          |);
                          M.call_closure (|
                            M.get_trait_method (|
                              "core::ops::deref::Deref",
                              Ty.apply
                                (Ty.path "alloc::sync::Arc")
                                [
                                  Ty.path "specs::imtable::InitMemoryTable";
                                  Ty.path "alloc::alloc::Global"
                                ],
                              [],
                              "deref",
                              []
                            |),
                            [
                              M.SubPointer.get_struct_record_field (|
                                M.read (| self |),
                                "specs::CompilationTable",
                                "imtable"
                              |)
                            ]
                          |)
                        ]
                      |)
                    |)
                  ]
                |)
              |) in
            let c :=
              M.alloc (|
                M.call_closure (|
                  M.get_function (| "halo2_proofs::arithmetic::best_multiexp_gpu_cond", [ C ] |),
                  [
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::ops::index::Index",
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          [ Ty.associated; Ty.path "alloc::alloc::Global" ],
                        [ Ty.path "core::ops::range::RangeFull" ],
                        "index",
                        []
                      |),
                      [ cells; Value.StructTuple "core::ops::range::RangeFull" [] ]
                    |);
                    M.call_closure (|
                      M.get_trait_method (|
                        "core::ops::index::Index",
                        Ty.apply (Ty.path "alloc::vec::Vec") [ C; Ty.path "alloc::alloc::Global" ],
                        [ Ty.apply (Ty.path "core::ops::range::Range") [ Ty.path "usize" ] ],
                        "index",
                        []
                      |),
                      [
                        M.call_closure (|
                          M.get_associated_function (|
                            Ty.apply (Ty.path "halo2_proofs::poly::commitment::Params") [ C ],
                            "get_g_lagrange",
                            []
                          |),
                          [ M.read (| params |) ]
                        |);
                        Value.StructRecord
                          "core::ops::range::Range"
                          [
                            ("start", Value.Integer 0);
                            ("end_",
                              M.call_closure (|
                                M.get_associated_function (|
                                  Ty.apply
                                    (Ty.path "alloc::vec::Vec")
                                    [ Ty.associated; Ty.path "alloc::alloc::Global" ],
                                  "len",
                                  []
                                |),
                                [ cells ]
                              |))
                          ]
                      ]
                    |)
                  ]
                |)
              |) in
            M.alloc (|
              M.call_closure (|
                M.get_associated_function (|
                  Ty.apply (Ty.path "slice") [ C ],
                  "into_vec",
                  [ Ty.path "alloc::alloc::Global" ]
                |),
                [
                  (* Unsize *)
                  M.pointer_coercion
                    (M.read (|
                      M.call_closure (|
                        M.get_associated_function (|
                          Ty.apply
                            (Ty.path "alloc::boxed::Box")
                            [ Ty.apply (Ty.path "array") [ C ]; Ty.path "alloc::alloc::Global" ],
                          "new",
                          []
                        |),
                        [
                          M.alloc (|
                            Value.Array
                              [
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "core::convert::Into",
                                    Ty.associated,
                                    [ C ],
                                    "into",
                                    []
                                  |),
                                  [ M.read (| c |) ]
                                |)
                              ]
                          |)
                        ]
                      |)
                    |))
                ]
              |)
            |)
          |)))
      | _, _ => M.impossible
      end.
    
    Axiom Implements :
      forall (C : Ty.t),
      M.IsTraitInstance
        "delphinus_zkwasm::checksum::ImageCheckSum"
        (Self C)
        (* Trait polymorphic types *)
        [
          (* C *) C;
          (* Output *) Ty.apply (Ty.path "alloc::vec::Vec") [ C; Ty.path "alloc::alloc::Global" ]
        ]
        (* Instance *) [ ("checksum", InstanceField.Method (checksum C)) ].
  End Impl_delphinus_zkwasm_checksum_ImageCheckSum_where_pairing_bn256_arithmetic_curves_CurveAffine_C_C_alloc_vec_Vec_C_alloc_alloc_Global_for_specs_CompilationTable.
End checksum.
