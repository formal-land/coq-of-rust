(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module circuits.
  Module bit_table.
    Module configure.
      Module Impl_delphinus_zkwasm_circuits_bit_table_BitTableConfig_F.
        Definition Self (F : Ty.t) : Ty.t :=
          Ty.apply (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig") [ F ].
        
        (*
            pub(crate) fn configure_in_table(
                &self,
                meta: &mut ConstraintSystem<F>,
                key: &'static str,
                expr: impl FnOnce(
                    &mut VirtualCells<'_, F>,
                ) -> (
                    Expression<F>,
                    Expression<F>,
                    Expression<F>,
                    Expression<F>,
                    Expression<F>,
                ),
            ) {
                meta.lookup_any(key, |meta| {
                    let (sel, op, left, right, result) = expr(meta);
        
                    vec![
                        // To prevent `fixed_curr!(meta, self.block_sel) * expr` which makes the h_poly degree up to 5
                        (sel, fixed_curr!(meta, self.block_sel)),
                        (op, prev!(meta, self.op)),
                        (left, prev!(meta, self.left)),
                        (right, prev!(meta, self.right)),
                        (result, prev!(meta, self.result)),
                    ]
                });
            }
        *)
        Definition configure_in_table (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
          let Self : Ty.t := Self F in
          match τ, α with
          | [
                impl_FnOnce__mut_VirtualCells_'___F___arrow__Expression_F___Expression_F___Expression_F___Expression_F___Expression_F__
              ],
              [ self; meta; key; expr ] =>
            ltac:(M.monadic
              (let self := M.alloc (| self |) in
              let meta := M.alloc (| meta |) in
              let key := M.alloc (| key |) in
              let expr := M.alloc (| expr |) in
              M.read (|
                let _ :=
                  M.alloc (|
                    M.call_closure (|
                      M.get_associated_function (|
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                        "lookup_any",
                        [
                          Ty.function
                            [
                              Ty.tuple
                                [
                                  Ty.apply
                                    (Ty.path "&mut")
                                    [
                                      Ty.apply
                                        (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                        [ F ]
                                    ]
                                ]
                            ]
                            (Ty.apply
                              (Ty.path "alloc::vec::Vec")
                              [
                                Ty.tuple
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                      [ F ];
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                      [ F ]
                                  ];
                                Ty.path "alloc::alloc::Global"
                              ])
                        ]
                      |),
                      [
                        M.read (| meta |);
                        M.read (| key |);
                        M.closure
                          (fun γ =>
                            ltac:(M.monadic
                              match γ with
                              | [ α0 ] =>
                                M.match_operator (|
                                  M.alloc (| α0 |),
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (let meta := M.copy (| γ |) in
                                        M.read (|
                                          M.match_operator (|
                                            M.alloc (|
                                              M.call_closure (|
                                                M.get_trait_method (|
                                                  "core::ops::function::FnOnce",
                                                  impl_FnOnce__mut_VirtualCells_'___F___arrow__Expression_F___Expression_F___Expression_F___Expression_F___Expression_F__,
                                                  [
                                                    Ty.tuple
                                                      [
                                                        Ty.apply
                                                          (Ty.path "&mut")
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                              [ F ]
                                                          ]
                                                      ]
                                                  ],
                                                  "call_once",
                                                  []
                                                |),
                                                [
                                                  M.read (| expr |);
                                                  Value.Tuple [ M.read (| meta |) ]
                                                ]
                                              |)
                                            |),
                                            [
                                              fun γ =>
                                                ltac:(M.monadic
                                                  (let γ0_0 :=
                                                    M.SubPointer.get_tuple_field (| γ, 0 |) in
                                                  let γ0_1 :=
                                                    M.SubPointer.get_tuple_field (| γ, 1 |) in
                                                  let γ0_2 :=
                                                    M.SubPointer.get_tuple_field (| γ, 2 |) in
                                                  let γ0_3 :=
                                                    M.SubPointer.get_tuple_field (| γ, 3 |) in
                                                  let γ0_4 :=
                                                    M.SubPointer.get_tuple_field (| γ, 4 |) in
                                                  let sel := M.copy (| γ0_0 |) in
                                                  let op := M.copy (| γ0_1 |) in
                                                  let left := M.copy (| γ0_2 |) in
                                                  let right := M.copy (| γ0_3 |) in
                                                  let result := M.copy (| γ0_4 |) in
                                                  M.alloc (|
                                                    M.call_closure (|
                                                      M.get_associated_function (|
                                                        Ty.apply
                                                          (Ty.path "slice")
                                                          [
                                                            Ty.tuple
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ]
                                                              ]
                                                          ],
                                                        "into_vec",
                                                        [ Ty.path "alloc::alloc::Global" ]
                                                      |),
                                                      [
                                                        (* Unsize *)
                                                        M.pointer_coercion
                                                          (M.read (|
                                                            M.call_closure (|
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path "alloc::boxed::Box")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path "array")
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ];
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ]
                                                                          ]
                                                                      ];
                                                                    Ty.path "alloc::alloc::Global"
                                                                  ],
                                                                "new",
                                                                []
                                                              |),
                                                              [
                                                                M.alloc (|
                                                                  Value.Array
                                                                    [
                                                                      Value.Tuple
                                                                        [
                                                                          M.read (| sel |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                [ F ],
                                                                              "query_fixed",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (| meta |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  M.read (| self |),
                                                                                  "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                                                                                  "block_sel"
                                                                                |)
                                                                              |);
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.path
                                                                                    "halo2_proofs::poly::Rotation",
                                                                                  "cur",
                                                                                  []
                                                                                |),
                                                                                []
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ];
                                                                      Value.Tuple
                                                                        [
                                                                          M.read (| op |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                [ F ],
                                                                              "query_advice",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (| meta |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  M.read (| self |),
                                                                                  "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                                                                                  "op"
                                                                                |)
                                                                              |);
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.path
                                                                                    "halo2_proofs::poly::Rotation",
                                                                                  "prev",
                                                                                  []
                                                                                |),
                                                                                []
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ];
                                                                      Value.Tuple
                                                                        [
                                                                          M.read (| left |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                [ F ],
                                                                              "query_advice",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (| meta |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  M.read (| self |),
                                                                                  "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                                                                                  "left"
                                                                                |)
                                                                              |);
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.path
                                                                                    "halo2_proofs::poly::Rotation",
                                                                                  "prev",
                                                                                  []
                                                                                |),
                                                                                []
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ];
                                                                      Value.Tuple
                                                                        [
                                                                          M.read (| right |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                [ F ],
                                                                              "query_advice",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (| meta |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  M.read (| self |),
                                                                                  "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                                                                                  "right"
                                                                                |)
                                                                              |);
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.path
                                                                                    "halo2_proofs::poly::Rotation",
                                                                                  "prev",
                                                                                  []
                                                                                |),
                                                                                []
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ];
                                                                      Value.Tuple
                                                                        [
                                                                          M.read (| result |);
                                                                          M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                [ F ],
                                                                              "query_advice",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.read (| meta |);
                                                                              M.read (|
                                                                                M.SubPointer.get_struct_record_field (|
                                                                                  M.read (| self |),
                                                                                  "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                                                                                  "result"
                                                                                |)
                                                                              |);
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.path
                                                                                    "halo2_proofs::poly::Rotation",
                                                                                  "prev",
                                                                                  []
                                                                                |),
                                                                                []
                                                                              |)
                                                                            ]
                                                                          |)
                                                                        ]
                                                                    ]
                                                                |)
                                                              ]
                                                            |)
                                                          |))
                                                      ]
                                                    |)
                                                  |)))
                                            ]
                                          |)
                                        |)))
                                  ]
                                |)
                              | _ => M.impossible (||)
                              end))
                      ]
                    |)
                  |) in
                M.alloc (| Value.Tuple [] |)
              |)))
          | _, _ => M.impossible
          end.
        
        Axiom AssociatedFunction_configure_in_table :
          forall (F : Ty.t),
          M.IsAssociatedFunction (Self F) "configure_in_table" (configure_in_table F).
      End Impl_delphinus_zkwasm_circuits_bit_table_BitTableConfig_F.
    End configure.
  End bit_table.
End circuits.
