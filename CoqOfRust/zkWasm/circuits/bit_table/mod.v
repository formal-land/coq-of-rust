(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module circuits.
  Module bit_table.
    (* Trait *)
    (* Empty module 'BitTableTrait' *)
    
    (*
    Enum BitTableOp
    {
      ty_params := [];
      variants :=
        [
          {
            name := "BinaryBit";
            item := StructTuple [ Ty.path "specs::itable::BitOp" ];
            discriminant := None;
          };
          {
            name := "Popcnt";
            item := StructTuple [];
            discriminant := None;
          }
        ];
    }
    *)
    
    Module Impl_core_clone_Clone_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp".
      
      (* Clone *)
      Definition clone (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                Value.DeclaredButUndefined,
                [ fun γ => ltac:(M.monadic (M.read (| self |))) ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::clone::Clone"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("clone", InstanceField.Method clone) ].
    End Impl_core_clone_Clone_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
    
    Module Impl_core_marker_Copy_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::Copy"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [].
    End Impl_core_marker_Copy_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
    
    Module Impl_core_marker_StructuralPartialEq_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp".
      
      Axiom Implements :
        M.IsTraitInstance
          "core::marker::StructuralPartialEq"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [].
    End Impl_core_marker_StructuralPartialEq_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
    
    Module Impl_core_cmp_PartialEq_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp".
      
      (* PartialEq *)
      Definition eq (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self; other ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            let other := M.alloc (| other |) in
            M.read (|
              let __self_tag :=
                M.alloc (|
                  M.call_closure (|
                    M.get_function (|
                      "core::intrinsics::discriminant_value",
                      [ Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp" ]
                    |),
                    [ M.read (| self |) ]
                  |)
                |) in
              let __arg1_tag :=
                M.alloc (|
                  M.call_closure (|
                    M.get_function (|
                      "core::intrinsics::discriminant_value",
                      [ Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp" ]
                    |),
                    [ M.read (| other |) ]
                  |)
                |) in
              M.alloc (|
                LogicalOp.and (|
                  BinOp.Pure.eq (M.read (| __self_tag |)) (M.read (| __arg1_tag |)),
                  ltac:(M.monadic
                    (M.read (|
                      M.match_operator (|
                        M.alloc (| Value.Tuple [ M.read (| self |); M.read (| other |) ] |),
                        [
                          fun γ =>
                            ltac:(M.monadic
                              (let γ0_0 := M.SubPointer.get_tuple_field (| γ, 0 |) in
                              let γ0_1 := M.SubPointer.get_tuple_field (| γ, 1 |) in
                              let γ0_0 := M.read (| γ0_0 |) in
                              let γ2_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ0_0,
                                  "delphinus_zkwasm::circuits::bit_table::BitTableOp::BinaryBit",
                                  0
                                |) in
                              let __self_0 := M.alloc (| γ2_0 |) in
                              let γ0_1 := M.read (| γ0_1 |) in
                              let γ2_0 :=
                                M.SubPointer.get_struct_tuple_field (|
                                  γ0_1,
                                  "delphinus_zkwasm::circuits::bit_table::BitTableOp::BinaryBit",
                                  0
                                |) in
                              let __arg1_0 := M.alloc (| γ2_0 |) in
                              M.alloc (|
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "core::cmp::PartialEq",
                                    Ty.path "specs::itable::BitOp",
                                    [ Ty.path "specs::itable::BitOp" ],
                                    "eq",
                                    []
                                  |),
                                  [ M.read (| __self_0 |); M.read (| __arg1_0 |) ]
                                |)
                              |)));
                          fun γ => ltac:(M.monadic (M.alloc (| Value.Bool true |)))
                        ]
                      |)
                    |)))
                |)
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        M.IsTraitInstance
          "core::cmp::PartialEq"
          Self
          (* Trait polymorphic types *) []
          (* Instance *) [ ("eq", InstanceField.Method eq) ].
    End Impl_core_cmp_PartialEq_for_delphinus_zkwasm_circuits_bit_table_BitTableOp.
    
    Module Impl_delphinus_zkwasm_circuits_bit_table_BitTableOp.
      Definition Self : Ty.t := Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableOp".
      
      (*
          pub(crate) fn index(&self) -> usize {
              match self {
                  BitTableOp::BinaryBit(op) => *op as usize,
                  BitTableOp::Popcnt => BitOp::iter().len(),
              }
          }
      *)
      Definition index (τ : list Ty.t) (α : list Value.t) : M :=
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            M.read (|
              M.match_operator (|
                self,
                [
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      let γ1_0 :=
                        M.SubPointer.get_struct_tuple_field (|
                          γ,
                          "delphinus_zkwasm::circuits::bit_table::BitTableOp::BinaryBit",
                          0
                        |) in
                      let op := M.alloc (| γ1_0 |) in
                      M.alloc (| M.rust_cast (M.read (| M.read (| op |) |)) |)));
                  fun γ =>
                    ltac:(M.monadic
                      (let γ := M.read (| γ |) in
                      M.alloc (|
                        M.call_closure (|
                          M.get_trait_method (|
                            "core::iter::traits::exact_size::ExactSizeIterator",
                            Ty.path "specs::itable::BitOpIter",
                            [],
                            "len",
                            []
                          |),
                          [
                            M.alloc (|
                              M.call_closure (|
                                M.get_trait_method (|
                                  "strum::IntoEnumIterator",
                                  Ty.path "specs::itable::BitOp",
                                  [],
                                  "iter",
                                  []
                                |),
                                []
                              |)
                            |)
                          ]
                        |)
                      |)))
                ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_index : M.IsAssociatedFunction Self "index" index.
    End Impl_delphinus_zkwasm_circuits_bit_table_BitTableOp.
    
    (* StructRecord
      {
        name := "BitTableConfig";
        ty_params := [ "F" ];
        fields :=
          [
            ("block_sel",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]);
            ("u32_sel",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]);
            ("lookup_sel",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]);
            ("op",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("helper",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("left",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("right",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("result",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("_mark", Ty.apply (Ty.path "core::marker::PhantomData") [ F ])
          ];
      } *)
    
    Module Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_bit_table_BitTableConfig_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig") [ F ].
      
      (* Clone *)
      Definition clone (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "delphinus_zkwasm::circuits::bit_table::BitTableConfig"
              [
                ("block_sel",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "block_sel"
                      |)
                    ]
                  |));
                ("u32_sel",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "u32_sel"
                      |)
                    ]
                  |));
                ("lookup_sel",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "lookup_sel"
                      |)
                    ]
                  |));
                ("op",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "op"
                      |)
                    ]
                  |));
                ("helper",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "helper"
                      |)
                    ]
                  |));
                ("left",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "left"
                      |)
                    ]
                  |));
                ("right",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "right"
                      |)
                    ]
                  |));
                ("result",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "result"
                      |)
                    ]
                  |));
                ("_mark",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "core::marker::PhantomData") [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::bit_table::BitTableConfig",
                        "_mark"
                      |)
                    ]
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        forall (F : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (Self F)
          (* Trait polymorphic types *) []
          (* Instance *) [ ("clone", InstanceField.Method (clone F)) ].
    End Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_bit_table_BitTableConfig_F.
    
    Definition value_STEP_SIZE : Value.t := M.run ltac:(M.monadic (M.alloc (| Value.Integer 11 |))).
    
    Definition value_BLOCK_SEL_OFFSET : Value.t :=
      M.run ltac:(M.monadic (M.alloc (| Value.Integer 1 |))).
    
    Definition value_U32_OFFSET : Value.t :=
      M.run ltac:(M.monadic (M.alloc (| Value.Array [ Value.Integer 1; Value.Integer 6 ] |))).
    
    Definition value_U8_OFFSET : Value.t :=
      M.run
        ltac:(M.monadic
          (M.alloc (|
            Value.Array
              [
                Value.Integer 2;
                Value.Integer 3;
                Value.Integer 4;
                Value.Integer 5;
                Value.Integer 7;
                Value.Integer 8;
                Value.Integer 9;
                Value.Integer 10
              ]
          |))).
    
    Module Impl_delphinus_zkwasm_circuits_bit_table_BitTableConfig_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig") [ F ].
      
      (*
          pub(crate) fn configure(meta: &mut ConstraintSystem<F>, rtable: &RangeTableConfig<F>) -> Self {
              let block_sel = meta.fixed_column();
              let u32_sel = meta.fixed_column();
              let lookup_sel = meta.fixed_column();
              let op = meta.advice_column();
              let helper = meta.advice_column();
              let left = meta.advice_column();
              let right = meta.advice_column();
              let result = meta.advice_column();
      
              rtable.configure_in_op_table(
                  meta,
                  "bit table lookup in rtable",
                  |meta| curr!(meta, op),
                  |meta| curr!(meta, left),
                  |meta| curr!(meta, right),
                  |meta| curr!(meta, result),
                  |meta| fixed_curr!(meta, lookup_sel),
              );
      
              meta.create_gate("bit table: 1. op consistent", |meta| {
                  vec![
                      (fixed_curr!(meta, u32_sel) + fixed_curr!(meta, lookup_sel))
                          * (prev!(meta, op) - curr!(meta, op)),
                      fixed_curr!(meta, u32_sel)
                          * curr!(meta, helper)
                          * (curr!(meta, op) - constant_from!(BitTableOp::Popcnt.index())),
                      fixed_curr!(meta, u32_sel)
                          * (curr!(meta, helper) - constant_from!(1))
                          * curr!(meta, op)  // - constant_from!(BitOp::And)): 0
                          * (curr!(meta, op) - constant_from!(BitOp::Or))
                          * (curr!(meta, op) - constant_from!(BitOp::Xor)),
                      // is_popcnt cell is bit
                      fixed_curr!(meta, u32_sel)
                          * curr!(meta, helper)
                          * (curr!(meta, helper) - constant_from!(1)),
                  ]
              });
      
              meta.create_gate("bit table: 2. acc u32", |meta| {
                  let is_popcnt = curr!(meta, helper);
                  let is_bit = constant_from!(1) - is_popcnt.clone();
      
                  // For bit operator
                  macro_rules! compose_u32_helper {
                      ($col:expr) => {
                          (0..4)
                              .into_iter()
                              .map(|x| {
                                  if x == 0 {
                                      nextn!(meta, $col, 1)
                                  } else {
                                      (nextn!(meta, $col, x + 1)) * constant_from!(1u64 << (8 * x))
                                  }
                              })
                              .reduce(|acc, x| acc + x)
                              .unwrap()
                      };
                  }
      
                  // For popcnt operator
                  macro_rules! acc_u32_helper {
                      ($col:expr) => {
                          (0..4)
                              .into_iter()
                              .map(|x| (nextn!(meta, $col, 1 + x)))
                              .reduce(|acc, x| acc + x)
                              .unwrap()
                      };
                  }
      
                  macro_rules! compose_u32 {
                      ($col:ident) => {
                          fixed_curr!(meta, u32_sel) * (compose_u32_helper!($col) - curr!(meta, $col))
                      };
                  }
      
                  macro_rules! compose_u32_if_bit {
                      ($col:ident) => {
                          compose_u32!($col) * is_bit.clone()
                      };
                  }
      
                  macro_rules! acc_u32_if_popcnt {
                      ($col:ident) => {
                          fixed_curr!(meta, u32_sel)
                              * (acc_u32_helper!($col) - curr!(meta, $col))
                              * is_popcnt
                      };
                  }
      
                  vec![
                      compose_u32!(left),
                      compose_u32!(right),
                      compose_u32_if_bit!(result),
                      acc_u32_if_popcnt!(result),
                  ]
              });
      
              meta.create_gate("bit table: 3. acc u64", |meta| {
                  let is_popcnt = curr!(meta, helper);
                  let is_bit = constant_from!(1) - is_popcnt.clone();
      
                  macro_rules! compose_u64 {
                      ($col: expr) => {
                          fixed_curr!(meta, block_sel)
                              * (prev!(meta, $col)
                                  - curr!(meta, $col)
                                  - nextn!(meta, $col, 5) * constant_from!(1u64 << 32))
                      };
                  }
      
                  macro_rules! compose_u64_if_bit {
                      ($col: expr) => {
                          compose_u64!($col) * is_bit.clone()
                      };
                  }
      
                  macro_rules! acc_u64_if_popcnt {
                      ($col: expr) => {
                          fixed_curr!(meta, block_sel)
                              * is_popcnt
                              * (prev!(meta, $col) - curr!(meta, $col) - nextn!(meta, $col, 5))
                      };
                  }
      
                  vec![
                      compose_u64!(left),
                      compose_u64!(right),
                      compose_u64_if_bit!(result),
                      acc_u64_if_popcnt!(result),
                  ]
              });
      
              Self {
                  block_sel,
                  u32_sel,
                  lookup_sel,
                  op,
                  helper,
                  left,
                  right,
                  result,
                  _mark: PhantomData,
              }
          }
      *)
      Definition configure (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ meta; rtable ] =>
          ltac:(M.monadic
            (let meta := M.alloc (| meta |) in
            let rtable := M.alloc (| rtable |) in
            M.read (|
              let block_sel :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "fixed_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let u32_sel :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "fixed_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let lookup_sel :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "fixed_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let op :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "advice_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let helper :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "advice_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let left :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "advice_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let right :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "advice_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let result :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "advice_column",
                      []
                    |),
                    [ M.read (| meta |) ]
                  |)
                |) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply
                        (Ty.path "delphinus_zkwasm::circuits::rtable::RangeTableConfig")
                        [ F ],
                      "configure_in_op_table",
                      [
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ]);
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ]);
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ]);
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ]);
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ])
                      ]
                    |),
                    [
                      M.read (| rtable |);
                      M.read (| meta |);
                      M.read (| Value.String "bit table lookup in rtable" |);
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                            [ F ],
                                          "query_advice",
                                          []
                                        |),
                                        [
                                          M.read (| meta |);
                                          M.read (| op |);
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.path "halo2_proofs::poly::Rotation",
                                              "cur",
                                              []
                                            |),
                                            []
                                          |)
                                        ]
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end));
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                            [ F ],
                                          "query_advice",
                                          []
                                        |),
                                        [
                                          M.read (| meta |);
                                          M.read (| left |);
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.path "halo2_proofs::poly::Rotation",
                                              "cur",
                                              []
                                            |),
                                            []
                                          |)
                                        ]
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end));
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                            [ F ],
                                          "query_advice",
                                          []
                                        |),
                                        [
                                          M.read (| meta |);
                                          M.read (| right |);
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.path "halo2_proofs::poly::Rotation",
                                              "cur",
                                              []
                                            |),
                                            []
                                          |)
                                        ]
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end));
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                            [ F ],
                                          "query_advice",
                                          []
                                        |),
                                        [
                                          M.read (| meta |);
                                          M.read (| result |);
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.path "halo2_proofs::poly::Rotation",
                                              "cur",
                                              []
                                            |),
                                            []
                                          |)
                                        ]
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end));
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                            [ F ],
                                          "query_fixed",
                                          []
                                        |),
                                        [
                                          M.read (| meta |);
                                          M.read (| lookup_sel |);
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.path "halo2_proofs::poly::Rotation",
                                              "cur",
                                              []
                                            |),
                                            []
                                          |)
                                        ]
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end))
                    ]
                  |)
                |) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "create_gate",
                      [
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          [
                            Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            [
                              Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                              Ty.path "alloc::alloc::Global"
                            ])
                      ]
                    |),
                    [
                      M.read (| meta |);
                      M.read (| Value.String "bit table: 1. op consistent" |);
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.call_closure (|
                                        M.get_associated_function (|
                                          Ty.apply
                                            (Ty.path "slice")
                                            [
                                              Ty.apply
                                                (Ty.path "halo2_proofs::plonk::circuit::Expression")
                                                [ F ]
                                            ],
                                          "into_vec",
                                          [ Ty.path "alloc::alloc::Global" ]
                                        |),
                                        [
                                          (* Unsize *)
                                          M.pointer_coercion
                                            (M.read (|
                                              M.call_closure (|
                                                M.get_associated_function (|
                                                  Ty.apply
                                                    (Ty.path "alloc::boxed::Box")
                                                    [
                                                      Ty.apply
                                                        (Ty.path "array")
                                                        [
                                                          Ty.apply
                                                            (Ty.path
                                                              "halo2_proofs::plonk::circuit::Expression")
                                                            [ F ]
                                                        ];
                                                      Ty.path "alloc::alloc::Global"
                                                    ],
                                                  "new",
                                                  []
                                                |),
                                                [
                                                  M.alloc (|
                                                    Value.Array
                                                      [
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::arith::Mul",
                                                            Ty.apply
                                                              (Ty.path
                                                                "halo2_proofs::plonk::circuit::Expression")
                                                              [ F ],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ],
                                                            "mul",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Add",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "add",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| u32_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| lookup_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Sub",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "sub",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| op |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "prev",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| op |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                        |);
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::arith::Mul",
                                                            Ty.apply
                                                              (Ty.path
                                                                "halo2_proofs::plonk::circuit::Expression")
                                                              [ F ],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ],
                                                            "mul",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| u32_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| helper |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Sub",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "sub",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| op |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                Value.StructTuple
                                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::convert::From",
                                                                        F,
                                                                        [ Ty.path "u64" ],
                                                                        "from",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.rust_cast
                                                                          (M.call_closure (|
                                                                            M.get_associated_function (|
                                                                              Ty.path
                                                                                "delphinus_zkwasm::circuits::bit_table::BitTableOp",
                                                                              "index",
                                                                              []
                                                                            |),
                                                                            [
                                                                              M.alloc (|
                                                                                Value.StructTuple
                                                                                  "delphinus_zkwasm::circuits::bit_table::BitTableOp::Popcnt"
                                                                                  []
                                                                              |)
                                                                            ]
                                                                          |))
                                                                      ]
                                                                    |)
                                                                  ]
                                                              ]
                                                            |)
                                                          ]
                                                        |);
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::arith::Mul",
                                                            Ty.apply
                                                              (Ty.path
                                                                "halo2_proofs::plonk::circuit::Expression")
                                                              [ F ],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ],
                                                            "mul",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Mul",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "mul",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Mul",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "mul",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_fixed",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| u32_sel |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "cur",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::arith::Sub",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ],
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                                [ F ]
                                                                            ],
                                                                            "sub",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                  [ F ],
                                                                                "query_advice",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (| meta |);
                                                                                M.read (| helper |);
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "halo2_proofs::poly::Rotation",
                                                                                    "cur",
                                                                                    []
                                                                                  |),
                                                                                  []
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            Value.StructTuple
                                                                              "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::convert::From",
                                                                                    F,
                                                                                    [ Ty.path "u64"
                                                                                    ],
                                                                                    "from",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.use
                                                                                        (M.alloc (|
                                                                                          Value.Integer
                                                                                            1
                                                                                        |))
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_advice",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| op |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Sub",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "sub",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_advice",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| op |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    Value.StructTuple
                                                                      "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::convert::From",
                                                                            F,
                                                                            [ Ty.path "u64" ],
                                                                            "from",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.rust_cast
                                                                              (BinOp.Panic.add (|
                                                                                Integer.Isize,
                                                                                M.get_constant (|
                                                                                  "specs::itable::BitOp::Or_discriminant"
                                                                                |),
                                                                                Value.Integer 0
                                                                              |))
                                                                          ]
                                                                        |)
                                                                      ]
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Sub",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "sub",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| op |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                Value.StructTuple
                                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::convert::From",
                                                                        F,
                                                                        [ Ty.path "u64" ],
                                                                        "from",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.rust_cast
                                                                          (BinOp.Panic.add (|
                                                                            Integer.Isize,
                                                                            M.get_constant (|
                                                                              "specs::itable::BitOp::Xor_discriminant"
                                                                            |),
                                                                            Value.Integer 0
                                                                          |))
                                                                      ]
                                                                    |)
                                                                  ]
                                                              ]
                                                            |)
                                                          ]
                                                        |);
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::arith::Mul",
                                                            Ty.apply
                                                              (Ty.path
                                                                "halo2_proofs::plonk::circuit::Expression")
                                                              [ F ],
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ],
                                                            "mul",
                                                            []
                                                          |),
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| u32_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| helper |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Sub",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "sub",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_advice",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| helper |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                Value.StructTuple
                                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::convert::From",
                                                                        F,
                                                                        [ Ty.path "u64" ],
                                                                        "from",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (|
                                                                          M.use
                                                                            (M.alloc (|
                                                                              Value.Integer 1
                                                                            |))
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                              ]
                                                            |)
                                                          ]
                                                        |)
                                                      ]
                                                  |)
                                                ]
                                              |)
                                            |))
                                        ]
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end))
                    ]
                  |)
                |) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "create_gate",
                      [
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          [
                            Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            [
                              Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                              Ty.path "alloc::alloc::Global"
                            ])
                      ]
                    |),
                    [
                      M.read (| meta |);
                      M.read (| Value.String "bit table: 2. acc u32" |);
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.read (|
                                        let is_popcnt :=
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path
                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                  [ F ],
                                                "query_advice",
                                                []
                                              |),
                                              [
                                                M.read (| meta |);
                                                M.read (| helper |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "halo2_proofs::poly::Rotation",
                                                    "cur",
                                                    []
                                                  |),
                                                  []
                                                |)
                                              ]
                                            |)
                                          |) in
                                        let is_bit :=
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_trait_method (|
                                                "core::ops::arith::Sub",
                                                Ty.apply
                                                  (Ty.path
                                                    "halo2_proofs::plonk::circuit::Expression")
                                                  [ F ],
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "halo2_proofs::plonk::circuit::Expression")
                                                    [ F ]
                                                ],
                                                "sub",
                                                []
                                              |),
                                              [
                                                Value.StructTuple
                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                  [
                                                    M.call_closure (|
                                                      M.get_trait_method (|
                                                        "core::convert::From",
                                                        F,
                                                        [ Ty.path "u64" ],
                                                        "from",
                                                        []
                                                      |),
                                                      [
                                                        M.read (|
                                                          M.use (M.alloc (| Value.Integer 1 |))
                                                        |)
                                                      ]
                                                    |)
                                                  ];
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "halo2_proofs::plonk::circuit::Expression")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ is_popcnt ]
                                                |)
                                              ]
                                            |)
                                          |) in
                                        M.alloc (|
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "slice")
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "halo2_proofs::plonk::circuit::Expression")
                                                    [ F ]
                                                ],
                                              "into_vec",
                                              [ Ty.path "alloc::alloc::Global" ]
                                            |),
                                            [
                                              (* Unsize *)
                                              M.pointer_coercion
                                                (M.read (|
                                                  M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "alloc::boxed::Box")
                                                        [
                                                          Ty.apply
                                                            (Ty.path "array")
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      "new",
                                                      []
                                                    |),
                                                    [
                                                      M.alloc (|
                                                        Value.Array
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| u32_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Sub",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "sub",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ]
                                                                          ],
                                                                        "unwrap",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::iter::adapters::map::Map")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::ops::range::Range")
                                                                                  [ Ty.path "i32" ];
                                                                                Ty.function
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ]
                                                                                  ]
                                                                                  (Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                    [ F ])
                                                                              ],
                                                                            [],
                                                                            "reduce",
                                                                            [
                                                                              Ty.function
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ]
                                                                                    ]
                                                                                ]
                                                                                (Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                  [ F ])
                                                                            ]
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::ops::range::Range")
                                                                                  [ Ty.path "i32" ],
                                                                                [],
                                                                                "map",
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                    [ F ];
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.path
                                                                                            "i32"
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                                      [ F ])
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::collect::IntoIterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::Range")
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ],
                                                                                    [],
                                                                                    "into_iter",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    Value.StructRecord
                                                                                      "core::ops::range::Range"
                                                                                      [
                                                                                        ("start",
                                                                                          Value.Integer
                                                                                            0);
                                                                                        ("end_",
                                                                                          Value.Integer
                                                                                            4)
                                                                                      ]
                                                                                  ]
                                                                                |);
                                                                                M.closure
                                                                                  (fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      match γ with
                                                                                      | [ α0 ] =>
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            α0
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      x :=
                                                                                                  M.copy (|
                                                                                                    γ
                                                                                                  |) in
                                                                                                M.read (|
                                                                                                  M.match_operator (|
                                                                                                    M.alloc (|
                                                                                                      Value.Tuple
                                                                                                        []
                                                                                                    |),
                                                                                                    [
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                γ :=
                                                                                                            M.use
                                                                                                              (M.alloc (|
                                                                                                                BinOp.Pure.eq
                                                                                                                  (M.read (|
                                                                                                                    x
                                                                                                                  |))
                                                                                                                  (Value.Integer
                                                                                                                    0)
                                                                                                              |)) in
                                                                                                          let
                                                                                                                _ :=
                                                                                                            M.is_constant_or_break_match (|
                                                                                                              M.read (|
                                                                                                                γ
                                                                                                              |),
                                                                                                              Value.Bool
                                                                                                                true
                                                                                                            |) in
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                                  [
                                                                                                                    F
                                                                                                                  ],
                                                                                                                "query_advice",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  meta
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  left
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "halo2_proofs::poly::Rotation"
                                                                                                                  [
                                                                                                                    Value.Integer
                                                                                                                      1
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)));
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::ops::arith::Mul",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                                                  [
                                                                                                                    F
                                                                                                                  ],
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                                "mul",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ],
                                                                                                                    "query_advice",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      meta
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      left
                                                                                                                    |);
                                                                                                                    Value.StructTuple
                                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                                      [
                                                                                                                        BinOp.Panic.add (|
                                                                                                                          Integer.I32,
                                                                                                                          M.read (|
                                                                                                                            x
                                                                                                                          |),
                                                                                                                          Value.Integer
                                                                                                                            1
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::convert::From",
                                                                                                                        F,
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "u64"
                                                                                                                        ],
                                                                                                                        "from",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          M.use
                                                                                                                            (M.alloc (|
                                                                                                                              BinOp.Panic.shl (|
                                                                                                                                Value.Integer
                                                                                                                                  1,
                                                                                                                                BinOp.Panic.mul (|
                                                                                                                                  Integer.I32,
                                                                                                                                  Value.Integer
                                                                                                                                    8,
                                                                                                                                  M.read (|
                                                                                                                                    x
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |))
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)))
                                                                                                    ]
                                                                                                  |)
                                                                                                |)))
                                                                                          ]
                                                                                        |)
                                                                                      | _ =>
                                                                                        M.impossible (||)
                                                                                      end))
                                                                              ]
                                                                            |);
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  acc :=
                                                                                              M.copy (|
                                                                                                γ
                                                                                              |) in
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          x :=
                                                                                                      M.copy (|
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.call_closure (|
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::arith::Add",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                                                          [
                                                                                                            F
                                                                                                          ],
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                                            [
                                                                                                              F
                                                                                                            ]
                                                                                                        ],
                                                                                                        "add",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          acc
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          x
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_advice",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| left |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| u32_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Sub",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "sub",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::option::Option")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ]
                                                                          ],
                                                                        "unwrap",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::iter::adapters::map::Map")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::ops::range::Range")
                                                                                  [ Ty.path "i32" ];
                                                                                Ty.function
                                                                                  [
                                                                                    Ty.tuple
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ]
                                                                                  ]
                                                                                  (Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                    [ F ])
                                                                              ],
                                                                            [],
                                                                            "reduce",
                                                                            [
                                                                              Ty.function
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ];
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ]
                                                                                    ]
                                                                                ]
                                                                                (Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                  [ F ])
                                                                            ]
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::ops::range::Range")
                                                                                  [ Ty.path "i32" ],
                                                                                [],
                                                                                "map",
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                    [ F ];
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.path
                                                                                            "i32"
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                                      [ F ])
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::collect::IntoIterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::Range")
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ],
                                                                                    [],
                                                                                    "into_iter",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    Value.StructRecord
                                                                                      "core::ops::range::Range"
                                                                                      [
                                                                                        ("start",
                                                                                          Value.Integer
                                                                                            0);
                                                                                        ("end_",
                                                                                          Value.Integer
                                                                                            4)
                                                                                      ]
                                                                                  ]
                                                                                |);
                                                                                M.closure
                                                                                  (fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      match γ with
                                                                                      | [ α0 ] =>
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            α0
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      x :=
                                                                                                  M.copy (|
                                                                                                    γ
                                                                                                  |) in
                                                                                                M.read (|
                                                                                                  M.match_operator (|
                                                                                                    M.alloc (|
                                                                                                      Value.Tuple
                                                                                                        []
                                                                                                    |),
                                                                                                    [
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                γ :=
                                                                                                            M.use
                                                                                                              (M.alloc (|
                                                                                                                BinOp.Pure.eq
                                                                                                                  (M.read (|
                                                                                                                    x
                                                                                                                  |))
                                                                                                                  (Value.Integer
                                                                                                                    0)
                                                                                                              |)) in
                                                                                                          let
                                                                                                                _ :=
                                                                                                            M.is_constant_or_break_match (|
                                                                                                              M.read (|
                                                                                                                γ
                                                                                                              |),
                                                                                                              Value.Bool
                                                                                                                true
                                                                                                            |) in
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                                  [
                                                                                                                    F
                                                                                                                  ],
                                                                                                                "query_advice",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.read (|
                                                                                                                  meta
                                                                                                                |);
                                                                                                                M.read (|
                                                                                                                  right
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "halo2_proofs::poly::Rotation"
                                                                                                                  [
                                                                                                                    Value.Integer
                                                                                                                      1
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)));
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_trait_method (|
                                                                                                                "core::ops::arith::Mul",
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                                                  [
                                                                                                                    F
                                                                                                                  ],
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                                "mul",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ],
                                                                                                                    "query_advice",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      meta
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      right
                                                                                                                    |);
                                                                                                                    Value.StructTuple
                                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                                      [
                                                                                                                        BinOp.Panic.add (|
                                                                                                                          Integer.I32,
                                                                                                                          M.read (|
                                                                                                                            x
                                                                                                                          |),
                                                                                                                          Value.Integer
                                                                                                                            1
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |);
                                                                                                                Value.StructTuple
                                                                                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::convert::From",
                                                                                                                        F,
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "u64"
                                                                                                                        ],
                                                                                                                        "from",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          M.use
                                                                                                                            (M.alloc (|
                                                                                                                              BinOp.Panic.shl (|
                                                                                                                                Value.Integer
                                                                                                                                  1,
                                                                                                                                BinOp.Panic.mul (|
                                                                                                                                  Integer.I32,
                                                                                                                                  Value.Integer
                                                                                                                                    8,
                                                                                                                                  M.read (|
                                                                                                                                    x
                                                                                                                                  |)
                                                                                                                                |)
                                                                                                                              |)
                                                                                                                            |))
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)))
                                                                                                    ]
                                                                                                  |)
                                                                                                |)))
                                                                                          ]
                                                                                        |)
                                                                                      | _ =>
                                                                                        M.impossible (||)
                                                                                      end))
                                                                              ]
                                                                            |);
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0; α1 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  acc :=
                                                                                              M.copy (|
                                                                                                γ
                                                                                              |) in
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α1
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          x :=
                                                                                                      M.copy (|
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.call_closure (|
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::arith::Add",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                                                          [
                                                                                                            F
                                                                                                          ],
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                                            [
                                                                                                              F
                                                                                                            ]
                                                                                                        ],
                                                                                                        "add",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          acc
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          x
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)))
                                                                                              ]
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_advice",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| right |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Mul",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "mul",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_fixed",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| u32_sel |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Sub",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "sub",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                  [ F ]
                                                                              ],
                                                                            "unwrap",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::iter::adapters::map::Map")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::Range")
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ];
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.path
                                                                                              "i32"
                                                                                          ]
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ])
                                                                                  ],
                                                                                [],
                                                                                "reduce",
                                                                                [
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                            [ F ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                            [ F ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                                      [ F ])
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::Range")
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ],
                                                                                    [],
                                                                                    "map",
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.path
                                                                                                "i32"
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                                          [ F ])
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::collect::IntoIterator",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::ops::range::Range")
                                                                                          [
                                                                                            Ty.path
                                                                                              "i32"
                                                                                          ],
                                                                                        [],
                                                                                        "into_iter",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        Value.StructRecord
                                                                                          "core::ops::range::Range"
                                                                                          [
                                                                                            ("start",
                                                                                              Value.Integer
                                                                                                0);
                                                                                            ("end_",
                                                                                              Value.Integer
                                                                                                4)
                                                                                          ]
                                                                                      ]
                                                                                    |);
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α0
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          x :=
                                                                                                      M.copy (|
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.read (|
                                                                                                      M.match_operator (|
                                                                                                        M.alloc (|
                                                                                                          Value.Tuple
                                                                                                            []
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ :=
                                                                                                                M.use
                                                                                                                  (M.alloc (|
                                                                                                                    BinOp.Pure.eq
                                                                                                                      (M.read (|
                                                                                                                        x
                                                                                                                      |))
                                                                                                                      (Value.Integer
                                                                                                                        0)
                                                                                                                  |)) in
                                                                                                              let
                                                                                                                    _ :=
                                                                                                                M.is_constant_or_break_match (|
                                                                                                                  M.read (|
                                                                                                                    γ
                                                                                                                  |),
                                                                                                                  Value.Bool
                                                                                                                    true
                                                                                                                |) in
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ],
                                                                                                                    "query_advice",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      meta
                                                                                                                    |);
                                                                                                                    M.read (|
                                                                                                                      result
                                                                                                                    |);
                                                                                                                    Value.StructTuple
                                                                                                                      "halo2_proofs::poly::Rotation"
                                                                                                                      [
                                                                                                                        Value.Integer
                                                                                                                          1
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)));
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::ops::arith::Mul",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ],
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                                                        [
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                    "mul",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_associated_function (|
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                                          [
                                                                                                                            F
                                                                                                                          ],
                                                                                                                        "query_advice",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        M.read (|
                                                                                                                          meta
                                                                                                                        |);
                                                                                                                        M.read (|
                                                                                                                          result
                                                                                                                        |);
                                                                                                                        Value.StructTuple
                                                                                                                          "halo2_proofs::poly::Rotation"
                                                                                                                          [
                                                                                                                            BinOp.Panic.add (|
                                                                                                                              Integer.I32,
                                                                                                                              M.read (|
                                                                                                                                x
                                                                                                                              |),
                                                                                                                              Value.Integer
                                                                                                                                1
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                    |);
                                                                                                                    Value.StructTuple
                                                                                                                      "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                                                                      [
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_trait_method (|
                                                                                                                            "core::convert::From",
                                                                                                                            F,
                                                                                                                            [
                                                                                                                              Ty.path
                                                                                                                                "u64"
                                                                                                                            ],
                                                                                                                            "from",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.read (|
                                                                                                                              M.use
                                                                                                                                (M.alloc (|
                                                                                                                                  BinOp.Panic.shl (|
                                                                                                                                    Value.Integer
                                                                                                                                      1,
                                                                                                                                    BinOp.Panic.mul (|
                                                                                                                                      Integer.I32,
                                                                                                                                      Value.Integer
                                                                                                                                        8,
                                                                                                                                      M.read (|
                                                                                                                                        x
                                                                                                                                      |)
                                                                                                                                    |)
                                                                                                                                  |)
                                                                                                                                |))
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)))
                                                                                                        ]
                                                                                                      |)
                                                                                                    |)))
                                                                                              ]
                                                                                            |)
                                                                                          | _ =>
                                                                                            M.impossible (||)
                                                                                          end))
                                                                                  ]
                                                                                |);
                                                                                M.closure
                                                                                  (fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      match γ with
                                                                                      | [ α0; α1
                                                                                          ] =>
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            α0
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      acc :=
                                                                                                  M.copy (|
                                                                                                    γ
                                                                                                  |) in
                                                                                                M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    α1
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              x :=
                                                                                                          M.copy (|
                                                                                                            γ
                                                                                                          |) in
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::arith::Add",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                                                              [
                                                                                                                F
                                                                                                              ],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                            ],
                                                                                                            "add",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              acc
                                                                                                            |);
                                                                                                            M.read (|
                                                                                                              x
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)
                                                                                      | _ =>
                                                                                        M.impossible (||)
                                                                                      end))
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| result |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "cur",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::clone::Clone",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [],
                                                                    "clone",
                                                                    []
                                                                  |),
                                                                  [ is_bit ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Mul",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "mul",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_fixed",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| u32_sel |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Sub",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "sub",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::option::Option")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                                  [ F ]
                                                                              ],
                                                                            "unwrap",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_trait_method (|
                                                                                "core::iter::traits::iterator::Iterator",
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "core::iter::adapters::map::Map")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::Range")
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ];
                                                                                    Ty.function
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [
                                                                                            Ty.path
                                                                                              "i32"
                                                                                          ]
                                                                                      ]
                                                                                      (Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ])
                                                                                  ],
                                                                                [],
                                                                                "reduce",
                                                                                [
                                                                                  Ty.function
                                                                                    [
                                                                                      Ty.tuple
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                            [ F ];
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                                            [ F ]
                                                                                        ]
                                                                                    ]
                                                                                    (Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                                      [ F ])
                                                                                ]
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::ops::range::Range")
                                                                                      [
                                                                                        Ty.path
                                                                                          "i32"
                                                                                      ],
                                                                                    [],
                                                                                    "map",
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                                        [ F ];
                                                                                      Ty.function
                                                                                        [
                                                                                          Ty.tuple
                                                                                            [
                                                                                              Ty.path
                                                                                                "i32"
                                                                                            ]
                                                                                        ]
                                                                                        (Ty.apply
                                                                                          (Ty.path
                                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                                          [ F ])
                                                                                    ]
                                                                                  |),
                                                                                  [
                                                                                    M.call_closure (|
                                                                                      M.get_trait_method (|
                                                                                        "core::iter::traits::collect::IntoIterator",
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "core::ops::range::Range")
                                                                                          [
                                                                                            Ty.path
                                                                                              "i32"
                                                                                          ],
                                                                                        [],
                                                                                        "into_iter",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        Value.StructRecord
                                                                                          "core::ops::range::Range"
                                                                                          [
                                                                                            ("start",
                                                                                              Value.Integer
                                                                                                0);
                                                                                            ("end_",
                                                                                              Value.Integer
                                                                                                4)
                                                                                          ]
                                                                                      ]
                                                                                    |);
                                                                                    M.closure
                                                                                      (fun γ =>
                                                                                        ltac:(M.monadic
                                                                                          match γ
                                                                                          with
                                                                                          | [ α0
                                                                                              ] =>
                                                                                            M.match_operator (|
                                                                                              M.alloc (|
                                                                                                α0
                                                                                              |),
                                                                                              [
                                                                                                fun
                                                                                                    γ =>
                                                                                                  ltac:(M.monadic
                                                                                                    (let
                                                                                                          x :=
                                                                                                      M.copy (|
                                                                                                        γ
                                                                                                      |) in
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                                          [
                                                                                                            F
                                                                                                          ],
                                                                                                        "query_advice",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          meta
                                                                                                        |);
                                                                                                        M.read (|
                                                                                                          result
                                                                                                        |);
                                                                                                        Value.StructTuple
                                                                                                          "halo2_proofs::poly::Rotation"
                                                                                                          [
                                                                                                            BinOp.Panic.add (|
                                                                                                              Integer.I32,
                                                                                                              Value.Integer
                                                                                                                1,
                                                                                                              M.read (|
                                                                                                                x
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                      ]
                                                                                                    |)))
                                                                                              ]
                                                                                            |)
                                                                                          | _ =>
                                                                                            M.impossible (||)
                                                                                          end))
                                                                                  ]
                                                                                |);
                                                                                M.closure
                                                                                  (fun γ =>
                                                                                    ltac:(M.monadic
                                                                                      match γ with
                                                                                      | [ α0; α1
                                                                                          ] =>
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            α0
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      acc :=
                                                                                                  M.copy (|
                                                                                                    γ
                                                                                                  |) in
                                                                                                M.match_operator (|
                                                                                                  M.alloc (|
                                                                                                    α1
                                                                                                  |),
                                                                                                  [
                                                                                                    fun
                                                                                                        γ =>
                                                                                                      ltac:(M.monadic
                                                                                                        (let
                                                                                                              x :=
                                                                                                          M.copy (|
                                                                                                            γ
                                                                                                          |) in
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::arith::Add",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                                                              [
                                                                                                                F
                                                                                                              ],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                            ],
                                                                                                            "add",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              acc
                                                                                                            |);
                                                                                                            M.read (|
                                                                                                              x
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)))
                                                                                                  ]
                                                                                                |)))
                                                                                          ]
                                                                                        |)
                                                                                      | _ =>
                                                                                        M.impossible (||)
                                                                                      end))
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| result |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "cur",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.read (| is_popcnt |)
                                                              ]
                                                            |)
                                                          ]
                                                      |)
                                                    ]
                                                  |)
                                                |))
                                            ]
                                          |)
                                        |)
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end))
                    ]
                  |)
                |) in
              let _ :=
                M.alloc (|
                  M.call_closure (|
                    M.get_associated_function (|
                      Ty.apply (Ty.path "halo2_proofs::plonk::circuit::ConstraintSystem") [ F ],
                      "create_gate",
                      [
                        Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                        Ty.apply
                          (Ty.path "alloc::vec::Vec")
                          [
                            Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                            Ty.path "alloc::alloc::Global"
                          ];
                        Ty.function
                          [
                            Ty.tuple
                              [
                                Ty.apply
                                  (Ty.path "&mut")
                                  [
                                    Ty.apply
                                      (Ty.path "halo2_proofs::plonk::circuit::VirtualCells")
                                      [ F ]
                                  ]
                              ]
                          ]
                          (Ty.apply
                            (Ty.path "alloc::vec::Vec")
                            [
                              Ty.apply (Ty.path "halo2_proofs::plonk::circuit::Expression") [ F ];
                              Ty.path "alloc::alloc::Global"
                            ])
                      ]
                    |),
                    [
                      M.read (| meta |);
                      M.read (| Value.String "bit table: 3. acc u64" |);
                      M.closure
                        (fun γ =>
                          ltac:(M.monadic
                            match γ with
                            | [ α0 ] =>
                              M.match_operator (|
                                M.alloc (| α0 |),
                                [
                                  fun γ =>
                                    ltac:(M.monadic
                                      (let meta := M.copy (| γ |) in
                                      M.read (|
                                        let is_popcnt :=
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path
                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                  [ F ],
                                                "query_advice",
                                                []
                                              |),
                                              [
                                                M.read (| meta |);
                                                M.read (| helper |);
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path "halo2_proofs::poly::Rotation",
                                                    "cur",
                                                    []
                                                  |),
                                                  []
                                                |)
                                              ]
                                            |)
                                          |) in
                                        let is_bit :=
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_trait_method (|
                                                "core::ops::arith::Sub",
                                                Ty.apply
                                                  (Ty.path
                                                    "halo2_proofs::plonk::circuit::Expression")
                                                  [ F ],
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "halo2_proofs::plonk::circuit::Expression")
                                                    [ F ]
                                                ],
                                                "sub",
                                                []
                                              |),
                                              [
                                                Value.StructTuple
                                                  "halo2_proofs::plonk::circuit::Expression::Constant"
                                                  [
                                                    M.call_closure (|
                                                      M.get_trait_method (|
                                                        "core::convert::From",
                                                        F,
                                                        [ Ty.path "u64" ],
                                                        "from",
                                                        []
                                                      |),
                                                      [
                                                        M.read (|
                                                          M.use (M.alloc (| Value.Integer 1 |))
                                                        |)
                                                      ]
                                                    |)
                                                  ];
                                                M.call_closure (|
                                                  M.get_trait_method (|
                                                    "core::clone::Clone",
                                                    Ty.apply
                                                      (Ty.path
                                                        "halo2_proofs::plonk::circuit::Expression")
                                                      [ F ],
                                                    [],
                                                    "clone",
                                                    []
                                                  |),
                                                  [ is_popcnt ]
                                                |)
                                              ]
                                            |)
                                          |) in
                                        M.alloc (|
                                          M.call_closure (|
                                            M.get_associated_function (|
                                              Ty.apply
                                                (Ty.path "slice")
                                                [
                                                  Ty.apply
                                                    (Ty.path
                                                      "halo2_proofs::plonk::circuit::Expression")
                                                    [ F ]
                                                ],
                                              "into_vec",
                                              [ Ty.path "alloc::alloc::Global" ]
                                            |),
                                            [
                                              (* Unsize *)
                                              M.pointer_coercion
                                                (M.read (|
                                                  M.call_closure (|
                                                    M.get_associated_function (|
                                                      Ty.apply
                                                        (Ty.path "alloc::boxed::Box")
                                                        [
                                                          Ty.apply
                                                            (Ty.path "array")
                                                            [
                                                              Ty.apply
                                                                (Ty.path
                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                [ F ]
                                                            ];
                                                          Ty.path "alloc::alloc::Global"
                                                        ],
                                                      "new",
                                                      []
                                                    |),
                                                    [
                                                      M.alloc (|
                                                        Value.Array
                                                          [
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| block_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Sub",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "sub",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Sub",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "sub",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| left |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "prev",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| left |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "cur",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Mul",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "mul",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| left |);
                                                                            Value.StructTuple
                                                                              "halo2_proofs::poly::Rotation"
                                                                              [ Value.Integer 5 ]
                                                                          ]
                                                                        |);
                                                                        Value.StructTuple
                                                                          "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_trait_method (|
                                                                                "core::convert::From",
                                                                                F,
                                                                                [ Ty.path "u64" ],
                                                                                "from",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      BinOp.Panic.shl (|
                                                                                        Value.Integer
                                                                                          1,
                                                                                        Value.Integer
                                                                                          32
                                                                                      |)
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::VirtualCells")
                                                                      [ F ],
                                                                    "query_fixed",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.read (| meta |);
                                                                    M.read (| block_sel |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.path
                                                                          "halo2_proofs::poly::Rotation",
                                                                        "cur",
                                                                        []
                                                                      |),
                                                                      []
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Sub",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "sub",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Sub",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "sub",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| right |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "prev",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| right |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "cur",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Mul",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "mul",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| right |);
                                                                            Value.StructTuple
                                                                              "halo2_proofs::poly::Rotation"
                                                                              [ Value.Integer 5 ]
                                                                          ]
                                                                        |);
                                                                        Value.StructTuple
                                                                          "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_trait_method (|
                                                                                "core::convert::From",
                                                                                F,
                                                                                [ Ty.path "u64" ],
                                                                                "from",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (|
                                                                                  M.use
                                                                                    (M.alloc (|
                                                                                      BinOp.Panic.shl (|
                                                                                        Value.Integer
                                                                                          1,
                                                                                        Value.Integer
                                                                                          32
                                                                                      |)
                                                                                    |))
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Mul",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "mul",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_fixed",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| block_sel |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Sub",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "sub",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::arith::Sub",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ],
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                                [ F ]
                                                                            ],
                                                                            "sub",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                  [ F ],
                                                                                "query_advice",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (| meta |);
                                                                                M.read (| result |);
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "halo2_proofs::poly::Rotation",
                                                                                    "prev",
                                                                                    []
                                                                                  |),
                                                                                  []
                                                                                |)
                                                                              ]
                                                                            |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                  [ F ],
                                                                                "query_advice",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (| meta |);
                                                                                M.read (| result |);
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "halo2_proofs::poly::Rotation",
                                                                                    "cur",
                                                                                    []
                                                                                  |),
                                                                                  []
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::arith::Mul",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::Expression")
                                                                              [ F ],
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "halo2_proofs::plonk::circuit::Expression")
                                                                                [ F ]
                                                                            ],
                                                                            "mul",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::plonk::circuit::VirtualCells")
                                                                                  [ F ],
                                                                                "query_advice",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.read (| meta |);
                                                                                M.read (| result |);
                                                                                Value.StructTuple
                                                                                  "halo2_proofs::poly::Rotation"
                                                                                  [ Value.Integer 5
                                                                                  ]
                                                                              ]
                                                                            |);
                                                                            Value.StructTuple
                                                                              "halo2_proofs::plonk::circuit::Expression::Constant"
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::convert::From",
                                                                                    F,
                                                                                    [ Ty.path "u64"
                                                                                    ],
                                                                                    "from",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    M.read (|
                                                                                      M.use
                                                                                        (M.alloc (|
                                                                                          BinOp.Panic.shl (|
                                                                                            Value.Integer
                                                                                              1,
                                                                                            Value.Integer
                                                                                              32
                                                                                          |)
                                                                                        |))
                                                                                    |)
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::clone::Clone",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [],
                                                                    "clone",
                                                                    []
                                                                  |),
                                                                  [ is_bit ]
                                                                |)
                                                              ]
                                                            |);
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::ops::arith::Mul",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::plonk::circuit::Expression")
                                                                  [ F ],
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "halo2_proofs::plonk::circuit::Expression")
                                                                    [ F ]
                                                                ],
                                                                "mul",
                                                                []
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Mul",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "mul",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_fixed",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| block_sel |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.path
                                                                              "halo2_proofs::poly::Rotation",
                                                                            "cur",
                                                                            []
                                                                          |),
                                                                          []
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.read (| is_popcnt |)
                                                                  ]
                                                                |);
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::arith::Sub",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::plonk::circuit::Expression")
                                                                      [ F ],
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "halo2_proofs::plonk::circuit::Expression")
                                                                        [ F ]
                                                                    ],
                                                                    "sub",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::arith::Sub",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::Expression")
                                                                          [ F ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::plonk::circuit::Expression")
                                                                            [ F ]
                                                                        ],
                                                                        "sub",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| result |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "prev",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |);
                                                                        M.call_closure (|
                                                                          M.get_associated_function (|
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::plonk::circuit::VirtualCells")
                                                                              [ F ],
                                                                            "query_advice",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.read (| meta |);
                                                                            M.read (| result |);
                                                                            M.call_closure (|
                                                                              M.get_associated_function (|
                                                                                Ty.path
                                                                                  "halo2_proofs::poly::Rotation",
                                                                                "cur",
                                                                                []
                                                                              |),
                                                                              []
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::plonk::circuit::VirtualCells")
                                                                          [ F ],
                                                                        "query_advice",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.read (| meta |);
                                                                        M.read (| result |);
                                                                        Value.StructTuple
                                                                          "halo2_proofs::poly::Rotation"
                                                                          [ Value.Integer 5 ]
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          ]
                                                      |)
                                                    ]
                                                  |)
                                                |))
                                            ]
                                          |)
                                        |)
                                      |)))
                                ]
                              |)
                            | _ => M.impossible (||)
                            end))
                    ]
                  |)
                |) in
              M.alloc (|
                Value.StructRecord
                  "delphinus_zkwasm::circuits::bit_table::BitTableConfig"
                  [
                    ("block_sel", M.read (| block_sel |));
                    ("u32_sel", M.read (| u32_sel |));
                    ("lookup_sel", M.read (| lookup_sel |));
                    ("op", M.read (| op |));
                    ("helper", M.read (| helper |));
                    ("left", M.read (| left |));
                    ("right", M.read (| right |));
                    ("result", M.read (| result |));
                    ("_mark", Value.StructTuple "core::marker::PhantomData" [])
                  ]
              |)
            |)))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_configure :
        forall (F : Ty.t),
        M.IsAssociatedFunction (Self F) "configure" (configure F).
    End Impl_delphinus_zkwasm_circuits_bit_table_BitTableConfig_F.
    
    (* StructRecord
      {
        name := "BitTableChip";
        ty_params := [ "F" ];
        fields :=
          [
            ("config",
              Ty.apply (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableConfig") [ F ]);
            ("max_available_rows", Ty.path "usize")
          ];
      } *)
    
    Module Impl_delphinus_zkwasm_circuits_bit_table_BitTableChip_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply (Ty.path "delphinus_zkwasm::circuits::bit_table::BitTableChip") [ F ].
      
      (*
          pub fn new(config: BitTableConfig<F>, max_available_rows: usize) -> Self {
              BitTableChip {
                  config,
                  max_available_rows: max_available_rows / STEP_SIZE * STEP_SIZE,
              }
          }
      *)
      Definition new (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ config; max_available_rows ] =>
          ltac:(M.monadic
            (let config := M.alloc (| config |) in
            let max_available_rows := M.alloc (| max_available_rows |) in
            Value.StructRecord
              "delphinus_zkwasm::circuits::bit_table::BitTableChip"
              [
                ("config", M.read (| config |));
                ("max_available_rows",
                  BinOp.Panic.mul (|
                    Integer.Usize,
                    BinOp.Panic.div (|
                      Integer.Usize,
                      M.read (| max_available_rows |),
                      M.read (|
                        M.get_constant (| "delphinus_zkwasm::circuits::bit_table::STEP_SIZE" |)
                      |)
                    |),
                    M.read (|
                      M.get_constant (| "delphinus_zkwasm::circuits::bit_table::STEP_SIZE" |)
                    |)
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_new :
        forall (F : Ty.t),
        M.IsAssociatedFunction (Self F) "new" (new F).
    End Impl_delphinus_zkwasm_circuits_bit_table_BitTableChip_F.
  End bit_table.
End circuits.
