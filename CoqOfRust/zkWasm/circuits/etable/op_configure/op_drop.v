(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module circuits.
  Module etable.
    Module op_configure.
      Module op_drop.
        (* StructTuple
          {
            name := "DropConfig";
            ty_params := [];
            fields := [];
          } *)
        
        (* StructTuple
          {
            name := "DropConfigBuilder";
            ty_params := [];
            fields := [];
          } *)
        
        Module Impl_delphinus_zkwasm_circuits_etable_EventTableOpcodeConfigBuilder_where_pairing_bn256_arithmetic_fields_FieldExt_F_F_for_delphinus_zkwasm_circuits_etable_op_configure_op_drop_DropConfigBuilder.
          Definition Self (F : Ty.t) : Ty.t :=
            Ty.path "delphinus_zkwasm::circuits::etable::op_configure::op_drop::DropConfigBuilder".
          
          (*
              fn configure(
                  _: &EventTableCommonConfig<F>,
                  _: &mut EventTableCellAllocator<F>,
                  _: &mut ConstraintBuilder<F>,
              ) -> Box<dyn EventTableOpcodeConfig<F>> {
                  Box::new(DropConfig)
              }
          *)
          Definition configure (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
            let Self : Ty.t := Self F in
            match τ, α with
            | [], [ β0; β1; β2 ] =>
              ltac:(M.monadic
                (let β0 := M.alloc (| β0 |) in
                let β1 := M.alloc (| β1 |) in
                let β2 := M.alloc (| β2 |) in
                M.match_operator (|
                  β0,
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (M.match_operator (|
                          β1,
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (M.match_operator (|
                                  β2,
                                  [
                                    fun γ =>
                                      ltac:(M.monadic
                                        (* Unsize *)
                                        (M.pointer_coercion
                                          (* Unsize *)
                                          (M.pointer_coercion
                                            (M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path "alloc::boxed::Box")
                                                  [
                                                    Ty.path
                                                      "delphinus_zkwasm::circuits::etable::op_configure::op_drop::DropConfig";
                                                    Ty.path "alloc::alloc::Global"
                                                  ],
                                                "new",
                                                []
                                              |),
                                              [
                                                Value.StructTuple
                                                  "delphinus_zkwasm::circuits::etable::op_configure::op_drop::DropConfig"
                                                  []
                                              ]
                                            |)))))
                                  ]
                                |)))
                          ]
                        |)))
                  ]
                |)))
            | _, _ => M.impossible
            end.
          
          Axiom Implements :
            forall (F : Ty.t),
            M.IsTraitInstance
              "delphinus_zkwasm::circuits::etable::EventTableOpcodeConfigBuilder"
              (Self F)
              (* Trait polymorphic types *) [ (* F *) F ]
              (* Instance *) [ ("configure", InstanceField.Method (configure F)) ].
        End Impl_delphinus_zkwasm_circuits_etable_EventTableOpcodeConfigBuilder_where_pairing_bn256_arithmetic_fields_FieldExt_F_F_for_delphinus_zkwasm_circuits_etable_op_configure_op_drop_DropConfigBuilder.
        
        Module Impl_delphinus_zkwasm_circuits_etable_EventTableOpcodeConfig_where_pairing_bn256_arithmetic_fields_FieldExt_F_F_for_delphinus_zkwasm_circuits_etable_op_configure_op_drop_DropConfig.
          Definition Self (F : Ty.t) : Ty.t :=
            Ty.path "delphinus_zkwasm::circuits::etable::op_configure::op_drop::DropConfig".
          
          (*
              fn opcode(&self, _: &mut VirtualCells<'_, F>) -> Expression<F> {
                  constant_from_bn!(&(BigUint::from(OpcodeClass::Drop as u64) << OPCODE_CLASS_SHIFT))
              }
          *)
          Definition opcode (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
            let Self : Ty.t := Self F in
            match τ, α with
            | [], [ self; β1 ] =>
              ltac:(M.monadic
                (let self := M.alloc (| self |) in
                let β1 := M.alloc (| β1 |) in
                M.match_operator (|
                  β1,
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (Value.StructTuple
                          "halo2_proofs::plonk::circuit::Expression::Constant"
                          [
                            M.call_closure (|
                              M.get_function (|
                                "delphinus_zkwasm::circuits::utils::bn_to_field",
                                [ F ]
                              |),
                              [
                                M.alloc (|
                                  M.call_closure (|
                                    M.get_trait_method (|
                                      "core::ops::bit::Shl",
                                      Ty.path "num_bigint::biguint::BigUint",
                                      [ Ty.path "u32" ],
                                      "shl",
                                      []
                                    |),
                                    [
                                      M.call_closure (|
                                        M.get_trait_method (|
                                          "core::convert::From",
                                          Ty.path "num_bigint::biguint::BigUint",
                                          [ Ty.path "u64" ],
                                          "from",
                                          []
                                        |),
                                        [
                                          M.rust_cast
                                            (BinOp.Panic.add (|
                                              Integer.Isize,
                                              M.get_constant (|
                                                "specs::itable::OpcodeClass::LocalGet_discriminant"
                                              |),
                                              Value.Integer 6
                                            |))
                                        ]
                                      |);
                                      M.read (|
                                        M.get_constant (| "specs::itable::OPCODE_CLASS_SHIFT" |)
                                      |)
                                    ]
                                  |)
                                |)
                              ]
                            |)
                          ]))
                  ]
                |)))
            | _, _ => M.impossible
            end.
          
          (*
              fn assign(
                  &self,
                  _: &mut Context<'_, F>,
                  _: &StepStatus,
                  entry: &EventTableEntryWithMemoryInfo,
              ) -> Result<(), Error> {
                  match &entry.eentry.step_info {
                      StepInfo::Drop => Ok(()),
                      _ => unreachable!(),
                  }
              }
          *)
          Definition assign (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
            let Self : Ty.t := Self F in
            match τ, α with
            | [], [ self; β1; β2; entry ] =>
              ltac:(M.monadic
                (let self := M.alloc (| self |) in
                let β1 := M.alloc (| β1 |) in
                let β2 := M.alloc (| β2 |) in
                let entry := M.alloc (| entry |) in
                M.match_operator (|
                  β1,
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (M.match_operator (|
                          β2,
                          [
                            fun γ =>
                              ltac:(M.monadic
                                (M.read (|
                                  M.match_operator (|
                                    M.alloc (|
                                      M.SubPointer.get_struct_record_field (|
                                        M.SubPointer.get_struct_record_field (|
                                          M.read (| entry |),
                                          "delphinus_zkwasm::circuits::utils::table_entry::EventTableEntryWithMemoryInfo",
                                          "eentry"
                                        |),
                                        "specs::etable::EventTableEntry",
                                        "step_info"
                                      |)
                                    |),
                                    [
                                      fun γ =>
                                        ltac:(M.monadic
                                          (let γ := M.read (| γ |) in
                                          M.alloc (|
                                            Value.StructTuple
                                              "core::result::Result::Ok"
                                              [ Value.Tuple [] ]
                                          |)));
                                      fun γ =>
                                        ltac:(M.monadic
                                          (M.alloc (|
                                            M.never_to_any (|
                                              M.call_closure (|
                                                M.get_function (| "core::panicking::panic", [] |),
                                                [
                                                  M.read (|
                                                    Value.String
                                                      "internal error: entered unreachable code"
                                                  |)
                                                ]
                                              |)
                                            |)
                                          |)))
                                    ]
                                  |)
                                |)))
                          ]
                        |)))
                  ]
                |)))
            | _, _ => M.impossible
            end.
          
          (*
              fn sp_diff(&self, _: &mut VirtualCells<'_, F>) -> Option<Expression<F>> {
                  Some(constant_from!(1))
              }
          *)
          Definition sp_diff (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
            let Self : Ty.t := Self F in
            match τ, α with
            | [], [ self; β1 ] =>
              ltac:(M.monadic
                (let self := M.alloc (| self |) in
                let β1 := M.alloc (| β1 |) in
                M.match_operator (|
                  β1,
                  [
                    fun γ =>
                      ltac:(M.monadic
                        (Value.StructTuple
                          "core::option::Option::Some"
                          [
                            Value.StructTuple
                              "halo2_proofs::plonk::circuit::Expression::Constant"
                              [
                                M.call_closure (|
                                  M.get_trait_method (|
                                    "core::convert::From",
                                    F,
                                    [ Ty.path "u64" ],
                                    "from",
                                    []
                                  |),
                                  [ M.read (| M.use (M.alloc (| Value.Integer 1 |)) |) ]
                                |)
                              ]
                          ]))
                  ]
                |)))
            | _, _ => M.impossible
            end.
          
          Axiom Implements :
            forall (F : Ty.t),
            M.IsTraitInstance
              "delphinus_zkwasm::circuits::etable::EventTableOpcodeConfig"
              (Self F)
              (* Trait polymorphic types *) [ (* F *) F ]
              (* Instance *)
              [
                ("opcode", InstanceField.Method (opcode F));
                ("assign", InstanceField.Method (assign F));
                ("sp_diff", InstanceField.Method (sp_diff F))
              ].
        End Impl_delphinus_zkwasm_circuits_etable_EventTableOpcodeConfig_where_pairing_bn256_arithmetic_fields_FieldExt_F_F_for_delphinus_zkwasm_circuits_etable_op_configure_op_drop_DropConfig.
      End op_drop.
    End op_configure.
  End etable.
End circuits.
