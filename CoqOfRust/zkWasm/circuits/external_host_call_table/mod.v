(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module circuits.
  Module external_host_call_table.
    (* StructRecord
      {
        name := "ExternalHostCallTableConfig";
        ty_params := [ "F" ];
        fields :=
          [
            ("idx",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ]);
            ("opcode",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("operand",
              Ty.apply
                (Ty.path "halo2_proofs::plonk::circuit::Column")
                [ Ty.path "halo2_proofs::plonk::circuit::Advice" ]);
            ("_phantom", Ty.apply (Ty.path "core::marker::PhantomData") [ F ])
          ];
      } *)
    
    Module Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_external_host_call_table_ExternalHostCallTableConfig_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path
            "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig")
          [ F ].
      
      (* Clone *)
      Definition clone (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ self ] =>
          ltac:(M.monadic
            (let self := M.alloc (| self |) in
            Value.StructRecord
              "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig"
              [
                ("idx",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Fixed" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig",
                        "idx"
                      |)
                    ]
                  |));
                ("opcode",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig",
                        "opcode"
                      |)
                    ]
                  |));
                ("operand",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply
                        (Ty.path "halo2_proofs::plonk::circuit::Column")
                        [ Ty.path "halo2_proofs::plonk::circuit::Advice" ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig",
                        "operand"
                      |)
                    ]
                  |));
                ("_phantom",
                  M.call_closure (|
                    M.get_trait_method (|
                      "core::clone::Clone",
                      Ty.apply (Ty.path "core::marker::PhantomData") [ F ],
                      [],
                      "clone",
                      []
                    |),
                    [
                      M.SubPointer.get_struct_record_field (|
                        M.read (| self |),
                        "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig",
                        "_phantom"
                      |)
                    ]
                  |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom Implements :
        forall (F : Ty.t),
        M.IsTraitInstance
          "core::clone::Clone"
          (Self F)
          (* Trait polymorphic types *) []
          (* Instance *) [ ("clone", InstanceField.Method (clone F)) ].
    End Impl_core_clone_Clone_where_core_clone_Clone_F_where_pairing_bn256_arithmetic_fields_FieldExt_F_for_delphinus_zkwasm_circuits_external_host_call_table_ExternalHostCallTableConfig_F.
    
    (* StructRecord
      {
        name := "ExternalHostCallChip";
        ty_params := [ "F" ];
        fields :=
          [
            ("config",
              Ty.apply
                (Ty.path
                  "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallTableConfig")
                [ F ]);
            ("maximal_available_rows", Ty.path "usize")
          ];
      } *)
    
    Module Impl_delphinus_zkwasm_circuits_external_host_call_table_ExternalHostCallChip_F.
      Definition Self (F : Ty.t) : Ty.t :=
        Ty.apply
          (Ty.path "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallChip")
          [ F ].
      
      (*
          pub fn new(config: ExternalHostCallTableConfig<F>, maximal_available_rows: usize) -> Self {
              Self {
                  config,
                  maximal_available_rows,
              }
          }
      *)
      Definition new (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
        let Self : Ty.t := Self F in
        match τ, α with
        | [], [ config; maximal_available_rows ] =>
          ltac:(M.monadic
            (let config := M.alloc (| config |) in
            let maximal_available_rows := M.alloc (| maximal_available_rows |) in
            Value.StructRecord
              "delphinus_zkwasm::circuits::external_host_call_table::ExternalHostCallChip"
              [
                ("config", M.read (| config |));
                ("maximal_available_rows", M.read (| maximal_available_rows |))
              ]))
        | _, _ => M.impossible
        end.
      
      Axiom AssociatedFunction_new :
        forall (F : Ty.t),
        M.IsAssociatedFunction (Self F) "new" (new F).
    End Impl_delphinus_zkwasm_circuits_external_host_call_table_ExternalHostCallChip_F.
  End external_host_call_table.
End circuits.
