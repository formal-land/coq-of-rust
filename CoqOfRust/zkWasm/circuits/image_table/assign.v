(* Generated by coq-of-rust *)
Require Import CoqOfRust.CoqOfRust.

Module circuits.
  Module image_table.
    Module assign.
      Module Impl_delphinus_zkwasm_circuits_image_table_ImageTableChip_F.
        Definition Self (F : Ty.t) : Ty.t :=
          Ty.apply (Ty.path "delphinus_zkwasm::circuits::image_table::ImageTableChip") [ F ].
        
        (*
            pub(crate) fn assign(
                &self,
                layouter: impl Layouter<F>,
                image_table_assigner: &ImageTableAssigner,
                image_table: ImageTableLayouter<F>,
            ) -> Result<ImageTableLayouter<AssignedCell<F, F>>, Error> {
                layouter.assign_region(
                    || "pre image table",
                    |region| {
                        let ctx = Rc::new(RefCell::new(Context::new(region)));
        
                        let initialization_state_handler = |base_offset| {
                            ctx.borrow_mut().offset = base_offset;
        
                            let assign_handler = |field: &F| assign!(ctx, self.config.col, *field);
        
                            let initialization_state = image_table
                                .initialization_state
                                .map(assign_handler, assign_handler);
        
                            initialization_state.transpose()
                        };
        
                        let static_frame_entries_handler = |base_offset| {
                            ctx.borrow_mut().offset = base_offset;
        
                            let mut cells = vec![];
        
                            for (enable, entry) in &image_table.static_frame_entries {
                                let enable = assign!(ctx, self.config.col, *enable)?;
                                let entry = assign!(ctx, self.config.col, *entry)?;
        
                                cells.push((enable, entry));
                            }
        
                            Ok(cells.try_into().expect(&format!(
                                "The number of static frame entries should be {}",
                                STATIC_FRAME_ENTRY_NUMBER
                            )))
                        };
        
                        let instruction_handler = |base_offset| {
                            ctx.borrow_mut().offset = base_offset;
        
                            image_table
                                .instructions
                                .iter()
                                .map(|entry| assign!(ctx, self.config.col, *entry))
                                .collect::<Result<Vec<_>, Error>>()
                        };
        
                        let br_table_handler = |base_offset| {
                            ctx.borrow_mut().offset = base_offset;
        
                            image_table
                                .br_table_entires
                                .iter()
                                .map(|entry| assign!(ctx, self.config.col, *entry))
                                .collect::<Result<Vec<_>, Error>>()
                        };
        
                        let padding_handler = |start_offset, end_offset| {
                            ctx.borrow_mut().offset = start_offset;
        
                            (start_offset..end_offset)
                                .map(|_| assign!(ctx, self.config.col, F::zero()))
                                .collect::<Result<Vec<_>, Error>>()
                        };
        
                        let init_memory_handler = |base_offset| {
                            // start from 'base_offset" because 'encode_compilation_table_values' have inserted an empty at the beginning.
                            ctx.borrow_mut().offset = base_offset;
        
                            image_table
                                .init_memory_entries
                                .iter()
                                .map(|entry| assign!(ctx, self.config.col, *entry))
                                .collect::<Result<Vec<_>, Error>>()
                        };
        
                        let result = image_table_assigner.exec(
                            initialization_state_handler,
                            static_frame_entries_handler,
                            instruction_handler,
                            br_table_handler,
                            padding_handler,
                            init_memory_handler,
                        )?;
        
                        Ok(ImageTableLayouter {
                            initialization_state: result.initialization_state,
                            static_frame_entries: result.static_frame_entries,
                            instructions: result.instructions,
                            br_table_entires: result.br_table_entires,
                            padding_entires: result.padding_entires,
                            init_memory_entries: result.init_memory_entries,
                        })
                    },
                )
            }
        "
        *)
        Definition assign (F : Ty.t) (τ : list Ty.t) (α : list Value.t) : M :=
          let Self : Ty.t := Self F in
          match τ, α with
          | [ impl_Layouter_F_ ], [ self; layouter; image_table_assigner; image_table ] =>
            ltac:(M.monadic
              (let self := M.alloc (| self |) in
              let layouter := M.alloc (| layouter |) in
              let image_table_assigner := M.alloc (| image_table_assigner |) in
              let image_table := M.alloc (| image_table |) in
              M.call_closure (|
                M.get_trait_method (|
                  "halo2_proofs::circuit::Layouter",
                  impl_Layouter_F_,
                  [ F ],
                  "assign_region",
                  [
                    Ty.function
                      [
                        Ty.tuple
                          [
                            Ty.apply
                              (Ty.path "&")
                              [ Ty.apply (Ty.path "halo2_proofs::circuit::Region") [ F ] ]
                          ]
                      ]
                      (Ty.apply
                        (Ty.path "core::result::Result")
                        [
                          Ty.apply
                            (Ty.path
                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                            [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ];
                          Ty.path "halo2_proofs::plonk::error::Error"
                        ]);
                    Ty.apply
                      (Ty.path "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                      [ Ty.apply (Ty.path "halo2_proofs::circuit::AssignedCell") [ F; F ] ];
                    Ty.function [ Ty.tuple [] ] (Ty.apply (Ty.path "&") [ Ty.path "str" ]);
                    Ty.apply (Ty.path "&") [ Ty.path "str" ]
                  ]
                |),
                [
                  layouter;
                  M.closure
                    (fun γ =>
                      ltac:(M.monadic
                        match γ with
                        | [ α0 ] =>
                          M.match_operator (|
                            M.alloc (| α0 |),
                            [
                              fun γ =>
                                ltac:(M.monadic (M.read (| Value.String "pre image table" |)))
                            ]
                          |)
                        | _ => M.impossible (||)
                        end));
                  M.closure
                    (fun γ =>
                      ltac:(M.monadic
                        match γ with
                        | [ α0 ] =>
                          M.match_operator (|
                            M.alloc (| α0 |),
                            [
                              fun γ =>
                                ltac:(M.monadic
                                  (let region := M.copy (| γ |) in
                                  M.read (|
                                    let ctx :=
                                      M.alloc (|
                                        M.call_closure (|
                                          M.get_associated_function (|
                                            Ty.apply
                                              (Ty.path "alloc::rc::Rc")
                                              [
                                                Ty.apply
                                                  (Ty.path "core::cell::RefCell")
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                      [ F ]
                                                  ];
                                                Ty.path "alloc::alloc::Global"
                                              ],
                                            "new",
                                            []
                                          |),
                                          [
                                            M.call_closure (|
                                              M.get_associated_function (|
                                                Ty.apply
                                                  (Ty.path "core::cell::RefCell")
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                      [ F ]
                                                  ],
                                                "new",
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                      [ F ],
                                                    "new",
                                                    []
                                                  |),
                                                  [ M.read (| region |) ]
                                                |)
                                              ]
                                            |)
                                          ]
                                        |)
                                      |) in
                                    let initialization_state_handler :=
                                      M.alloc (|
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                M.match_operator (|
                                                  M.alloc (| α0 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let base_offset := M.copy (| γ |) in
                                                        M.read (|
                                                          let _ :=
                                                            M.write (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::deref::DerefMut",
                                                                    Ty.apply
                                                                      (Ty.path "core::cell::RefMut")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                          [ F ]
                                                                      ],
                                                                    [],
                                                                    "deref_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::cell::RefCell")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                [ F ]
                                                                            ],
                                                                          "borrow_mut",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::rc::Rc")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::cell::RefCell")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                        [ F ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              "deref",
                                                                              []
                                                                            |),
                                                                            [ ctx ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |),
                                                                "delphinus_zkwasm::circuits::utils::Context",
                                                                "offset"
                                                              |),
                                                              M.read (| base_offset |)
                                                            |) in
                                                          let assign_handler :=
                                                            M.alloc (|
                                                              M.closure
                                                                (fun γ =>
                                                                  ltac:(M.monadic
                                                                    match γ with
                                                                    | [ α0 ] =>
                                                                      M.match_operator (|
                                                                        M.alloc (| α0 |),
                                                                        [
                                                                          fun γ =>
                                                                            ltac:(M.monadic
                                                                              (let field :=
                                                                                M.copy (| γ |) in
                                                                              M.read (|
                                                                                let offset :=
                                                                                  M.copy (|
                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                      M.call_closure (|
                                                                                        M.get_trait_method (|
                                                                                          "core::ops::deref::Deref",
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::cell::Ref")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                [ F
                                                                                                ]
                                                                                            ],
                                                                                          [],
                                                                                          "deref",
                                                                                          []
                                                                                        |),
                                                                                        [
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::cell::RefCell")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                  ],
                                                                                                "borrow",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.call_closure (|
                                                                                                  M.get_trait_method (|
                                                                                                    "core::ops::deref::Deref",
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "alloc::rc::Rc")
                                                                                                      [
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::cell::RefCell")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ];
                                                                                                        Ty.path
                                                                                                          "alloc::alloc::Global"
                                                                                                      ],
                                                                                                    [],
                                                                                                    "deref",
                                                                                                    []
                                                                                                  |),
                                                                                                  [
                                                                                                    ctx
                                                                                                  ]
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |)
                                                                                        ]
                                                                                      |),
                                                                                      "delphinus_zkwasm::circuits::utils::Context",
                                                                                      "offset"
                                                                                    |)
                                                                                  |) in
                                                                                let cell :=
                                                                                  M.copy (|
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::try_trait::Try",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::result::Result")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                                  [
                                                                                                    F;
                                                                                                    F
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                              ],
                                                                                            [],
                                                                                            "branch",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "halo2_proofs::circuit::Region")
                                                                                                  [
                                                                                                    F
                                                                                                  ],
                                                                                                "assign_fixed",
                                                                                                [
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        []
                                                                                                    ]
                                                                                                    (Ty.apply
                                                                                                      (Ty.path
                                                                                                        "core::result::Result")
                                                                                                      [
                                                                                                        F;
                                                                                                        Ty.path
                                                                                                          "halo2_proofs::plonk::error::Error"
                                                                                                      ]);
                                                                                                  F;
                                                                                                  Ty.function
                                                                                                    [
                                                                                                      Ty.tuple
                                                                                                        []
                                                                                                    ]
                                                                                                    (Ty.apply
                                                                                                      (Ty.path
                                                                                                        "&")
                                                                                                      [
                                                                                                        Ty.path
                                                                                                          "str"
                                                                                                      ]);
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "&")
                                                                                                    [
                                                                                                      Ty.path
                                                                                                        "str"
                                                                                                    ]
                                                                                                ]
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::deref::Deref",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::cell::RefMut")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ],
                                                                                                        [],
                                                                                                        "deref",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefCell")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              "borrow_mut",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::rc::Rc")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::cell::RefCell")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                            [
                                                                                                                              F
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  ctx
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |),
                                                                                                    "delphinus_zkwasm::circuits::utils::Context",
                                                                                                    "region"
                                                                                                  |)
                                                                                                |);
                                                                                                M.closure
                                                                                                  (fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      match
                                                                                                        γ
                                                                                                      with
                                                                                                      | [
                                                                                                            α0
                                                                                                          ] =>
                                                                                                        M.match_operator (|
                                                                                                          M.alloc (|
                                                                                                            α0
                                                                                                          |),
                                                                                                          [
                                                                                                            fun
                                                                                                                γ =>
                                                                                                              ltac:(M.monadic
                                                                                                                (M.read (|
                                                                                                                  Value.String
                                                                                                                    "pre image table"
                                                                                                                |)))
                                                                                                          ]
                                                                                                        |)
                                                                                                      | _ =>
                                                                                                        M.impossible (||)
                                                                                                      end));
                                                                                                M.read (|
                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                      M.read (|
                                                                                                        self
                                                                                                      |),
                                                                                                      "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                      "config"
                                                                                                    |),
                                                                                                    "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                    "col"
                                                                                                  |)
                                                                                                |);
                                                                                                M.read (|
                                                                                                  offset
                                                                                                |);
                                                                                                M.closure
                                                                                                  (fun
                                                                                                      γ =>
                                                                                                    ltac:(M.monadic
                                                                                                      match
                                                                                                        γ
                                                                                                      with
                                                                                                      | [
                                                                                                            α0
                                                                                                          ] =>
                                                                                                        M.match_operator (|
                                                                                                          M.alloc (|
                                                                                                            α0
                                                                                                          |),
                                                                                                          [
                                                                                                            fun
                                                                                                                γ =>
                                                                                                              ltac:(M.monadic
                                                                                                                (Value.StructTuple
                                                                                                                  "core::result::Result::Ok"
                                                                                                                  [
                                                                                                                    M.read (|
                                                                                                                      M.read (|
                                                                                                                        field
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  ]))
                                                                                                          ]
                                                                                                        |)
                                                                                                      | _ =>
                                                                                                        M.impossible (||)
                                                                                                      end))
                                                                                              ]
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  γ0_0 :=
                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                γ,
                                                                                                "core::ops::control_flow::ControlFlow::Break",
                                                                                                0
                                                                                              |) in
                                                                                            let
                                                                                                  residual :=
                                                                                              M.copy (|
                                                                                                γ0_0
                                                                                              |) in
                                                                                            M.alloc (|
                                                                                              M.never_to_any (|
                                                                                                M.read (|
                                                                                                  M.return_ (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::try_trait::FromResidual",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::result::Result")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                                                              [
                                                                                                                F;
                                                                                                                F
                                                                                                              ];
                                                                                                            Ty.path
                                                                                                              "halo2_proofs::plonk::error::Error"
                                                                                                          ],
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "core::convert::Infallible";
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ]
                                                                                                        ],
                                                                                                        "from_residual",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          residual
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                |)
                                                                                              |)
                                                                                            |)));
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (let
                                                                                                  γ0_0 :=
                                                                                              M.SubPointer.get_struct_tuple_field (|
                                                                                                γ,
                                                                                                "core::ops::control_flow::ControlFlow::Continue",
                                                                                                0
                                                                                              |) in
                                                                                            let
                                                                                                  val :=
                                                                                              M.copy (|
                                                                                                γ0_0
                                                                                              |) in
                                                                                            val))
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                let _ :=
                                                                                  M.alloc (|
                                                                                    M.call_closure (|
                                                                                      M.get_associated_function (|
                                                                                        Ty.apply
                                                                                          (Ty.path
                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                          [ F ],
                                                                                        "next",
                                                                                        []
                                                                                      |),
                                                                                      [
                                                                                        M.call_closure (|
                                                                                          M.get_trait_method (|
                                                                                            "core::ops::deref::DerefMut",
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "core::cell::RefMut")
                                                                                              [
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                  [
                                                                                                    F
                                                                                                  ]
                                                                                              ],
                                                                                            [],
                                                                                            "deref_mut",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_associated_function (|
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::cell::RefCell")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                    ],
                                                                                                  "borrow_mut",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_trait_method (|
                                                                                                      "core::ops::deref::Deref",
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "alloc::rc::Rc")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::cell::RefCell")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                            ];
                                                                                                          Ty.path
                                                                                                            "alloc::alloc::Global"
                                                                                                        ],
                                                                                                      [],
                                                                                                      "deref",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      ctx
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |)
                                                                                          ]
                                                                                        |)
                                                                                      ]
                                                                                    |)
                                                                                  |) in
                                                                                M.alloc (|
                                                                                  Value.StructTuple
                                                                                    "core::result::Result::Ok"
                                                                                    [
                                                                                      M.read (|
                                                                                        cell
                                                                                      |)
                                                                                    ]
                                                                                |)
                                                                              |)))
                                                                        ]
                                                                      |)
                                                                    | _ => M.impossible (||)
                                                                    end))
                                                            |) in
                                                          let initialization_state :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path
                                                                      "specs::state::InitializationState")
                                                                    [ F; F ],
                                                                  "map",
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                          [ F; F ];
                                                                        Ty.path
                                                                          "halo2_proofs::plonk::error::Error"
                                                                      ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [ F ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ]);
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [ F ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ])
                                                                  ]
                                                                |),
                                                                [
                                                                  M.SubPointer.get_struct_record_field (|
                                                                    image_table,
                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                    "initialization_state"
                                                                  |);
                                                                  M.read (| assign_handler |);
                                                                  M.read (| assign_handler |)
                                                                ]
                                                              |)
                                                            |) in
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_associated_function (|
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "specs::state::InitializationState")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                          [ F; F ];
                                                                        Ty.path
                                                                          "halo2_proofs::plonk::error::Error"
                                                                      ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                          [ F; F ];
                                                                        Ty.path
                                                                          "halo2_proofs::plonk::error::Error"
                                                                      ]
                                                                  ],
                                                                "transpose",
                                                                []
                                                              |),
                                                              [ M.read (| initialization_state |) ]
                                                            |)
                                                          |)
                                                        |)))
                                                  ]
                                                |)
                                              | _ => M.impossible (||)
                                              end))
                                      |) in
                                    let static_frame_entries_handler :=
                                      M.alloc (|
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                M.match_operator (|
                                                  M.alloc (| α0 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let base_offset := M.copy (| γ |) in
                                                        M.read (|
                                                          let _ :=
                                                            M.write (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::deref::DerefMut",
                                                                    Ty.apply
                                                                      (Ty.path "core::cell::RefMut")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                          [ F ]
                                                                      ],
                                                                    [],
                                                                    "deref_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::cell::RefCell")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                [ F ]
                                                                            ],
                                                                          "borrow_mut",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::rc::Rc")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::cell::RefCell")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                        [ F ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              "deref",
                                                                              []
                                                                            |),
                                                                            [ ctx ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |),
                                                                "delphinus_zkwasm::circuits::utils::Context",
                                                                "offset"
                                                              |),
                                                              M.read (| base_offset |)
                                                            |) in
                                                          let cells :=
                                                            M.alloc (|
                                                              M.call_closure (|
                                                                M.get_associated_function (|
                                                                  Ty.apply
                                                                    (Ty.path "alloc::vec::Vec")
                                                                    [
                                                                      Ty.tuple
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ]
                                                                        ];
                                                                      Ty.path "alloc::alloc::Global"
                                                                    ],
                                                                  "new",
                                                                  []
                                                                |),
                                                                []
                                                              |)
                                                            |) in
                                                          let _ :=
                                                            M.use
                                                              (M.match_operator (|
                                                                M.alloc (|
                                                                  M.call_closure (|
                                                                    M.get_trait_method (|
                                                                      "core::iter::traits::collect::IntoIterator",
                                                                      Ty.apply
                                                                        (Ty.path "&")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "array")
                                                                            [ Ty.tuple [ F; F ] ]
                                                                        ],
                                                                      [],
                                                                      "into_iter",
                                                                      []
                                                                    |),
                                                                    [
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        image_table,
                                                                        "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                        "static_frame_entries"
                                                                      |)
                                                                    ]
                                                                  |)
                                                                |),
                                                                [
                                                                  fun γ =>
                                                                    ltac:(M.monadic
                                                                      (let iter := M.copy (| γ |) in
                                                                      M.loop (|
                                                                        ltac:(M.monadic
                                                                          (let _ :=
                                                                            M.match_operator (|
                                                                              M.alloc (|
                                                                                M.call_closure (|
                                                                                  M.get_trait_method (|
                                                                                    "core::iter::traits::iterator::Iterator",
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "core::slice::iter::Iter")
                                                                                      [
                                                                                        Ty.tuple
                                                                                          [ F; F ]
                                                                                      ],
                                                                                    [],
                                                                                    "next",
                                                                                    []
                                                                                  |),
                                                                                  [ iter ]
                                                                                |)
                                                                              |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (M.alloc (|
                                                                                      M.never_to_any (|
                                                                                        M.read (|
                                                                                          M.break (||)
                                                                                        |)
                                                                                      |)
                                                                                    |)));
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let γ0_0 :=
                                                                                      M.SubPointer.get_struct_tuple_field (|
                                                                                        γ,
                                                                                        "core::option::Option::Some",
                                                                                        0
                                                                                      |) in
                                                                                    let γ0_0 :=
                                                                                      M.read (|
                                                                                        γ0_0
                                                                                      |) in
                                                                                    let γ2_0 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        0
                                                                                      |) in
                                                                                    let γ2_1 :=
                                                                                      M.SubPointer.get_tuple_field (|
                                                                                        γ0_0,
                                                                                        1
                                                                                      |) in
                                                                                    let enable :=
                                                                                      M.alloc (|
                                                                                        γ2_0
                                                                                      |) in
                                                                                    let entry :=
                                                                                      M.alloc (|
                                                                                        γ2_1
                                                                                      |) in
                                                                                    let enable :=
                                                                                      M.copy (|
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::try_trait::Try",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::result::Result")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                  ],
                                                                                                [],
                                                                                                "branch",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  let
                                                                                                        offset :=
                                                                                                    M.copy (|
                                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::cell::Ref")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                  [
                                                                                                                    F
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::cell::RefCell")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                        [
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                  "borrow",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::deref::Deref",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::rc::Rc")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::cell::RefCell")
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                [
                                                                                                                                  F
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ],
                                                                                                                      [],
                                                                                                                      "deref",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      ctx
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |),
                                                                                                        "delphinus_zkwasm::circuits::utils::Context",
                                                                                                        "offset"
                                                                                                      |)
                                                                                                    |) in
                                                                                                  let
                                                                                                        cell :=
                                                                                                    M.copy (|
                                                                                                      M.match_operator (|
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::Try",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "branch",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::Region")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ],
                                                                                                                  "assign_fixed",
                                                                                                                  [
                                                                                                                    Ty.function
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          []
                                                                                                                      ]
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::result::Result")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          Ty.path
                                                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                                                        ]);
                                                                                                                    F;
                                                                                                                    Ty.function
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          []
                                                                                                                      ]
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "str"
                                                                                                                        ]);
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "str"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.read (|
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::deref::Deref",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::cell::RefMut")
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                [
                                                                                                                                  F
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          [],
                                                                                                                          "deref",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "core::cell::RefCell")
                                                                                                                                  [
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                      [
                                                                                                                                        F
                                                                                                                                      ]
                                                                                                                                  ],
                                                                                                                                "borrow_mut",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::ops::deref::Deref",
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::rc::Rc")
                                                                                                                                      [
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "core::cell::RefCell")
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                              [
                                                                                                                                                F
                                                                                                                                              ]
                                                                                                                                          ];
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ],
                                                                                                                                    [],
                                                                                                                                    "deref",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    ctx
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |),
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context",
                                                                                                                      "region"
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.closure
                                                                                                                    (fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        match
                                                                                                                          γ
                                                                                                                        with
                                                                                                                        | [
                                                                                                                              α0
                                                                                                                            ] =>
                                                                                                                          M.match_operator (|
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (M.read (|
                                                                                                                                    Value.String
                                                                                                                                      "pre image table"
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        | _ =>
                                                                                                                          M.impossible (||)
                                                                                                                        end));
                                                                                                                  M.read (|
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                                                        M.read (|
                                                                                                                          self
                                                                                                                        |),
                                                                                                                        "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                                        "config"
                                                                                                                      |),
                                                                                                                      "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                                      "col"
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.read (|
                                                                                                                    offset
                                                                                                                  |);
                                                                                                                  M.closure
                                                                                                                    (fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        match
                                                                                                                          γ
                                                                                                                        with
                                                                                                                        | [
                                                                                                                              α0
                                                                                                                            ] =>
                                                                                                                          M.match_operator (|
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (Value.StructTuple
                                                                                                                                    "core::result::Result::Ok"
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        M.read (|
                                                                                                                                          enable
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    ]))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        | _ =>
                                                                                                                          M.impossible (||)
                                                                                                                        end))
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ0_0 :=
                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                  γ,
                                                                                                                  "core::ops::control_flow::ControlFlow::Break",
                                                                                                                  0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    residual :=
                                                                                                                M.copy (|
                                                                                                                  γ0_0
                                                                                                                |) in
                                                                                                              M.alloc (|
                                                                                                                M.never_to_any (|
                                                                                                                  M.read (|
                                                                                                                    M.return_ (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::try_trait::FromResidual",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::result::Result")
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                                        [
                                                                                                                                          F;
                                                                                                                                          F
                                                                                                                                        ];
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                                        [
                                                                                                                                          F;
                                                                                                                                          F
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                                            ],
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::result::Result")
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "core::convert::Infallible";
                                                                                                                                Ty.path
                                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                          "from_residual",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.read (|
                                                                                                                            residual
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)));
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ0_0 :=
                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                  γ,
                                                                                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                                                                                  0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    val :=
                                                                                                                M.copy (|
                                                                                                                  γ0_0
                                                                                                                |) in
                                                                                                              val))
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  let
                                                                                                        _ :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                            [
                                                                                                              F
                                                                                                            ],
                                                                                                          "next",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::deref::DerefMut",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefMut")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              [],
                                                                                                              "deref_mut",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::cell::RefCell")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                          [
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    "borrow_mut",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::deref::Deref",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::rc::Rc")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::cell::RefCell")
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                  [
                                                                                                                                    F
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        "deref",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        ctx
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    Value.StructTuple
                                                                                                      "core::result::Result::Ok"
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          cell
                                                                                                        |)
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Break",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      residual :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.never_to_any (|
                                                                                                    M.read (|
                                                                                                      M.return_ (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::try_trait::FromResidual",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "array")
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                                          [
                                                                                                                            F;
                                                                                                                            F
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                                          [
                                                                                                                            F;
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "core::convert::Infallible";
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ]
                                                                                                            ],
                                                                                                            "from_residual",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              residual
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      val :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                val))
                                                                                          ]
                                                                                        |)
                                                                                      |) in
                                                                                    let entry :=
                                                                                      M.copy (|
                                                                                        M.match_operator (|
                                                                                          M.alloc (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::try_trait::Try",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::result::Result")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ];
                                                                                                    Ty.path
                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                  ],
                                                                                                [],
                                                                                                "branch",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.read (|
                                                                                                  let
                                                                                                        offset :=
                                                                                                    M.copy (|
                                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::cell::Ref")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                  [
                                                                                                                    F
                                                                                                                  ]
                                                                                                              ],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.alloc (|
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::cell::RefCell")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                        [
                                                                                                                          F
                                                                                                                        ]
                                                                                                                    ],
                                                                                                                  "borrow",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::deref::Deref",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "alloc::rc::Rc")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::cell::RefCell")
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                [
                                                                                                                                  F
                                                                                                                                ]
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "alloc::alloc::Global"
                                                                                                                        ],
                                                                                                                      [],
                                                                                                                      "deref",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      ctx
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                ]
                                                                                                              |)
                                                                                                            |)
                                                                                                          ]
                                                                                                        |),
                                                                                                        "delphinus_zkwasm::circuits::utils::Context",
                                                                                                        "offset"
                                                                                                      |)
                                                                                                    |) in
                                                                                                  let
                                                                                                        cell :=
                                                                                                    M.copy (|
                                                                                                      M.match_operator (|
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::Try",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ],
                                                                                                              [],
                                                                                                              "branch",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_associated_function (|
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::Region")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ],
                                                                                                                  "assign_fixed",
                                                                                                                  [
                                                                                                                    Ty.function
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          []
                                                                                                                      ]
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::result::Result")
                                                                                                                        [
                                                                                                                          F;
                                                                                                                          Ty.path
                                                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                                                        ]);
                                                                                                                    F;
                                                                                                                    Ty.function
                                                                                                                      [
                                                                                                                        Ty.tuple
                                                                                                                          []
                                                                                                                      ]
                                                                                                                      (Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "&")
                                                                                                                        [
                                                                                                                          Ty.path
                                                                                                                            "str"
                                                                                                                        ]);
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "&")
                                                                                                                      [
                                                                                                                        Ty.path
                                                                                                                          "str"
                                                                                                                      ]
                                                                                                                  ]
                                                                                                                |),
                                                                                                                [
                                                                                                                  M.read (|
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::deref::Deref",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::cell::RefMut")
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                [
                                                                                                                                  F
                                                                                                                                ]
                                                                                                                            ],
                                                                                                                          [],
                                                                                                                          "deref",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.alloc (|
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_associated_function (|
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "core::cell::RefCell")
                                                                                                                                  [
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                      [
                                                                                                                                        F
                                                                                                                                      ]
                                                                                                                                  ],
                                                                                                                                "borrow_mut",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                M.call_closure (|
                                                                                                                                  M.get_trait_method (|
                                                                                                                                    "core::ops::deref::Deref",
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "alloc::rc::Rc")
                                                                                                                                      [
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "core::cell::RefCell")
                                                                                                                                          [
                                                                                                                                            Ty.apply
                                                                                                                                              (Ty.path
                                                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                              [
                                                                                                                                                F
                                                                                                                                              ]
                                                                                                                                          ];
                                                                                                                                        Ty.path
                                                                                                                                          "alloc::alloc::Global"
                                                                                                                                      ],
                                                                                                                                    [],
                                                                                                                                    "deref",
                                                                                                                                    []
                                                                                                                                  |),
                                                                                                                                  [
                                                                                                                                    ctx
                                                                                                                                  ]
                                                                                                                                |)
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |),
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context",
                                                                                                                      "region"
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.closure
                                                                                                                    (fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        match
                                                                                                                          γ
                                                                                                                        with
                                                                                                                        | [
                                                                                                                              α0
                                                                                                                            ] =>
                                                                                                                          M.match_operator (|
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (M.read (|
                                                                                                                                    Value.String
                                                                                                                                      "pre image table"
                                                                                                                                  |)))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        | _ =>
                                                                                                                          M.impossible (||)
                                                                                                                        end));
                                                                                                                  M.read (|
                                                                                                                    M.SubPointer.get_struct_record_field (|
                                                                                                                      M.SubPointer.get_struct_record_field (|
                                                                                                                        M.read (|
                                                                                                                          self
                                                                                                                        |),
                                                                                                                        "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                                        "config"
                                                                                                                      |),
                                                                                                                      "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                                      "col"
                                                                                                                    |)
                                                                                                                  |);
                                                                                                                  M.read (|
                                                                                                                    offset
                                                                                                                  |);
                                                                                                                  M.closure
                                                                                                                    (fun
                                                                                                                        γ =>
                                                                                                                      ltac:(M.monadic
                                                                                                                        match
                                                                                                                          γ
                                                                                                                        with
                                                                                                                        | [
                                                                                                                              α0
                                                                                                                            ] =>
                                                                                                                          M.match_operator (|
                                                                                                                            M.alloc (|
                                                                                                                              α0
                                                                                                                            |),
                                                                                                                            [
                                                                                                                              fun
                                                                                                                                  γ =>
                                                                                                                                ltac:(M.monadic
                                                                                                                                  (Value.StructTuple
                                                                                                                                    "core::result::Result::Ok"
                                                                                                                                    [
                                                                                                                                      M.read (|
                                                                                                                                        M.read (|
                                                                                                                                          entry
                                                                                                                                        |)
                                                                                                                                      |)
                                                                                                                                    ]))
                                                                                                                            ]
                                                                                                                          |)
                                                                                                                        | _ =>
                                                                                                                          M.impossible (||)
                                                                                                                        end))
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |),
                                                                                                        [
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ0_0 :=
                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                  γ,
                                                                                                                  "core::ops::control_flow::ControlFlow::Break",
                                                                                                                  0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    residual :=
                                                                                                                M.copy (|
                                                                                                                  γ0_0
                                                                                                                |) in
                                                                                                              M.alloc (|
                                                                                                                M.never_to_any (|
                                                                                                                  M.read (|
                                                                                                                    M.return_ (|
                                                                                                                      M.call_closure (|
                                                                                                                        M.get_trait_method (|
                                                                                                                          "core::ops::try_trait::FromResidual",
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "core::result::Result")
                                                                                                                            [
                                                                                                                              Ty.apply
                                                                                                                                (Ty.path
                                                                                                                                  "array")
                                                                                                                                [
                                                                                                                                  Ty.tuple
                                                                                                                                    [
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                                        [
                                                                                                                                          F;
                                                                                                                                          F
                                                                                                                                        ];
                                                                                                                                      Ty.apply
                                                                                                                                        (Ty.path
                                                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                                                        [
                                                                                                                                          F;
                                                                                                                                          F
                                                                                                                                        ]
                                                                                                                                    ]
                                                                                                                                ];
                                                                                                                              Ty.path
                                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                                            ],
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::result::Result")
                                                                                                                              [
                                                                                                                                Ty.path
                                                                                                                                  "core::convert::Infallible";
                                                                                                                                Ty.path
                                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                                              ]
                                                                                                                          ],
                                                                                                                          "from_residual",
                                                                                                                          []
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          M.read (|
                                                                                                                            residual
                                                                                                                          |)
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    |)
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)));
                                                                                                          fun
                                                                                                              γ =>
                                                                                                            ltac:(M.monadic
                                                                                                              (let
                                                                                                                    γ0_0 :=
                                                                                                                M.SubPointer.get_struct_tuple_field (|
                                                                                                                  γ,
                                                                                                                  "core::ops::control_flow::ControlFlow::Continue",
                                                                                                                  0
                                                                                                                |) in
                                                                                                              let
                                                                                                                    val :=
                                                                                                                M.copy (|
                                                                                                                  γ0_0
                                                                                                                |) in
                                                                                                              val))
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  let
                                                                                                        _ :=
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_associated_function (|
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                            [
                                                                                                              F
                                                                                                            ],
                                                                                                          "next",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::deref::DerefMut",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefMut")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              [],
                                                                                                              "deref_mut",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::cell::RefCell")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                          [
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    "borrow_mut",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::deref::Deref",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::rc::Rc")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::cell::RefCell")
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                  [
                                                                                                                                    F
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        "deref",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        ctx
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    Value.StructTuple
                                                                                                      "core::result::Result::Ok"
                                                                                                      [
                                                                                                        M.read (|
                                                                                                          cell
                                                                                                        |)
                                                                                                      ]
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          |),
                                                                                          [
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Break",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      residual :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                M.alloc (|
                                                                                                  M.never_to_any (|
                                                                                                    M.read (|
                                                                                                      M.return_ (|
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::try_trait::FromResidual",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "core::result::Result")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "array")
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                                          [
                                                                                                                            F;
                                                                                                                            F
                                                                                                                          ];
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "halo2_proofs::circuit::AssignedCell")
                                                                                                                          [
                                                                                                                            F;
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "halo2_proofs::plonk::error::Error"
                                                                                                              ],
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.path
                                                                                                                    "core::convert::Infallible";
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ]
                                                                                                            ],
                                                                                                            "from_residual",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            M.read (|
                                                                                                              residual
                                                                                                            |)
                                                                                                          ]
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)
                                                                                                |)));
                                                                                            fun γ =>
                                                                                              ltac:(M.monadic
                                                                                                (let
                                                                                                      γ0_0 :=
                                                                                                  M.SubPointer.get_struct_tuple_field (|
                                                                                                    γ,
                                                                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                                                                    0
                                                                                                  |) in
                                                                                                let
                                                                                                      val :=
                                                                                                  M.copy (|
                                                                                                    γ0_0
                                                                                                  |) in
                                                                                                val))
                                                                                          ]
                                                                                        |)
                                                                                      |) in
                                                                                    let _ :=
                                                                                      M.alloc (|
                                                                                        M.call_closure (|
                                                                                          M.get_associated_function (|
                                                                                            Ty.apply
                                                                                              (Ty.path
                                                                                                "alloc::vec::Vec")
                                                                                              [
                                                                                                Ty.tuple
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ];
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                                      [
                                                                                                        F;
                                                                                                        F
                                                                                                      ]
                                                                                                  ];
                                                                                                Ty.path
                                                                                                  "alloc::alloc::Global"
                                                                                              ],
                                                                                            "push",
                                                                                            []
                                                                                          |),
                                                                                          [
                                                                                            cells;
                                                                                            Value.Tuple
                                                                                              [
                                                                                                M.read (|
                                                                                                  enable
                                                                                                |);
                                                                                                M.read (|
                                                                                                  entry
                                                                                                |)
                                                                                              ]
                                                                                          ]
                                                                                        |)
                                                                                      |) in
                                                                                    M.alloc (|
                                                                                      Value.Tuple []
                                                                                    |)))
                                                                              ]
                                                                            |) in
                                                                          M.alloc (|
                                                                            Value.Tuple []
                                                                          |)))
                                                                      |)))
                                                                ]
                                                              |)) in
                                                          M.alloc (|
                                                            Value.StructTuple
                                                              "core::result::Result::Ok"
                                                              [
                                                                M.call_closure (|
                                                                  M.get_associated_function (|
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::result::Result")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path "array")
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ]
                                                                          ];
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ]
                                                                      ],
                                                                    "expect",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::convert::TryInto",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "alloc::vec::Vec")
                                                                          [
                                                                            Ty.tuple
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ];
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                                  [ F; F ]
                                                                              ];
                                                                            Ty.path
                                                                              "alloc::alloc::Global"
                                                                          ],
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path "array")
                                                                            [
                                                                              Ty.tuple
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ]
                                                                                ]
                                                                            ]
                                                                        ],
                                                                        "try_into",
                                                                        []
                                                                      |),
                                                                      [ M.read (| cells |) ]
                                                                    |);
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::ops::deref::Deref",
                                                                        Ty.path
                                                                          "alloc::string::String",
                                                                        [],
                                                                        "deref",
                                                                        []
                                                                      |),
                                                                      [
                                                                        let res :=
                                                                          M.alloc (|
                                                                            M.call_closure (|
                                                                              M.get_function (|
                                                                                "alloc::fmt::format",
                                                                                []
                                                                              |),
                                                                              [
                                                                                M.call_closure (|
                                                                                  M.get_associated_function (|
                                                                                    Ty.path
                                                                                      "core::fmt::Arguments",
                                                                                    "new_v1",
                                                                                    []
                                                                                  |),
                                                                                  [
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.alloc (|
                                                                                        Value.Array
                                                                                          [
                                                                                            M.read (|
                                                                                              Value.String
                                                                                                "The number of static frame entries should be "
                                                                                            |)
                                                                                          ]
                                                                                      |));
                                                                                    (* Unsize *)
                                                                                    M.pointer_coercion
                                                                                      (M.alloc (|
                                                                                        Value.Array
                                                                                          [
                                                                                            M.call_closure (|
                                                                                              M.get_associated_function (|
                                                                                                Ty.path
                                                                                                  "core::fmt::rt::Argument",
                                                                                                "new_display",
                                                                                                [
                                                                                                  Ty.path
                                                                                                    "usize"
                                                                                                ]
                                                                                              |),
                                                                                              [
                                                                                                M.get_constant (|
                                                                                                  "specs::jtable::STATIC_FRAME_ENTRY_NUMBER"
                                                                                                |)
                                                                                              ]
                                                                                            |)
                                                                                          ]
                                                                                      |))
                                                                                  ]
                                                                                |)
                                                                              ]
                                                                            |)
                                                                          |) in
                                                                        res
                                                                      ]
                                                                    |)
                                                                  ]
                                                                |)
                                                              ]
                                                          |)
                                                        |)))
                                                  ]
                                                |)
                                              | _ => M.impossible (||)
                                              end))
                                      |) in
                                    let instruction_handler :=
                                      M.alloc (|
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                M.match_operator (|
                                                  M.alloc (| α0 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let base_offset := M.copy (| γ |) in
                                                        M.read (|
                                                          let _ :=
                                                            M.write (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::deref::DerefMut",
                                                                    Ty.apply
                                                                      (Ty.path "core::cell::RefMut")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                          [ F ]
                                                                      ],
                                                                    [],
                                                                    "deref_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::cell::RefCell")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                [ F ]
                                                                            ],
                                                                          "borrow_mut",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::rc::Rc")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::cell::RefCell")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                        [ F ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              "deref",
                                                                              []
                                                                            |),
                                                                            [ ctx ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |),
                                                                "delphinus_zkwasm::circuits::utils::Context",
                                                                "offset"
                                                              |),
                                                              M.read (| base_offset |)
                                                            |) in
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [ F ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [ F ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ])
                                                                  ],
                                                                [],
                                                                "collect",
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "core::result::Result")
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path
                                                                        "halo2_proofs::plonk::error::Error"
                                                                    ]
                                                                ]
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [ F ],
                                                                    [],
                                                                    "map",
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ];
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                [ F ]
                                                                            ]
                                                                        ]
                                                                        (Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ];
                                                                            Ty.path
                                                                              "halo2_proofs::plonk::error::Error"
                                                                          ])
                                                                    ]
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          [ F ],
                                                                        "iter",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::deref::Deref",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              [
                                                                                F;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            [],
                                                                            "deref",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.SubPointer.get_struct_record_field (|
                                                                              image_table,
                                                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                              "instructions"
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.closure
                                                                      (fun γ =>
                                                                        ltac:(M.monadic
                                                                          match γ with
                                                                          | [ α0 ] =>
                                                                            M.match_operator (|
                                                                              M.alloc (| α0 |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let entry :=
                                                                                      M.copy (|
                                                                                        γ
                                                                                      |) in
                                                                                    M.read (|
                                                                                      let offset :=
                                                                                        M.copy (|
                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::cell::Ref")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                  ],
                                                                                                [],
                                                                                                "deref",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::cell::RefCell")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                            [
                                                                                                              F
                                                                                                            ]
                                                                                                        ],
                                                                                                      "borrow",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::rc::Rc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefCell")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          ctx
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |),
                                                                                            "delphinus_zkwasm::circuits::utils::Context",
                                                                                            "offset"
                                                                                          |)
                                                                                        |) in
                                                                                      let cell :=
                                                                                        M.copy (|
                                                                                          M.match_operator (|
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::Try",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                    ],
                                                                                                  [],
                                                                                                  "branch",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::Region")
                                                                                                        [
                                                                                                          F
                                                                                                        ],
                                                                                                      "assign_fixed",
                                                                                                      [
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              []
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              F;
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ]);
                                                                                                        F;
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              []
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]);
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::deref::Deref",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefMut")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              [],
                                                                                                              "deref",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::cell::RefCell")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                          [
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    "borrow_mut",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::deref::Deref",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::rc::Rc")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::cell::RefCell")
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                  [
                                                                                                                                    F
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        "deref",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        ctx
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |),
                                                                                                          "delphinus_zkwasm::circuits::utils::Context",
                                                                                                          "region"
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  α0
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (M.read (|
                                                                                                                        Value.String
                                                                                                                          "pre image table"
                                                                                                                      |)))
                                                                                                                ]
                                                                                                              |)
                                                                                                            | _ =>
                                                                                                              M.impossible (||)
                                                                                                            end));
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.read (|
                                                                                                              self
                                                                                                            |),
                                                                                                            "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                            "config"
                                                                                                          |),
                                                                                                          "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                          "col"
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        offset
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  α0
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (Value.StructTuple
                                                                                                                        "core::result::Result::Ok"
                                                                                                                        [
                                                                                                                          M.read (|
                                                                                                                            M.read (|
                                                                                                                              entry
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]))
                                                                                                                ]
                                                                                                              |)
                                                                                                            | _ =>
                                                                                                              M.impossible (||)
                                                                                                            end))
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Break",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        residual :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        M.return_ (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::FromResidual",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ],
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "core::convert::Infallible";
                                                                                                                    Ty.path
                                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "from_residual",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                residual
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)));
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Continue",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        val :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  val))
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let _ :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                [ F
                                                                                                ],
                                                                                              "next",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::DerefMut",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::cell::RefMut")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                    ],
                                                                                                  [],
                                                                                                  "deref_mut",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::cell::RefCell")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ],
                                                                                                        "borrow_mut",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::rc::Rc")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::cell::RefCell")
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            ctx
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.StructTuple
                                                                                          "core::result::Result::Ok"
                                                                                          [
                                                                                            M.read (|
                                                                                              cell
                                                                                            |)
                                                                                          ]
                                                                                      |)
                                                                                    |)))
                                                                              ]
                                                                            |)
                                                                          | _ => M.impossible (||)
                                                                          end))
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)))
                                                  ]
                                                |)
                                              | _ => M.impossible (||)
                                              end))
                                      |) in
                                    let br_table_handler :=
                                      M.alloc (|
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                M.match_operator (|
                                                  M.alloc (| α0 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let base_offset := M.copy (| γ |) in
                                                        M.read (|
                                                          let _ :=
                                                            M.write (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::deref::DerefMut",
                                                                    Ty.apply
                                                                      (Ty.path "core::cell::RefMut")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                          [ F ]
                                                                      ],
                                                                    [],
                                                                    "deref_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::cell::RefCell")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                [ F ]
                                                                            ],
                                                                          "borrow_mut",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::rc::Rc")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::cell::RefCell")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                        [ F ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              "deref",
                                                                              []
                                                                            |),
                                                                            [ ctx ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |),
                                                                "delphinus_zkwasm::circuits::utils::Context",
                                                                "offset"
                                                              |),
                                                              M.read (| base_offset |)
                                                            |) in
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [ F ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [ F ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ])
                                                                  ],
                                                                [],
                                                                "collect",
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "core::result::Result")
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path
                                                                        "halo2_proofs::plonk::error::Error"
                                                                    ]
                                                                ]
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [ F ],
                                                                    [],
                                                                    "map",
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ];
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                [ F ]
                                                                            ]
                                                                        ]
                                                                        (Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ];
                                                                            Ty.path
                                                                              "halo2_proofs::plonk::error::Error"
                                                                          ])
                                                                    ]
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          [ F ],
                                                                        "iter",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::deref::Deref",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              [
                                                                                F;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            [],
                                                                            "deref",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.SubPointer.get_struct_record_field (|
                                                                              image_table,
                                                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                              "br_table_entires"
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.closure
                                                                      (fun γ =>
                                                                        ltac:(M.monadic
                                                                          match γ with
                                                                          | [ α0 ] =>
                                                                            M.match_operator (|
                                                                              M.alloc (| α0 |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let entry :=
                                                                                      M.copy (|
                                                                                        γ
                                                                                      |) in
                                                                                    M.read (|
                                                                                      let offset :=
                                                                                        M.copy (|
                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::cell::Ref")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                  ],
                                                                                                [],
                                                                                                "deref",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::cell::RefCell")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                            [
                                                                                                              F
                                                                                                            ]
                                                                                                        ],
                                                                                                      "borrow",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::rc::Rc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefCell")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          ctx
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |),
                                                                                            "delphinus_zkwasm::circuits::utils::Context",
                                                                                            "offset"
                                                                                          |)
                                                                                        |) in
                                                                                      let cell :=
                                                                                        M.copy (|
                                                                                          M.match_operator (|
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::Try",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                    ],
                                                                                                  [],
                                                                                                  "branch",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::Region")
                                                                                                        [
                                                                                                          F
                                                                                                        ],
                                                                                                      "assign_fixed",
                                                                                                      [
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              []
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              F;
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ]);
                                                                                                        F;
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              []
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]);
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::deref::Deref",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefMut")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              [],
                                                                                                              "deref",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::cell::RefCell")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                          [
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    "borrow_mut",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::deref::Deref",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::rc::Rc")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::cell::RefCell")
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                  [
                                                                                                                                    F
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        "deref",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        ctx
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |),
                                                                                                          "delphinus_zkwasm::circuits::utils::Context",
                                                                                                          "region"
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  α0
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (M.read (|
                                                                                                                        Value.String
                                                                                                                          "pre image table"
                                                                                                                      |)))
                                                                                                                ]
                                                                                                              |)
                                                                                                            | _ =>
                                                                                                              M.impossible (||)
                                                                                                            end));
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.read (|
                                                                                                              self
                                                                                                            |),
                                                                                                            "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                            "config"
                                                                                                          |),
                                                                                                          "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                          "col"
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        offset
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  α0
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (Value.StructTuple
                                                                                                                        "core::result::Result::Ok"
                                                                                                                        [
                                                                                                                          M.read (|
                                                                                                                            M.read (|
                                                                                                                              entry
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]))
                                                                                                                ]
                                                                                                              |)
                                                                                                            | _ =>
                                                                                                              M.impossible (||)
                                                                                                            end))
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Break",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        residual :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        M.return_ (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::FromResidual",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ],
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "core::convert::Infallible";
                                                                                                                    Ty.path
                                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "from_residual",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                residual
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)));
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Continue",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        val :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  val))
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let _ :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                [ F
                                                                                                ],
                                                                                              "next",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::DerefMut",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::cell::RefMut")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                    ],
                                                                                                  [],
                                                                                                  "deref_mut",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::cell::RefCell")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ],
                                                                                                        "borrow_mut",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::rc::Rc")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::cell::RefCell")
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            ctx
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.StructTuple
                                                                                          "core::result::Result::Ok"
                                                                                          [
                                                                                            M.read (|
                                                                                              cell
                                                                                            |)
                                                                                          ]
                                                                                      |)
                                                                                    |)))
                                                                              ]
                                                                            |)
                                                                          | _ => M.impossible (||)
                                                                          end))
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)))
                                                  ]
                                                |)
                                              | _ => M.impossible (||)
                                              end))
                                      |) in
                                    let padding_handler :=
                                      M.alloc (|
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0; α1 ] =>
                                                M.match_operator (|
                                                  M.alloc (| α0 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let start_offset := M.copy (| γ |) in
                                                        M.match_operator (|
                                                          M.alloc (| α1 |),
                                                          [
                                                            fun γ =>
                                                              ltac:(M.monadic
                                                                (let end_offset := M.copy (| γ |) in
                                                                M.read (|
                                                                  let _ :=
                                                                    M.write (|
                                                                      M.SubPointer.get_struct_record_field (|
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::deref::DerefMut",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::cell::RefMut")
                                                                              [
                                                                                Ty.apply
                                                                                  (Ty.path
                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                  [ F ]
                                                                              ],
                                                                            [],
                                                                            "deref_mut",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.alloc (|
                                                                              M.call_closure (|
                                                                                M.get_associated_function (|
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::cell::RefCell")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                        [ F ]
                                                                                    ],
                                                                                  "borrow_mut",
                                                                                  []
                                                                                |),
                                                                                [
                                                                                  M.call_closure (|
                                                                                    M.get_trait_method (|
                                                                                      "core::ops::deref::Deref",
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "alloc::rc::Rc")
                                                                                        [
                                                                                          Ty.apply
                                                                                            (Ty.path
                                                                                              "core::cell::RefCell")
                                                                                            [
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                [ F
                                                                                                ]
                                                                                            ];
                                                                                          Ty.path
                                                                                            "alloc::alloc::Global"
                                                                                        ],
                                                                                      [],
                                                                                      "deref",
                                                                                      []
                                                                                    |),
                                                                                    [ ctx ]
                                                                                  |)
                                                                                ]
                                                                              |)
                                                                            |)
                                                                          ]
                                                                        |),
                                                                        "delphinus_zkwasm::circuits::utils::Context",
                                                                        "offset"
                                                                      |),
                                                                      M.read (| start_offset |)
                                                                    |) in
                                                                  M.alloc (|
                                                                    M.call_closure (|
                                                                      M.get_trait_method (|
                                                                        "core::iter::traits::iterator::Iterator",
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "core::iter::adapters::map::Map")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::ops::range::Range")
                                                                              [ Ty.path "usize" ];
                                                                            Ty.function
                                                                              [
                                                                                Ty.tuple
                                                                                  [ Ty.path "usize"
                                                                                  ]
                                                                              ]
                                                                              (Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.path
                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                ])
                                                                          ],
                                                                        [],
                                                                        "collect",
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::result::Result")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::vec::Vec")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ];
                                                                              Ty.path
                                                                                "halo2_proofs::plonk::error::Error"
                                                                            ]
                                                                        ]
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::iter::traits::iterator::Iterator",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "core::ops::range::Range")
                                                                              [ Ty.path "usize" ],
                                                                            [],
                                                                            "map",
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "core::result::Result")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                    [ F; F ];
                                                                                  Ty.path
                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                ];
                                                                              Ty.function
                                                                                [
                                                                                  Ty.tuple
                                                                                    [
                                                                                      Ty.path
                                                                                        "usize"
                                                                                    ]
                                                                                ]
                                                                                (Ty.apply
                                                                                  (Ty.path
                                                                                    "core::result::Result")
                                                                                  [
                                                                                    Ty.apply
                                                                                      (Ty.path
                                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                                      [ F; F ];
                                                                                    Ty.path
                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                  ])
                                                                            ]
                                                                          |),
                                                                          [
                                                                            Value.StructRecord
                                                                              "core::ops::range::Range"
                                                                              [
                                                                                ("start",
                                                                                  M.read (|
                                                                                    start_offset
                                                                                  |));
                                                                                ("end_",
                                                                                  M.read (|
                                                                                    end_offset
                                                                                  |))
                                                                              ];
                                                                            M.closure
                                                                              (fun γ =>
                                                                                ltac:(M.monadic
                                                                                  match γ with
                                                                                  | [ α0 ] =>
                                                                                    M.match_operator (|
                                                                                      M.alloc (|
                                                                                        α0
                                                                                      |),
                                                                                      [
                                                                                        fun γ =>
                                                                                          ltac:(M.monadic
                                                                                            (M.read (|
                                                                                              let
                                                                                                    offset :=
                                                                                                M.copy (|
                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_trait_method (|
                                                                                                        "core::ops::deref::Deref",
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::cell::Ref")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ],
                                                                                                        [],
                                                                                                        "deref",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.alloc (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefCell")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              "borrow",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.call_closure (|
                                                                                                                M.get_trait_method (|
                                                                                                                  "core::ops::deref::Deref",
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "alloc::rc::Rc")
                                                                                                                    [
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::cell::RefCell")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                            [
                                                                                                                              F
                                                                                                                            ]
                                                                                                                        ];
                                                                                                                      Ty.path
                                                                                                                        "alloc::alloc::Global"
                                                                                                                    ],
                                                                                                                  [],
                                                                                                                  "deref",
                                                                                                                  []
                                                                                                                |),
                                                                                                                [
                                                                                                                  ctx
                                                                                                                ]
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      ]
                                                                                                    |),
                                                                                                    "delphinus_zkwasm::circuits::utils::Context",
                                                                                                    "offset"
                                                                                                  |)
                                                                                                |) in
                                                                                              let
                                                                                                    cell :=
                                                                                                M.copy (|
                                                                                                  M.match_operator (|
                                                                                                    M.alloc (|
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::try_trait::Try",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::circuit::AssignedCell")
                                                                                                                [
                                                                                                                  F;
                                                                                                                  F
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "branch",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.call_closure (|
                                                                                                            M.get_associated_function (|
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "halo2_proofs::circuit::Region")
                                                                                                                [
                                                                                                                  F
                                                                                                                ],
                                                                                                              "assign_fixed",
                                                                                                              [
                                                                                                                Ty.function
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      []
                                                                                                                  ]
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "core::result::Result")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      Ty.path
                                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                                    ]);
                                                                                                                F;
                                                                                                                Ty.function
                                                                                                                  [
                                                                                                                    Ty.tuple
                                                                                                                      []
                                                                                                                  ]
                                                                                                                  (Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "&")
                                                                                                                    [
                                                                                                                      Ty.path
                                                                                                                        "str"
                                                                                                                    ]);
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "&")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "str"
                                                                                                                  ]
                                                                                                              ]
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::deref::Deref",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::cell::RefMut")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                            [
                                                                                                                              F
                                                                                                                            ]
                                                                                                                        ],
                                                                                                                      [],
                                                                                                                      "deref",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.alloc (|
                                                                                                                        M.call_closure (|
                                                                                                                          M.get_associated_function (|
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::cell::RefCell")
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                  [
                                                                                                                                    F
                                                                                                                                  ]
                                                                                                                              ],
                                                                                                                            "borrow_mut",
                                                                                                                            []
                                                                                                                          |),
                                                                                                                          [
                                                                                                                            M.call_closure (|
                                                                                                                              M.get_trait_method (|
                                                                                                                                "core::ops::deref::Deref",
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "alloc::rc::Rc")
                                                                                                                                  [
                                                                                                                                    Ty.apply
                                                                                                                                      (Ty.path
                                                                                                                                        "core::cell::RefCell")
                                                                                                                                      [
                                                                                                                                        Ty.apply
                                                                                                                                          (Ty.path
                                                                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                          [
                                                                                                                                            F
                                                                                                                                          ]
                                                                                                                                      ];
                                                                                                                                    Ty.path
                                                                                                                                      "alloc::alloc::Global"
                                                                                                                                  ],
                                                                                                                                [],
                                                                                                                                "deref",
                                                                                                                                []
                                                                                                                              |),
                                                                                                                              [
                                                                                                                                ctx
                                                                                                                              ]
                                                                                                                            |)
                                                                                                                          ]
                                                                                                                        |)
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |),
                                                                                                                  "delphinus_zkwasm::circuits::utils::Context",
                                                                                                                  "region"
                                                                                                                |)
                                                                                                              |);
                                                                                                              M.closure
                                                                                                                (fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    match
                                                                                                                      γ
                                                                                                                    with
                                                                                                                    | [
                                                                                                                          α0
                                                                                                                        ] =>
                                                                                                                      M.match_operator (|
                                                                                                                        M.alloc (|
                                                                                                                          α0
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (M.read (|
                                                                                                                                Value.String
                                                                                                                                  "pre image table"
                                                                                                                              |)))
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    | _ =>
                                                                                                                      M.impossible (||)
                                                                                                                    end));
                                                                                                              M.read (|
                                                                                                                M.SubPointer.get_struct_record_field (|
                                                                                                                  M.SubPointer.get_struct_record_field (|
                                                                                                                    M.read (|
                                                                                                                      self
                                                                                                                    |),
                                                                                                                    "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                                    "config"
                                                                                                                  |),
                                                                                                                  "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                                  "col"
                                                                                                                |)
                                                                                                              |);
                                                                                                              M.read (|
                                                                                                                offset
                                                                                                              |);
                                                                                                              M.closure
                                                                                                                (fun
                                                                                                                    γ =>
                                                                                                                  ltac:(M.monadic
                                                                                                                    match
                                                                                                                      γ
                                                                                                                    with
                                                                                                                    | [
                                                                                                                          α0
                                                                                                                        ] =>
                                                                                                                      M.match_operator (|
                                                                                                                        M.alloc (|
                                                                                                                          α0
                                                                                                                        |),
                                                                                                                        [
                                                                                                                          fun
                                                                                                                              γ =>
                                                                                                                            ltac:(M.monadic
                                                                                                                              (Value.StructTuple
                                                                                                                                "core::result::Result::Ok"
                                                                                                                                [
                                                                                                                                  M.call_closure (|
                                                                                                                                    M.get_trait_method (|
                                                                                                                                      "ff::Field",
                                                                                                                                      F,
                                                                                                                                      [],
                                                                                                                                      "zero",
                                                                                                                                      []
                                                                                                                                    |),
                                                                                                                                    []
                                                                                                                                  |)
                                                                                                                                ]))
                                                                                                                        ]
                                                                                                                      |)
                                                                                                                    | _ =>
                                                                                                                      M.impossible (||)
                                                                                                                    end))
                                                                                                            ]
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    |),
                                                                                                    [
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                γ0_0 :=
                                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                                              γ,
                                                                                                              "core::ops::control_flow::ControlFlow::Break",
                                                                                                              0
                                                                                                            |) in
                                                                                                          let
                                                                                                                residual :=
                                                                                                            M.copy (|
                                                                                                              γ0_0
                                                                                                            |) in
                                                                                                          M.alloc (|
                                                                                                            M.never_to_any (|
                                                                                                              M.read (|
                                                                                                                M.return_ (|
                                                                                                                  M.call_closure (|
                                                                                                                    M.get_trait_method (|
                                                                                                                      "core::ops::try_trait::FromResidual",
                                                                                                                      Ty.apply
                                                                                                                        (Ty.path
                                                                                                                          "core::result::Result")
                                                                                                                        [
                                                                                                                          Ty.apply
                                                                                                                            (Ty.path
                                                                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                                                                            [
                                                                                                                              F;
                                                                                                                              F
                                                                                                                            ];
                                                                                                                          Ty.path
                                                                                                                            "halo2_proofs::plonk::error::Error"
                                                                                                                        ],
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "core::result::Result")
                                                                                                                          [
                                                                                                                            Ty.path
                                                                                                                              "core::convert::Infallible";
                                                                                                                            Ty.path
                                                                                                                              "halo2_proofs::plonk::error::Error"
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                      "from_residual",
                                                                                                                      []
                                                                                                                    |),
                                                                                                                    [
                                                                                                                      M.read (|
                                                                                                                        residual
                                                                                                                      |)
                                                                                                                    ]
                                                                                                                  |)
                                                                                                                |)
                                                                                                              |)
                                                                                                            |)
                                                                                                          |)));
                                                                                                      fun
                                                                                                          γ =>
                                                                                                        ltac:(M.monadic
                                                                                                          (let
                                                                                                                γ0_0 :=
                                                                                                            M.SubPointer.get_struct_tuple_field (|
                                                                                                              γ,
                                                                                                              "core::ops::control_flow::ControlFlow::Continue",
                                                                                                              0
                                                                                                            |) in
                                                                                                          let
                                                                                                                val :=
                                                                                                            M.copy (|
                                                                                                              γ0_0
                                                                                                            |) in
                                                                                                          val))
                                                                                                    ]
                                                                                                  |)
                                                                                                |) in
                                                                                              let
                                                                                                    _ :=
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                        [
                                                                                                          F
                                                                                                        ],
                                                                                                      "next",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::DerefMut",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::cell::RefMut")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                [
                                                                                                                  F
                                                                                                                ]
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref_mut",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          M.alloc (|
                                                                                                            M.call_closure (|
                                                                                                              M.get_associated_function (|
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::cell::RefCell")
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ],
                                                                                                                "borrow_mut",
                                                                                                                []
                                                                                                              |),
                                                                                                              [
                                                                                                                M.call_closure (|
                                                                                                                  M.get_trait_method (|
                                                                                                                    "core::ops::deref::Deref",
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "alloc::rc::Rc")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "core::cell::RefCell")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                              [
                                                                                                                                F
                                                                                                                              ]
                                                                                                                          ];
                                                                                                                        Ty.path
                                                                                                                          "alloc::alloc::Global"
                                                                                                                      ],
                                                                                                                    [],
                                                                                                                    "deref",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    ctx
                                                                                                                  ]
                                                                                                                |)
                                                                                                              ]
                                                                                                            |)
                                                                                                          |)
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |) in
                                                                                              M.alloc (|
                                                                                                Value.StructTuple
                                                                                                  "core::result::Result::Ok"
                                                                                                  [
                                                                                                    M.read (|
                                                                                                      cell
                                                                                                    |)
                                                                                                  ]
                                                                                              |)
                                                                                            |)))
                                                                                      ]
                                                                                    |)
                                                                                  | _ =>
                                                                                    M.impossible (||)
                                                                                  end))
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |)
                                                                  |)
                                                                |)))
                                                          ]
                                                        |)))
                                                  ]
                                                |)
                                              | _ => M.impossible (||)
                                              end))
                                      |) in
                                    let init_memory_handler :=
                                      M.alloc (|
                                        M.closure
                                          (fun γ =>
                                            ltac:(M.monadic
                                              match γ with
                                              | [ α0 ] =>
                                                M.match_operator (|
                                                  M.alloc (| α0 |),
                                                  [
                                                    fun γ =>
                                                      ltac:(M.monadic
                                                        (let base_offset := M.copy (| γ |) in
                                                        M.read (|
                                                          let _ :=
                                                            M.write (|
                                                              M.SubPointer.get_struct_record_field (|
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::ops::deref::DerefMut",
                                                                    Ty.apply
                                                                      (Ty.path "core::cell::RefMut")
                                                                      [
                                                                        Ty.apply
                                                                          (Ty.path
                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                          [ F ]
                                                                      ],
                                                                    [],
                                                                    "deref_mut",
                                                                    []
                                                                  |),
                                                                  [
                                                                    M.alloc (|
                                                                      M.call_closure (|
                                                                        M.get_associated_function (|
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "core::cell::RefCell")
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                [ F ]
                                                                            ],
                                                                          "borrow_mut",
                                                                          []
                                                                        |),
                                                                        [
                                                                          M.call_closure (|
                                                                            M.get_trait_method (|
                                                                              "core::ops::deref::Deref",
                                                                              Ty.apply
                                                                                (Ty.path
                                                                                  "alloc::rc::Rc")
                                                                                [
                                                                                  Ty.apply
                                                                                    (Ty.path
                                                                                      "core::cell::RefCell")
                                                                                    [
                                                                                      Ty.apply
                                                                                        (Ty.path
                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                        [ F ]
                                                                                    ];
                                                                                  Ty.path
                                                                                    "alloc::alloc::Global"
                                                                                ],
                                                                              [],
                                                                              "deref",
                                                                              []
                                                                            |),
                                                                            [ ctx ]
                                                                          |)
                                                                        ]
                                                                      |)
                                                                    |)
                                                                  ]
                                                                |),
                                                                "delphinus_zkwasm::circuits::utils::Context",
                                                                "offset"
                                                              |),
                                                              M.read (| base_offset |)
                                                            |) in
                                                          M.alloc (|
                                                            M.call_closure (|
                                                              M.get_trait_method (|
                                                                "core::iter::traits::iterator::Iterator",
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "core::iter::adapters::map::Map")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [ F ];
                                                                    Ty.function
                                                                      [
                                                                        Ty.tuple
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path "&")
                                                                              [ F ]
                                                                          ]
                                                                      ]
                                                                      (Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ])
                                                                  ],
                                                                [],
                                                                "collect",
                                                                [
                                                                  Ty.apply
                                                                    (Ty.path "core::result::Result")
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path "alloc::vec::Vec")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "alloc::alloc::Global"
                                                                        ];
                                                                      Ty.path
                                                                        "halo2_proofs::plonk::error::Error"
                                                                    ]
                                                                ]
                                                              |),
                                                              [
                                                                M.call_closure (|
                                                                  M.get_trait_method (|
                                                                    "core::iter::traits::iterator::Iterator",
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "core::slice::iter::Iter")
                                                                      [ F ],
                                                                    [],
                                                                    "map",
                                                                    [
                                                                      Ty.apply
                                                                        (Ty.path
                                                                          "core::result::Result")
                                                                        [
                                                                          Ty.apply
                                                                            (Ty.path
                                                                              "halo2_proofs::circuit::AssignedCell")
                                                                            [ F; F ];
                                                                          Ty.path
                                                                            "halo2_proofs::plonk::error::Error"
                                                                        ];
                                                                      Ty.function
                                                                        [
                                                                          Ty.tuple
                                                                            [
                                                                              Ty.apply
                                                                                (Ty.path "&")
                                                                                [ F ]
                                                                            ]
                                                                        ]
                                                                        (Ty.apply
                                                                          (Ty.path
                                                                            "core::result::Result")
                                                                          [
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "halo2_proofs::circuit::AssignedCell")
                                                                              [ F; F ];
                                                                            Ty.path
                                                                              "halo2_proofs::plonk::error::Error"
                                                                          ])
                                                                    ]
                                                                  |),
                                                                  [
                                                                    M.call_closure (|
                                                                      M.get_associated_function (|
                                                                        Ty.apply
                                                                          (Ty.path "slice")
                                                                          [ F ],
                                                                        "iter",
                                                                        []
                                                                      |),
                                                                      [
                                                                        M.call_closure (|
                                                                          M.get_trait_method (|
                                                                            "core::ops::deref::Deref",
                                                                            Ty.apply
                                                                              (Ty.path
                                                                                "alloc::vec::Vec")
                                                                              [
                                                                                F;
                                                                                Ty.path
                                                                                  "alloc::alloc::Global"
                                                                              ],
                                                                            [],
                                                                            "deref",
                                                                            []
                                                                          |),
                                                                          [
                                                                            M.SubPointer.get_struct_record_field (|
                                                                              image_table,
                                                                              "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                                              "init_memory_entries"
                                                                            |)
                                                                          ]
                                                                        |)
                                                                      ]
                                                                    |);
                                                                    M.closure
                                                                      (fun γ =>
                                                                        ltac:(M.monadic
                                                                          match γ with
                                                                          | [ α0 ] =>
                                                                            M.match_operator (|
                                                                              M.alloc (| α0 |),
                                                                              [
                                                                                fun γ =>
                                                                                  ltac:(M.monadic
                                                                                    (let entry :=
                                                                                      M.copy (|
                                                                                        γ
                                                                                      |) in
                                                                                    M.read (|
                                                                                      let offset :=
                                                                                        M.copy (|
                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                            M.call_closure (|
                                                                                              M.get_trait_method (|
                                                                                                "core::ops::deref::Deref",
                                                                                                Ty.apply
                                                                                                  (Ty.path
                                                                                                    "core::cell::Ref")
                                                                                                  [
                                                                                                    Ty.apply
                                                                                                      (Ty.path
                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                      [
                                                                                                        F
                                                                                                      ]
                                                                                                  ],
                                                                                                [],
                                                                                                "deref",
                                                                                                []
                                                                                              |),
                                                                                              [
                                                                                                M.alloc (|
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "core::cell::RefCell")
                                                                                                        [
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "delphinus_zkwasm::circuits::utils::Context")
                                                                                                            [
                                                                                                              F
                                                                                                            ]
                                                                                                        ],
                                                                                                      "borrow",
                                                                                                      []
                                                                                                    |),
                                                                                                    [
                                                                                                      M.call_closure (|
                                                                                                        M.get_trait_method (|
                                                                                                          "core::ops::deref::Deref",
                                                                                                          Ty.apply
                                                                                                            (Ty.path
                                                                                                              "alloc::rc::Rc")
                                                                                                            [
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefCell")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ];
                                                                                                              Ty.path
                                                                                                                "alloc::alloc::Global"
                                                                                                            ],
                                                                                                          [],
                                                                                                          "deref",
                                                                                                          []
                                                                                                        |),
                                                                                                        [
                                                                                                          ctx
                                                                                                        ]
                                                                                                      |)
                                                                                                    ]
                                                                                                  |)
                                                                                                |)
                                                                                              ]
                                                                                            |),
                                                                                            "delphinus_zkwasm::circuits::utils::Context",
                                                                                            "offset"
                                                                                          |)
                                                                                        |) in
                                                                                      let cell :=
                                                                                        M.copy (|
                                                                                          M.match_operator (|
                                                                                            M.alloc (|
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::try_trait::Try",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::result::Result")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::AssignedCell")
                                                                                                        [
                                                                                                          F;
                                                                                                          F
                                                                                                        ];
                                                                                                      Ty.path
                                                                                                        "halo2_proofs::plonk::error::Error"
                                                                                                    ],
                                                                                                  [],
                                                                                                  "branch",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.call_closure (|
                                                                                                    M.get_associated_function (|
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "halo2_proofs::circuit::Region")
                                                                                                        [
                                                                                                          F
                                                                                                        ],
                                                                                                      "assign_fixed",
                                                                                                      [
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              []
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "core::result::Result")
                                                                                                            [
                                                                                                              F;
                                                                                                              Ty.path
                                                                                                                "halo2_proofs::plonk::error::Error"
                                                                                                            ]);
                                                                                                        F;
                                                                                                        Ty.function
                                                                                                          [
                                                                                                            Ty.tuple
                                                                                                              []
                                                                                                          ]
                                                                                                          (Ty.apply
                                                                                                            (Ty.path
                                                                                                              "&")
                                                                                                            [
                                                                                                              Ty.path
                                                                                                                "str"
                                                                                                            ]);
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "&")
                                                                                                          [
                                                                                                            Ty.path
                                                                                                              "str"
                                                                                                          ]
                                                                                                      ]
                                                                                                    |),
                                                                                                    [
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::deref::Deref",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::cell::RefMut")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                    [
                                                                                                                      F
                                                                                                                    ]
                                                                                                                ],
                                                                                                              [],
                                                                                                              "deref",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.alloc (|
                                                                                                                M.call_closure (|
                                                                                                                  M.get_associated_function (|
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "core::cell::RefCell")
                                                                                                                      [
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                          [
                                                                                                                            F
                                                                                                                          ]
                                                                                                                      ],
                                                                                                                    "borrow_mut",
                                                                                                                    []
                                                                                                                  |),
                                                                                                                  [
                                                                                                                    M.call_closure (|
                                                                                                                      M.get_trait_method (|
                                                                                                                        "core::ops::deref::Deref",
                                                                                                                        Ty.apply
                                                                                                                          (Ty.path
                                                                                                                            "alloc::rc::Rc")
                                                                                                                          [
                                                                                                                            Ty.apply
                                                                                                                              (Ty.path
                                                                                                                                "core::cell::RefCell")
                                                                                                                              [
                                                                                                                                Ty.apply
                                                                                                                                  (Ty.path
                                                                                                                                    "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                                  [
                                                                                                                                    F
                                                                                                                                  ]
                                                                                                                              ];
                                                                                                                            Ty.path
                                                                                                                              "alloc::alloc::Global"
                                                                                                                          ],
                                                                                                                        [],
                                                                                                                        "deref",
                                                                                                                        []
                                                                                                                      |),
                                                                                                                      [
                                                                                                                        ctx
                                                                                                                      ]
                                                                                                                    |)
                                                                                                                  ]
                                                                                                                |)
                                                                                                              |)
                                                                                                            ]
                                                                                                          |),
                                                                                                          "delphinus_zkwasm::circuits::utils::Context",
                                                                                                          "region"
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  α0
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (M.read (|
                                                                                                                        Value.String
                                                                                                                          "pre image table"
                                                                                                                      |)))
                                                                                                                ]
                                                                                                              |)
                                                                                                            | _ =>
                                                                                                              M.impossible (||)
                                                                                                            end));
                                                                                                      M.read (|
                                                                                                        M.SubPointer.get_struct_record_field (|
                                                                                                          M.SubPointer.get_struct_record_field (|
                                                                                                            M.read (|
                                                                                                              self
                                                                                                            |),
                                                                                                            "delphinus_zkwasm::circuits::image_table::ImageTableChip",
                                                                                                            "config"
                                                                                                          |),
                                                                                                          "delphinus_zkwasm::circuits::image_table::ImageTableConfig",
                                                                                                          "col"
                                                                                                        |)
                                                                                                      |);
                                                                                                      M.read (|
                                                                                                        offset
                                                                                                      |);
                                                                                                      M.closure
                                                                                                        (fun
                                                                                                            γ =>
                                                                                                          ltac:(M.monadic
                                                                                                            match
                                                                                                              γ
                                                                                                            with
                                                                                                            | [
                                                                                                                  α0
                                                                                                                ] =>
                                                                                                              M.match_operator (|
                                                                                                                M.alloc (|
                                                                                                                  α0
                                                                                                                |),
                                                                                                                [
                                                                                                                  fun
                                                                                                                      γ =>
                                                                                                                    ltac:(M.monadic
                                                                                                                      (Value.StructTuple
                                                                                                                        "core::result::Result::Ok"
                                                                                                                        [
                                                                                                                          M.read (|
                                                                                                                            M.read (|
                                                                                                                              entry
                                                                                                                            |)
                                                                                                                          |)
                                                                                                                        ]))
                                                                                                                ]
                                                                                                              |)
                                                                                                            | _ =>
                                                                                                              M.impossible (||)
                                                                                                            end))
                                                                                                    ]
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            |),
                                                                                            [
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Break",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        residual :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  M.alloc (|
                                                                                                    M.never_to_any (|
                                                                                                      M.read (|
                                                                                                        M.return_ (|
                                                                                                          M.call_closure (|
                                                                                                            M.get_trait_method (|
                                                                                                              "core::ops::try_trait::FromResidual",
                                                                                                              Ty.apply
                                                                                                                (Ty.path
                                                                                                                  "core::result::Result")
                                                                                                                [
                                                                                                                  Ty.apply
                                                                                                                    (Ty.path
                                                                                                                      "halo2_proofs::circuit::AssignedCell")
                                                                                                                    [
                                                                                                                      F;
                                                                                                                      F
                                                                                                                    ];
                                                                                                                  Ty.path
                                                                                                                    "halo2_proofs::plonk::error::Error"
                                                                                                                ],
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::result::Result")
                                                                                                                  [
                                                                                                                    Ty.path
                                                                                                                      "core::convert::Infallible";
                                                                                                                    Ty.path
                                                                                                                      "halo2_proofs::plonk::error::Error"
                                                                                                                  ]
                                                                                                              ],
                                                                                                              "from_residual",
                                                                                                              []
                                                                                                            |),
                                                                                                            [
                                                                                                              M.read (|
                                                                                                                residual
                                                                                                              |)
                                                                                                            ]
                                                                                                          |)
                                                                                                        |)
                                                                                                      |)
                                                                                                    |)
                                                                                                  |)));
                                                                                              fun
                                                                                                  γ =>
                                                                                                ltac:(M.monadic
                                                                                                  (let
                                                                                                        γ0_0 :=
                                                                                                    M.SubPointer.get_struct_tuple_field (|
                                                                                                      γ,
                                                                                                      "core::ops::control_flow::ControlFlow::Continue",
                                                                                                      0
                                                                                                    |) in
                                                                                                  let
                                                                                                        val :=
                                                                                                    M.copy (|
                                                                                                      γ0_0
                                                                                                    |) in
                                                                                                  val))
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      let _ :=
                                                                                        M.alloc (|
                                                                                          M.call_closure (|
                                                                                            M.get_associated_function (|
                                                                                              Ty.apply
                                                                                                (Ty.path
                                                                                                  "delphinus_zkwasm::circuits::utils::Context")
                                                                                                [ F
                                                                                                ],
                                                                                              "next",
                                                                                              []
                                                                                            |),
                                                                                            [
                                                                                              M.call_closure (|
                                                                                                M.get_trait_method (|
                                                                                                  "core::ops::deref::DerefMut",
                                                                                                  Ty.apply
                                                                                                    (Ty.path
                                                                                                      "core::cell::RefMut")
                                                                                                    [
                                                                                                      Ty.apply
                                                                                                        (Ty.path
                                                                                                          "delphinus_zkwasm::circuits::utils::Context")
                                                                                                        [
                                                                                                          F
                                                                                                        ]
                                                                                                    ],
                                                                                                  [],
                                                                                                  "deref_mut",
                                                                                                  []
                                                                                                |),
                                                                                                [
                                                                                                  M.alloc (|
                                                                                                    M.call_closure (|
                                                                                                      M.get_associated_function (|
                                                                                                        Ty.apply
                                                                                                          (Ty.path
                                                                                                            "core::cell::RefCell")
                                                                                                          [
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "delphinus_zkwasm::circuits::utils::Context")
                                                                                                              [
                                                                                                                F
                                                                                                              ]
                                                                                                          ],
                                                                                                        "borrow_mut",
                                                                                                        []
                                                                                                      |),
                                                                                                      [
                                                                                                        M.call_closure (|
                                                                                                          M.get_trait_method (|
                                                                                                            "core::ops::deref::Deref",
                                                                                                            Ty.apply
                                                                                                              (Ty.path
                                                                                                                "alloc::rc::Rc")
                                                                                                              [
                                                                                                                Ty.apply
                                                                                                                  (Ty.path
                                                                                                                    "core::cell::RefCell")
                                                                                                                  [
                                                                                                                    Ty.apply
                                                                                                                      (Ty.path
                                                                                                                        "delphinus_zkwasm::circuits::utils::Context")
                                                                                                                      [
                                                                                                                        F
                                                                                                                      ]
                                                                                                                  ];
                                                                                                                Ty.path
                                                                                                                  "alloc::alloc::Global"
                                                                                                              ],
                                                                                                            [],
                                                                                                            "deref",
                                                                                                            []
                                                                                                          |),
                                                                                                          [
                                                                                                            ctx
                                                                                                          ]
                                                                                                        |)
                                                                                                      ]
                                                                                                    |)
                                                                                                  |)
                                                                                                ]
                                                                                              |)
                                                                                            ]
                                                                                          |)
                                                                                        |) in
                                                                                      M.alloc (|
                                                                                        Value.StructTuple
                                                                                          "core::result::Result::Ok"
                                                                                          [
                                                                                            M.read (|
                                                                                              cell
                                                                                            |)
                                                                                          ]
                                                                                      |)
                                                                                    |)))
                                                                              ]
                                                                            |)
                                                                          | _ => M.impossible (||)
                                                                          end))
                                                                  ]
                                                                |)
                                                              ]
                                                            |)
                                                          |)
                                                        |)))
                                                  ]
                                                |)
                                              | _ => M.impossible (||)
                                              end))
                                      |) in
                                    let result :=
                                      M.copy (|
                                        M.match_operator (|
                                          M.alloc (|
                                            M.call_closure (|
                                              M.get_trait_method (|
                                                "core::ops::try_trait::Try",
                                                Ty.apply
                                                  (Ty.path "core::result::Result")
                                                  [
                                                    Ty.apply
                                                      (Ty.path
                                                        "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                      [
                                                        Ty.apply
                                                          (Ty.path
                                                            "halo2_proofs::circuit::AssignedCell")
                                                          [ F; F ]
                                                      ];
                                                    Ty.path "halo2_proofs::plonk::error::Error"
                                                  ],
                                                [],
                                                "branch",
                                                []
                                              |),
                                              [
                                                M.call_closure (|
                                                  M.get_associated_function (|
                                                    Ty.path
                                                      "delphinus_zkwasm::circuits::utils::image_table::ImageTableAssigner",
                                                    "exec",
                                                    [
                                                      Ty.apply
                                                        (Ty.path
                                                          "halo2_proofs::circuit::AssignedCell")
                                                        [ F; F ];
                                                      Ty.path "halo2_proofs::plonk::error::Error";
                                                      Ty.function
                                                        [ Ty.tuple [ Ty.path "usize" ] ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          [
                                                            Ty.apply
                                                              (Ty.path
                                                                "specs::state::InitializationState")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                  [ F; F ];
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                  [ F; F ]
                                                              ];
                                                            Ty.path
                                                              "halo2_proofs::plonk::error::Error"
                                                          ]);
                                                      Ty.function
                                                        [ Ty.tuple [ Ty.path "usize" ] ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          [
                                                            Ty.apply
                                                              (Ty.path "array")
                                                              [
                                                                Ty.tuple
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ];
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ]
                                                                  ]
                                                              ];
                                                            Ty.path
                                                              "halo2_proofs::plonk::error::Error"
                                                          ]);
                                                      Ty.function
                                                        [ Ty.tuple [ Ty.path "usize" ] ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                  [ F; F ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path
                                                              "halo2_proofs::plonk::error::Error"
                                                          ]);
                                                      Ty.function
                                                        [ Ty.tuple [ Ty.path "usize" ] ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                  [ F; F ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path
                                                              "halo2_proofs::plonk::error::Error"
                                                          ]);
                                                      Ty.function
                                                        [
                                                          Ty.tuple
                                                            [ Ty.path "usize"; Ty.path "usize" ]
                                                        ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                  [ F; F ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path
                                                              "halo2_proofs::plonk::error::Error"
                                                          ]);
                                                      Ty.function
                                                        [ Ty.tuple [ Ty.path "usize" ] ]
                                                        (Ty.apply
                                                          (Ty.path "core::result::Result")
                                                          [
                                                            Ty.apply
                                                              (Ty.path "alloc::vec::Vec")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "halo2_proofs::circuit::AssignedCell")
                                                                  [ F; F ];
                                                                Ty.path "alloc::alloc::Global"
                                                              ];
                                                            Ty.path
                                                              "halo2_proofs::plonk::error::Error"
                                                          ])
                                                    ]
                                                  |),
                                                  [
                                                    M.read (| image_table_assigner |);
                                                    M.read (| initialization_state_handler |);
                                                    M.read (| static_frame_entries_handler |);
                                                    M.read (| instruction_handler |);
                                                    M.read (| br_table_handler |);
                                                    M.read (| padding_handler |);
                                                    M.read (| init_memory_handler |)
                                                  ]
                                                |)
                                              ]
                                            |)
                                          |),
                                          [
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ0_0 :=
                                                  M.SubPointer.get_struct_tuple_field (|
                                                    γ,
                                                    "core::ops::control_flow::ControlFlow::Break",
                                                    0
                                                  |) in
                                                let residual := M.copy (| γ0_0 |) in
                                                M.alloc (|
                                                  M.never_to_any (|
                                                    M.read (|
                                                      M.return_ (|
                                                        M.call_closure (|
                                                          M.get_trait_method (|
                                                            "core::ops::try_trait::FromResidual",
                                                            Ty.apply
                                                              (Ty.path "core::result::Result")
                                                              [
                                                                Ty.apply
                                                                  (Ty.path
                                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter")
                                                                  [
                                                                    Ty.apply
                                                                      (Ty.path
                                                                        "halo2_proofs::circuit::AssignedCell")
                                                                      [ F; F ]
                                                                  ];
                                                                Ty.path
                                                                  "halo2_proofs::plonk::error::Error"
                                                              ],
                                                            [
                                                              Ty.apply
                                                                (Ty.path "core::result::Result")
                                                                [
                                                                  Ty.path
                                                                    "core::convert::Infallible";
                                                                  Ty.path
                                                                    "halo2_proofs::plonk::error::Error"
                                                                ]
                                                            ],
                                                            "from_residual",
                                                            []
                                                          |),
                                                          [ M.read (| residual |) ]
                                                        |)
                                                      |)
                                                    |)
                                                  |)
                                                |)));
                                            fun γ =>
                                              ltac:(M.monadic
                                                (let γ0_0 :=
                                                  M.SubPointer.get_struct_tuple_field (|
                                                    γ,
                                                    "core::ops::control_flow::ControlFlow::Continue",
                                                    0
                                                  |) in
                                                let val := M.copy (| γ0_0 |) in
                                                val))
                                          ]
                                        |)
                                      |) in
                                    M.alloc (|
                                      Value.StructTuple
                                        "core::result::Result::Ok"
                                        [
                                          Value.StructRecord
                                            "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter"
                                            [
                                              ("initialization_state",
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    result,
                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                    "initialization_state"
                                                  |)
                                                |));
                                              ("static_frame_entries",
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    result,
                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                    "static_frame_entries"
                                                  |)
                                                |));
                                              ("instructions",
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    result,
                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                    "instructions"
                                                  |)
                                                |));
                                              ("br_table_entires",
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    result,
                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                    "br_table_entires"
                                                  |)
                                                |));
                                              ("padding_entires",
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    result,
                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                    "padding_entires"
                                                  |)
                                                |));
                                              ("init_memory_entries",
                                                M.read (|
                                                  M.SubPointer.get_struct_record_field (|
                                                    result,
                                                    "delphinus_zkwasm::circuits::utils::image_table::ImageTableLayouter",
                                                    "init_memory_entries"
                                                  |)
                                                |))
                                            ]
                                        ]
                                    |)
                                  |)))
                            ]
                          |)
                        | _ => M.impossible (||)
                        end))
                ]
              |)))
          | _, _ => M.impossible
          end.
        
        Axiom AssociatedFunction_assign :
          forall (F : Ty.t),
          M.IsAssociatedFunction (Self F) "assign" (assign F).
      End Impl_delphinus_zkwasm_circuits_image_table_ImageTableChip_F.
    End assign.
  End image_table.
End circuits.
